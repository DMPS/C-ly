Index: apps/multicall/application.js
===================================================================
--- apps/multicall/application.js	(revision 62)
+++ apps/multicall/application.js	(working copy)
@@ -527,7 +527,7 @@
 function getUserMedia(call, mediatype) {
 	console.log('getUserMedia() ' + (call ? call.id() : ''));
 	if (!navigator.getUserMedia) {
-		navigator.getUserMedia = navigator.webkitGetUserMedia; // container app uses webkitGetUserMedia
+		navigator.getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
 		if (!navigator.getUserMedia) {
 			console.warn('Your browser does not support getUserMedia');
 		}
@@ -644,9 +644,6 @@
 	$('#Session0 input[name="user_login"], #Session0 input[name="user_password"]').attr('disabled', 'disabled');
 	$('#Call0 .buttons .callConnect, #Call0 .buttons .callEmptyConf').removeAttr('disabled');
 	$('#PageModeChat0 .buttons .sendPageModeChatMessage, #pageModeChatSend').removeAttr('disabled');
-	$('.apiAddressBook input').removeAttr('disabled');
-	//$('#Presence0 .status').html('OFFLINE');
-	$('#Presence0 .presenceUpdateBasic').attr('value', 'Go Online');
 }
 
 function session_onDisconnected(event) {
@@ -656,9 +653,6 @@
 
 	$('#Call0 .buttons input').attr('disabled', 'disabled');
 	$('#PageModeChat0 .buttons .sendPageModeChatMessage, #pageModeChatSend').attr('disabled', 'disabled');
-	$('.apiAddressBook input').attr('disabled', 'disabled');
-	$('#Presence0 .status').html('');
-	$('#Call0 .pullCall').attr('disabled', 'disabled').find('option:first').html('No UA found');
 
 	resetSessionUI();
 }
@@ -812,17 +806,21 @@
 		removeCallCallbacks(this);
 		break;
 	case CallStatus.UPGRADING:
-		/*
-		if (confirm('Allow camera/microphone for video upgrade?')) {
+		if (getSetting('orcaMulticall.vendor.alu.mediaOptions.autoUpgrade') === 'true') {
 			getUserMedia(this, 'video,audio');
 		} else {
-			callReject();
+			if(confirm('Allow camera/microphone for video upgrade?')){
+				getUserMedia(this, 'video,audio');
+			}
+			else{
+				callReject();
+			}
 		}
-		*/
-		getUserMedia(this, 'video,audio');
 		break;
 	case CallStatus.DOWNGRADING:
-		//alert('Video is downgraded to audio call. Please allow microphone for audio-only call!');
+		if (getSetting('orcaMulticall.vendor.alu.mediaOptions.autoUpgrade') !== 'true') {
+			alert('Video is downgraded to audio call. Please allow microphone for audio-only call!');
+		}
 		getUserMedia(this, 'audio');
 		break;
 	case CallStatus.HOLD:
@@ -938,11 +936,6 @@
 		}
 	}
 	// Reset recommended browser-specific setting (excluded from config.js)
-	if (navigator.userAgent.match(/firefox/i)) {
-		localStorage.setItem('orcaMulticall.vendor.alu.mediaOptions.useFirstCandidate', 'true');
-	} else {
-		localStorage.setItem('orcaMulticall.vendor.alu.mediaOptions.useFirstCandidate', 'false');
-	}
 	if (localStorage.getItem('orcaMulticall.vendor.alu.servContOptions.autoRegisterOnStartup') === 'false') {
 		localStorage.setItem('orcaMulticall.vendor.alu.servContOptions.autoAnswerTime', '0');
 	}
@@ -959,7 +952,15 @@
 
 var settingsAdvanced = [
 	{ui:'session_uri', storage:'orcaMulticall.session.sessionConfig.uri'},
+	{ui:'session_mediatypes', storage:'orcaMulticall.session.sessionConfig.mediatypes', type:'radio'},
 	{ui:'session_expires', storage:'orcaMulticall.vendor.alu.expires'},
+	{ui:'sendAuthOnInitReg', storage:'orcaMulticall.vendor.alu.sendAuthOnInitReg', type:'checkbox'},
+	{ui:'sendAuthOnReregDereg', storage:'orcaMulticall.vendor.alu.sendAuthOnReregDereg', type:'checkbox'},
+	{ui:'reUseCallidInReregDereg', storage:'orcaMulticall.vendor.alu.reUseCallidInReregDereg', type:'checkbox'},
+	{ui:'session_interfaceType', storage:'orcaMulticall.vendor.alu.interfaceType', type:'radio'},
+	{ui:'session_authenticationType', storage:'orcaMulticall.vendor.alu.authenticationType', type:'radio'},
+	{ui:'oauth_server_uri', storage:'orcaMulticall.vendor.alu.oauth_server_uri'},
+	{ui:'account_realm', storage:'orcaMulticall.vendor.alu.account.realm'},
 	{ui:'account_puidPrefix', storage:'orcaMulticall.vendor.alu.account.puidPrefix'},
 	{ui:'account_puidSuffix', storage:'orcaMulticall.vendor.alu.account.puidSuffix'},
 	{ui:'account_pridPrefix', storage:'orcaMulticall.vendor.alu.account.pridPrefix'},
@@ -966,11 +967,14 @@
 	{ui:'account_pridSuffix', storage:'orcaMulticall.vendor.alu.account.pridSuffix'},
 	{ui:'account_displayName', storage:'orcaMulticall.vendor.alu.account.displayName'},
 	{ui:'mediaOptions_stun', storage:'orcaMulticall.vendor.alu.mediaOptions.stun'},
+	{ui:'mediaOptions_bundle', storage:'orcaMulticall.vendor.alu.mediaOptions.bundle', type:'checkbox'},
 	{ui:'mediaOptions_crypto', storage:'orcaMulticall.vendor.alu.mediaOptions.crypto', type:'radio'},
 	{ui:'mediaOptions_addCodecs', storage:'orcaMulticall.vendor.alu.mediaOptions.addCodecs', type:'checkbox'},
+	{ui:'mediaOptions_persistentPC', storage:'orcaMulticall.vendor.alu.mediaOptions.persistentPC', type:'checkbox'},
 	{ui:'mediaOptions_dtmf', storage:'orcaMulticall.vendor.alu.mediaOptions.dtmf', type:'radio'},
 	{ui:'mediaOptions_dtmfDuration', storage:'orcaMulticall.vendor.alu.mediaOptions.dtmfDuration'},
 	{ui:'mediaOptions_dtmfGap', storage:'orcaMulticall.vendor.alu.mediaOptions.dtmfGap'},
+	{ui:'mediaOptions_dtmfWorkaround', storage:'orcaMulticall.vendor.alu.mediaOptions.dtmfWorkaround', type:'checkbox'},
 	{ui:'mediaOptions_audioBandwidth', storage:'orcaMulticall.vendor.alu.mediaOptions.audioBandwidth'},
 	{ui:'mediaOptions_videoBandwidth', storage:'orcaMulticall.vendor.alu.mediaOptions.videoBandwidth'},
 	{ui:'mediaOptions_dataBandwidth', storage:'orcaMulticall.vendor.alu.mediaOptions.dataBandwidth'},
@@ -981,7 +985,10 @@
 	{ui:'mediaOptions_useFirstCandidate', storage:'orcaMulticall.vendor.alu.mediaOptions.useFirstCandidate', type:'checkbox'},
 	{ui:'mediaOptions_removeIPV6Candidates', storage:'orcaMulticall.vendor.alu.mediaOptions.removeIPV6Candidates', type:'checkbox'},
 	{ui:'mediaOptions_msidHandling', storage:'orcaMulticall.vendor.alu.mediaOptions.msidHandling'},
+	{ui:'mediaOptions_enableIMDNCapability', storage:'orcaMulticall.vendor.alu.mediaOptions.enableIMDNCapability', type:'checkbox'},
+	{ui:'mediaOptions_autoUpgrade', storage:'orcaMulticall.vendor.alu.mediaOptions.autoUpgrade', type:'checkbox'},
 	{ui:'conferenceFactory', storage:'orcaMulticall.vendor.alu.conferenceFactory'},
+	{ui:'confworkaround_chrome', storage:'orcaMulticall.vendor.alu.confWorkaroundChrome', type:'checkbox'},
 	{ui:'servContOptions_autoRegisterOnStartup', storage:'orcaMulticall.vendor.alu.servContOptions.autoRegisterOnStartup', type:'checkbox'},
 	{ui:'servContOptions_autoAnswerTime', storage:'orcaMulticall.vendor.alu.servContOptions.autoAnswerTime'},
 	{ui:'servContOptions_maxRecoveryAttempts', storage:'orcaMulticall.vendor.alu.servContOptions.maxRecoveryAttempts'},
@@ -990,7 +997,16 @@
 	{ui:'servContOptions_registerResponseTime', storage:'orcaMulticall.vendor.alu.servContOptions.registerResponseTime'},
 	{ui:'servContOptions_registerRefreshTime', storage:'orcaMulticall.vendor.alu.servContOptions.registerRefreshTime'},
 	{ui:'mdspOptions_enableMDSPsupport', storage:'orcaMulticall.vendor.alu.mdsp.enableMDSPsupport', type:'checkbox'},
-	{ui:'mdspOptions_secondaryDeviceId', storage:'orcaMulticall.vendor.alu.mdsp.secondaryDeviceId'}
+	{ui:'mdspOptions_secondaryDeviceId', storage:'orcaMulticall.vendor.alu.mdsp.secondaryDeviceId'},
+	{ui:'ab_ContactServer', storage:'orcaMulticall.vendor.alu.abConfig.contactServer'},
+	{ui:'ab_baseAPIResPath', storage:'orcaMulticall.vendor.alu.abConfig.baseAPIResPath'},
+	{ui:'sso-auth-access-type', storage:'orcaMulticall.vendor.alu.ssoAuthConfig.accessType'},
+	{ui:'sso_auth_time_zone', storage:'orcaMulticall.vendor.alu.ssoAuthConfig.timeZone'},
+	{ui:'sso_auth_app_token', storage:'orcaMulticall.vendor.alu.ssoAuthConfig.appToken'},
+	{ui:'sso_auth_operating_system', storage:'orcaMulticall.vendor.alu.ssoAuthConfig.operatingSystem'},
+	{ui:'sso_auth_operating_system_version', storage:'orcaMulticall.vendor.alu.ssoAuthConfig.operatingSystemVersion'},
+	{ui:'sso_auth_application_version', storage:'orcaMulticall.vendor.alu.ssoAuthConfig.applicationVersion'},
+	{ui:'sso_auth_service_code', storage:'orcaMulticall.vendor.alu.ssoAuthConfig.serviceCode'}
 ];
 
 function loadSessionSettings(){
@@ -1234,6 +1250,9 @@
 		displayName: displayName
 	};
 	
+	var sendAuthOnInitReg = getSetting('orcaMulticall.vendor.alu.sendAuthOnInitReg') === 'true' ? true : false;
+	var sendAuthOnReregDereg = getSetting('orcaMulticall.vendor.alu.sendAuthOnReregDereg') === 'true' ? true : false;
+	var reUseCallidInReregDereg = getSetting('orcaMulticall.vendor.alu.reUseCallidInReregDereg') === 'true' ? true : false;
 	var stun = getSetting('orcaMulticall.vendor.alu.mediaOptions.stun') || '';
 	var bundle = getSetting('orcaMulticall.vendor.alu.mediaOptions.bundle') === 'true' ? true : false;
 	var crypto = getSetting('orcaMulticall.vendor.alu.mediaOptions.crypto') || '';
@@ -1243,6 +1262,7 @@
 	var dtmf = getSetting('orcaMulticall.vendor.alu.mediaOptions.dtmf') || 'inband';
 	var dtmfDuration = getSetting('orcaMulticall.vendor.alu.mediaOptions.dtmfDuration') || '';
 	var dtmfGap = getSetting('orcaMulticall.vendor.alu.mediaOptions.dtmfGap') || '';
+	var dtmfWorkaround = getSetting('orcaMulticall.vendor.alu.mediaOptions.dtmfWorkaround') === 'true' ? true : false;
 	var audioBandwidth = getSetting('orcaMulticall.vendor.alu.mediaOptions.audioBandwidth') || '';
 	var videoBandwidth = getSetting('orcaMulticall.vendor.alu.mediaOptions.videoBandwidth') || '';
 	var dataBandwidth = getSetting('orcaMulticall.vendor.alu.mediaOptions.dataBandwidth') || '';
@@ -1252,7 +1272,9 @@
 	var stripExtraSSRC = getSetting('orcaMulticall.vendor.alu.mediaOptions.stripExtraSSRC') === 'true' ? true : false;
 	var useFirstCandidate = getSetting('orcaMulticall.vendor.alu.mediaOptions.useFirstCandidate') === 'true' ? true : false;
 	var removeIPV6Candidates = getSetting('orcaMulticall.vendor.alu.mediaOptions.removeIPV6Candidates') === 'true' ? true : false;
-	var msidHandling = getSetting('orcaMulticall.vendor.alu.mediaOptions.msidHandling') || '1';
+	var msidHandling = getSetting('orcaMulticall.vendor.alu.mediaOptions.msidHandling') || '0';
+	var enableIMDNCapability = getSetting('orcaMulticall.vendor.alu.mediaOptions.enableIMDNCapability') === 'true' ? true : false;
+	var confWorkaroundChrome = getSetting('orcaMulticall.vendor.alu.confWorkaroundChrome') === 'true' ? true : false;
 	var autoRegisterOnStartup = getSetting('orcaMulticall.vendor.alu.servContOptions.autoRegisterOnStartup') === 'true' ? true : false;
 	var autoAnswerTime = getSetting('orcaMulticall.vendor.alu.servContOptions.autoAnswerTime') || '';
 	var maxRecoveryAttempts = getSetting('orcaMulticall.vendor.alu.servContOptions.maxRecoveryAttempts') || '';
@@ -1272,6 +1294,9 @@
 		mediatypes: mediatypes,
 		providerConfig: {
 			interfaceType: interfacetype,
+			sendAuthOnInitReg: sendAuthOnInitReg,
+			sendAuthOnReregDereg: sendAuthOnReregDereg,
+			reUseCallidInReregDereg: reUseCallidInReregDereg,
 			stun: stun,
 			bundle: bundle,
 			crypto: crypto,
@@ -1281,6 +1306,7 @@
 			dtmf: dtmf,
 			dtmfDuration:dtmfDuration,
 			dtmfGap:dtmfGap,
+			dtmfWorkaround: dtmfWorkaround,
 			audioBandwidth: audioBandwidth,
 			videoBandwidth: videoBandwidth,
 			dataBandwidth: dataBandwidth,
@@ -1290,7 +1316,9 @@
 			stripExtraSSRC: stripExtraSSRC,
 			useFirstCandidate: useFirstCandidate,
 			removeIPV6Candidates: removeIPV6Candidates,
+			enableIMDNCapability: enableIMDNCapability,
 			msidHandling: msidHandling,
+			confWorkaroundChrome: confWorkaroundChrome,
 			autoAnswerTime: autoAnswerTime,
 			maxRecoveryAttempts: maxRecoveryAttempts,
 			networkRetryInterval: networkRetryInterval,
@@ -1327,12 +1355,31 @@
 		$('head').append('<script type="text/javascript" src="../../cordova.js"></script>');
 		$('body').prepend('<a href="javascript:history.back()">Back</a>');
 		document.addEventListener('deviceready', function () {
-			if (cordova.logger) {
-				cordova.logger.level('DEBUG');
+			var rvtimer = false, rvwaiting = false;
+			if (window.cordova) {
+				if (cordova.logger) {
+					cordova.logger.level('DEBUG');
+				}
+				if (cordova.plugins && cordova.plugins.iosrtc) {
+					cordova.plugins.iosrtc.registerGlobals();
+					function refreshVideos() {
+						if (rvtimer === false) {
+							cordova.plugins.iosrtc.refreshVideos();
+							rvtimer = window.setTimeout(function () {
+								rvtimer = false;
+								if (rvwaiting) {
+									rvwaiting = false;
+									cordova.plugins.iosrtc.refreshVideos();
+								}
+							}, 300);
+						} else {
+							rvwaiting = true;
+						}
+					}
+					window.addEventListener('resize', refreshVideos);
+					window.addEventListener('scroll', refreshVideos);
+				}
 			}
-			if (cordova.plugins && cordova.plugins.iosrtc) {
-				cordova.plugins.iosrtc.registerGlobals();
-			}
 		}, false);
 	}
 
@@ -1655,7 +1702,7 @@
 				// Note that the hold/resume methods are only defined for an
 				// audio/video call so the test on c.hold/c.resume is also a test
 				// to see if a call object is audio/video as opposed to msrp.
-				if (c.hold && c._state !== 'disconnected' && c._state !== 'hold' && c._state !== 'remotehold') {
+				if (c.hold && c._state === 'connected') {
 					c.hold();
 				}
 			} else if (c.resume && c._state == 'hold' && !c._manualHold) { 
@@ -1721,10 +1768,6 @@
 };
 
 function event_notify(audioClip, notifyText, timeout){
-	if(navigator.userAgent.match(/(iPad|iPhone|iPod)/i)) {
-		console.log('no ringtone for ios devices');
-		return;
-	}
 	if(audioClip !== null){
 		ringtone = new Audio(audioClip);
 
@@ -1760,10 +1803,6 @@
 }
 
 function event_audio_caller(audioClip, timeout){
-	if(navigator.userAgent.match(/(iPad|iPhone|iPod)/i)) {
-		console.log('no ringtone for ios devices');
-		return;
-	}
 	if(audioClip !== null){
 		ringtone_caller = new Audio(audioClip);
 	}
Index: apps/multicall/config.js
===================================================================
--- apps/multicall/config.js	(revision 62)
+++ apps/multicall/config.js	(working copy)
@@ -1,15 +1,16 @@
 window.defaultConfig = {
 
 // Session parameters
-'orcaMulticall.session.sessionConfig.uri': 'wss://10.1.11.127:443',
-'orcaMulticall.session.sessionConfig.mediatypes': 'audio,video',
+'orcaMulticall.session.sessionConfig.uri': 'ws://10.1.11.127:80',
+'orcaMulticall.session.sessionConfig.mediatypes': 'audio',
 
 
 // Vendor parameters
-'orcaMulticall.vendor.alu.account.puidPrefix': 'sip:+1',
+'orcaMulticall.vendor.alu.account.puidPrefix': 'sip:',
 'orcaMulticall.vendor.alu.account.puidSuffix': '@sandbox.demo.alcatel-lucent.com',
 'orcaMulticall.vendor.alu.account.pridPrefix': '',
 'orcaMulticall.vendor.alu.account.pridSuffix': '',
+'orcaMulticall.vendor.alu.account.displayName': '',
 'orcaMulticall.vendor.alu.interfaceType': 'SIP-WS',
 'orcaMulticall.vendor.alu.authenticationType': 'IMS-Auth',
 'orcaMulticall.vendor.alu.mediaOptions.stun': '',
@@ -17,6 +18,10 @@
 'orcaMulticall.vendor.alu.mediaOptions.crypto': 'dtls-srtp', //'dtls-srtp' or 'sdes-srtp' by default
 'orcaMulticall.vendor.alu.conferenceFactory': 'sip:ALU_CONF@sandbox.demo.alcatel-lucent.com',
 'orcaMulticall.vendor.alu.expires': '600',
+'orcaMulticall.vendor.alu.crlfKeepAliveInterval': '0',
+'orcaMulticall.vendor.alu.sendAuthOnInitReg': 'false',
+'orcaMulticall.vendor.alu.sendAuthOnReregDereg': 'true',
+'orcaMulticall.vendor.alu.reUseCallidInReregDereg': 'true',
 'orcaMulticall.vendor.alu.mediaOptions.addCodecs': 'true', //boolean as string
 'orcaMulticall.vendor.alu.mediaOptions.persistentPC': 'true', 
 'orcaMulticall.vendor.alu.mediaOptions.refreshTiled': 'false',
@@ -23,6 +28,7 @@
 'orcaMulticall.vendor.alu.mediaOptions.dtmf': 'inband',
 'orcaMulticall.vendor.alu.mediaOptions.dtmfDuration': '100',
 'orcaMulticall.vendor.alu.mediaOptions.dtmfGap': '70',
+'orcaMulticall.vendor.alu.mediaOptions.dtmfWorkaround': 'true',
 'orcaMulticall.vendor.alu.mediaOptions.audioBandwidth': '',
 'orcaMulticall.vendor.alu.mediaOptions.videoBandwidth': '',
 'orcaMulticall.vendor.alu.mediaOptions.dataBandwidth': '',
@@ -30,16 +36,21 @@
 'orcaMulticall.vendor.alu.mediaOptions.videoCodecs': '',
 'orcaMulticall.vendor.alu.mediaOptions.breaker': 'false', //boolean as string
 'orcaMulticall.vendor.alu.mediaOptions.stripExtraSSRC': 'true', //boolean as string
+'orcaMulticall.vendor.alu.mediaOptions.useFirstCandidate': 'false',
 'orcaMulticall.vendor.alu.mediaOptions.removeIPV6Candidates': 'true', //boolean as string
-'orcaMulticall.vendor.alu.mediaOptions.replaceMSID': 'true', //boolean as string
+'orcaMulticall.vendor.alu.mediaOptions.msidHandling': '1',
+'orcaMulticall.vendor.alu.mediaOptions.enableIMDNCapability': 'true', //boolean as string
+'orcaMulticall.vendor.alu.mediaOptions.autoUpgrade': 'true',
 'orcaMulticall.vendor.alu.confWorkaroundChrome': 'false', //boolean as string
 'orcaMulticall.vendor.alu.servContOptions.autoRegisterOnStartup': 'false', // boolean as a string
-'orcaMulticall.vendor.alu.servContOptions.autoAnswerTime': '10', // in sec units (as a string)
+'orcaMulticall.vendor.alu.servContOptions.autoAnswerTime': '0', // in sec units (as a string)
 'orcaMulticall.vendor.alu.servContOptions.maxRecoveryAttempts': '0',
 'orcaMulticall.vendor.alu.servContOptions.networkRetryInterval': '0',
 'orcaMulticall.vendor.alu.servContOptions.sendRegisterOnRecovery': 'false', 
 'orcaMulticall.vendor.alu.servContOptions.registerResponseTime': '0', 
 'orcaMulticall.vendor.alu.servContOptions.registerRefreshTime': '0', 
+'orcaMulticall.vendor.alu.mdsp.enableMDSPsupport': 'false',
+'orcaMulticall.vendor.alu.mdsp.secondaryDeviceId': 'mobility="fixed"',
 
 // Address Book Config
 'orcaMulticall.vendor.alu.abConfig.contactServer': '',
@@ -46,8 +57,8 @@
 'orcaMulticall.vendor.alu.abConfig.baseAPIResPath': '',
 
 // User parameters (optional default user)
-'orcaMulticall.user.login': null,	//example: '5552223333'
+'orcaMulticall.user.login': '+442079590000',	//example: '5552223333'
 'orcaMulticall.user.password': null,	//example: 'password'
-'orcaMulticall.user.to': null	//example: '5552223333'
+'orcaMulticall.user.to': '+442079590001'	//example: '5552223333'
 
 };
Index: apps/multicall/index.html
===================================================================
--- apps/multicall/index.html	(revision 62)
+++ apps/multicall/index.html	(working copy)
@@ -9,31 +9,31 @@
 	<script type="text/javascript" src="../jquery.js"></script>
 	<script type="text/javascript" src="../jquery-ui.js"></script>
 	<link rel="stylesheet" href="style.css" type="text/css" media="screen" />
-	
-	<!-- Orca Min -->
-	<script type="text/javascript" src="../../orca.min.js"></script>
 
-	<!-- Orca Debug
-	<script type="text/javascript" src="../../msrp-stack/src/ChunkReceiver.js"></script>
-	<script type="text/javascript" src="../../msrp-stack/src/ChunkSender.js"></script>
-	<script type="text/javascript" src="../../msrp-stack/src/ConnectionConfig.js"></script>
-	<script type="text/javascript" src="../../msrp-stack/src/ContentType.js"></script>
-	<script type="text/javascript" src="../../msrp-stack/src/CPIMParser.js"></script>
-	<script type="text/javascript" src="../../msrp-stack/src/Exceptions.js"></script>
-	<script type="text/javascript" src="../../msrp-stack/src/Message.js"></script>
-	<script type="text/javascript" src="../../msrp-stack/src/parser.js"></script>
-	<script type="text/javascript" src="../../msrp-stack/src/Status.js"></script>
-	<script type="text/javascript" src="../../msrp-stack/src/Uri.js"></script>
-	<script type="text/javascript" src="../../msrp-stack/src/util.js"></script>
-	<script type="text/javascript" src="../../orca_version.js"></script>
-	<script type="text/javascript" src="../../orca.js"></script>
-	<script type="text/javascript" src="../../orcaALU.js"></script>
-	<script type="text/javascript" src="../../sip.js"></script>
-	<script type="text/javascript" src="../../sipMsrp.js"></script>
-	<script type="text/javascript" src="../../sipAdapter.js"></script>
-	<script type="text/javascript" src="../../restAdapter.js"></script>
-	-->
+		<!-- Orca Min -->
+		<script type="text/javascript" src="../../orca.min.js"></script>
 
+		<!-- Orca Debug
+		<script type="text/javascript" src="../../msrp-stack/src/ChunkReceiver.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/ChunkSender.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/ConnectionConfig.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/ContentType.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/CPIMParser.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/Exceptions.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/Message.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/parser.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/Status.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/Uri.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/util.js"></script>
+		<script type="text/javascript" src="../../orca_version.js"></script>
+		<script type="text/javascript" src="../../orca.js"></script>
+		<script type="text/javascript" src="../../orcaALU.js"></script>
+		<script type="text/javascript" src="../../sip.js"></script>
+		<script type="text/javascript" src="../../sipMsrp.js"></script>
+		<script type="text/javascript" src="../../sipAdapter.js"></script>
+		<script type="text/javascript" src="../../restAdapter.js"></script>
+		-->
+
 	<!-- Application Code -->
 	<script type="text/javascript" src="config.js"></script>
 	<script type="text/javascript" src="application.js"></script>
@@ -46,7 +46,7 @@
 			<h2>Session</h2>
 			<span class="status"></span>
             <p class="error"></p>
-            <p><label>Login <input type="text" name="user_login" placeholder="e.g. 3334441248" /></label>
+            <p><label>Login <input type="text" name="user_login" placeholder="e.g. +442079590000" /></label>
                 <label>Password <input type="password" name="user_password" /></label>
                 <span class="buttons">
                 <input type="button" class="sessionConnect" value="Connect" />
@@ -64,7 +64,7 @@
         <div id="Call0">
             <p class="status"></p>
             <p class="error"></p>
-            <p class="callState idle"><label>To <input type="text" name="call_to" placeholder="e.g. 3334441248" /></label></p>
+            <p class="callState idle"><label>To <input type="text" name="call_to" placeholder="e.g. +442079590001" /></label></p>
             <p class="callState idle">
             	<label><input type="radio" name="mediatype" value="audio,video" checked/> video</label>
             	<label><input type="radio" name="mediatype" value="audio"/> audio</label>
@@ -91,7 +91,7 @@
                 <label><input type="checkbox" name="call_hold_sendonly" /> sendonly hold</label>
             </p>
             <p class="callState connected msrpUnnecessary">
-                <input type="text" name="call_transfer" placeholder="transferee 10 digits" />
+                <input type="text" name="call_transfer" placeholder="transferee number" />
                 <input type="button" class="callTransfer" value="Transfer" />
             </p>
             <p class="callState connected msrpUnnecessary">
@@ -98,16 +98,20 @@
                 <input type="text" name="call_dtmf" placeholder="dtmf code" />
                 <input type="button" class="callDTMF" value="Send DTMF" />
             </p>
+            <!--
             <p class="callState connected conference msrpUnnecessary">
-                Conference participant: <input type="text" name="call_participant" placeholder="participant 10 digits" />
+                Conference participant: <input type="text" name="call_participant" placeholder="participant number" />
                 <input type="button" class="callAddParticipant" value="Add" />
                 <input type="button" class="callRemoveParticipant" value="Remove" />
             </p>
+            -->
             <p class="callState disconnected">Communication ended. <input type="button" class="callRemove" value="Remove tab" /></p>
             <p class="removePageModeChat"><input type="button" class="pageModeChatRemove" value="Remove tab" /></p>
             <p class="buttons">
                 <input type="button" class="callConnect" value="Connect" />
+                <!--
                 <input type="button" class="callEmptyConf" value="Empty conf call" />
+                -->
                 <input type="button" class="callDisconnect" value="Disconnect" />
                 <input type="button" class="callReject" value="Reject" />
             </p>
@@ -174,7 +178,14 @@
 	<h2 class="expander">Advanced Settings</h2>
 	<div class="expandable" id="AdvancedSettings">
 		<h3>Session Config</h3>
-		<p><label>Websocket URL <input type="text" name="session_uri" placeholder="e.g. ws://example.com:8080" class="longer" /></label></p>
+		<p><label>Websocket URL <input type="text" name="session_uri" placeholder="e.g. ws://example.com:8080" class="longer" /></label><br />
+			<small>(Use <strong>ws://...:80</strong> for insecure or <strong>wss://...:443</strong> for secure)</small></p>
+		<p>Default Media Types
+			<label><input type="radio" name="session_mediatypes" value="audio" />audio</label>
+			<label><input type="radio" name="session_mediatypes" value="audio,video"/>audio,video</label>
+		</p>
+		<p><label>Auto accept video upgrades/downgrades <input type="checkbox" name="mediaOptions_autoUpgrade" /></label></p>
+		<p><label>Use first ICE candidate <input type="checkbox" name="mediaOptions_useFirstCandidate" /></label></p>
 		<h3>Account</h3>
 		<p>Public ID: 
 			<input type="text" name="account_puidPrefix" placeholder="public id prefix" class="short"/> 
@@ -188,11 +199,11 @@
 		</p>
 		<p><label>Display Name <input type="text" name="account_displayName" placeholder="Smith PC1" /></label></p>
 
+		<h3 class="expander">More Options</h3>
+		<div class="expandable">
 		<h3>Conference Factory</h3>
 		<p><label>Conference Factory <input type="text" name="conferenceFactory" placeholder="e.g. sip:conference@example.com" class="longer" /></label></p>
-		
-		<h3 class="expander">More Options</h3>
-		<div class="expandable">
+		<p><label>Conf call workaround for Chrome <input type="checkbox" name="confworkaround_chrome" /></label></p>
 
 		<h3>Media</h3>
 		<p><label>STUN Server <input type="text" name="mediaOptions_stun" placeholder="e.g. stun.l.google.com:19302" class="longer" /></label></p>
@@ -199,8 +210,8 @@
 		<p><label>Crypto <input type="radio" name="mediaOptions_crypto"  value="sdes-srtp" checked/>SDES</label>
 			<label><input type="radio" name="mediaOptions_crypto" value="dtls-srtp"/>DTLS</label></p>
 		<p><label>Add missing webrtc audio (OPUS),video (VP8, red, ulpfec) codecs to incoming SDP offer/answer <input type="checkbox" name="mediaOptions_addCodecs" checked/></label></p>
-		<p><label>Use first ICE candidate (recommended for Firefox) <input type="checkbox" name="mediaOptions_useFirstCandidate" /></label></p>
 		<p><label>Remove IPV6 candidates <input type="checkbox" name="mediaOptions_removeIPV6Candidates" /></label></p>
+		<p><label>Enable IMDN Capability <input type="checkbox" name="mediaOptions_enableIMDNCapability" /></label></p>
 		<p>DTMF method
 			<label><input type="radio" name="mediaOptions_dtmf" value="inband" checked/> inband</label>
 			<label><input type="radio" name="mediaOptions_dtmf" value="sip"/> sip-info</label>
@@ -208,6 +219,7 @@
 		</p>
 		<p><label>DTMF duration <input type="text" name="mediaOptions_dtmfDuration" placeholder="e.g. 100" /></label></p>
 		<p><label>DTMF gap <input type="text" name="mediaOptions_dtmfGap" placeholder="e.g. 70" /></label></p>
+		<p><label>DTMF workaround for MRF <input type="checkbox" name="mediaOptions_dtmfWorkaround" /></label></p>
 		
 		<p><label>Audio bandwidth (kbps) <input type="text" name="mediaOptions_audioBandwidth" placeholder="e.g. 50" /></label></p>
 		<p><label>Video bandwidth (kbps) <input type="text" name="mediaOptions_videoBandwidth" placeholder="e.g. 256" /></label></p>
@@ -240,6 +252,7 @@
 			<p><label><input type="checkbox" name="mediaOptions_videoCodecs" value="rtx/90000" /> rtx/90000</label></p>
 			<p><label>Additional Video Codecs (comma separated list)<input type="text" name="mediaOptions_videoCodecs" class="longer" placeholder="e.g. vc1/90000,VP9/90000" /></label></p>
 		</blockquote>
+		<h3>Miscellaneous</h3>
 		<p><label>Breaker <input type="checkbox" name="mediaOptions_breaker" /></label></p>
 		<p><label>Strip Extra SSRC <input type="checkbox" name="mediaOptions_stripExtraSSRC" /></label></p>
 		<p><label>MSID Handling
Index: apps/multicall/style.css
===================================================================
--- apps/multicall/style.css	(revision 62)
+++ apps/multicall/style.css	(working copy)
@@ -162,6 +162,12 @@
 	height:330px;
 	margin-right: 20px;
 }
+@media (max-width: 462px) {
+	.remoteVideo {
+		width:296px;
+		height:222px;
+	}
+}
 
 .localVideo {
 	border: 1px solid #333;
@@ -222,12 +228,50 @@
     }
 }
 
-@media (max-width: 630px) {
+/*
+@media (min-width: 701px) {
+    .apiSession, .apiCommunication {
+        width: 55%;
+    }
+    .apiAddressBook {
+        padding: 30px;
+        position: absolute;
+        top: 0;
+        right: 0;
+        width: 35%;
+    }
+    .advsettings{
+        float: left;
+        width: 55%;
+    }
+}
+*/
+
+@media (max-width: 1100px) {
     .longer {
         width: 90%;
     }
 }
 
+.listsMembers {
+	border: 1px solid #ccc;
+	background: #fafafa;
+	padding: 10px 20px 20px 20px;
+	margin-top: 10px;
+	margin-bottom: 10px;
+	border-radius: 10px;
+}
+
+.listsMembers button {
+	height: 23px;
+	padding: 3px;
+	font-size:0.9em;
+}
+
+.listsMembers button:hover{
+	background: #ccc;
+}
+
 #WebSocketCertificatePrompt {
 	position: relative;
 	border: 1px solid #ff0000;
Index: apps/simple/application.js
===================================================================
--- apps/simple/application.js	(revision 62)
+++ apps/simple/application.js	(working copy)
@@ -9,12 +9,13 @@
     /***** Config *****/
     
     config = {
-        webrtcGateway: 'wss://10.1.11.127:443',
-        publicIdPrefix: 'sip:+1',
+        webrtcGateway: 'ws://10.1.11.127:80',
+        publicIdPrefix: 'sip:',
         publicIdSuffix: '@sandbox.demo.alcatel-lucent.com',
         privateIdPrefix: '',
         privateIdSuffix: '',
-        conferenceFactory: 'sip:ALU_CONF@sandbox.demo.alcatel-lucent.com'
+        conferenceFactory: 'sip:ALU_CONF@sandbox.demo.alcatel-lucent.com',
+        crypto: 'dtls-srtp' //'sdes-srtp' or 'dtls-srtp'
     };
     
     
@@ -24,17 +25,19 @@
         var userID, token, sessionConfig;
         
         // Define settings and credentials
-        userID = config.publicIdPrefix + txtLogin.value + config.publicIdSuffix;  // User's public ID (example: sip:+19995550001@example.com)
+        userID = config.publicIdPrefix + txtLogin.value + config.publicIdSuffix;  // User's public ID (example: sip:+442079590000@example.com)
         token = {
-            id: config.privateIdPrefix + txtLogin.value + config.privateIdSuffix, // User's private ID (example: 9995550001)
-            key: txtPassword.value      // User's password
+            id: config.privateIdPrefix + txtLogin.value + config.privateIdSuffix, // User's private ID (example: +442079590000)
+            key: txtPassword.value,     // User's password
+            displayName: txtLogin.value // User's display name (optional)
         };
         sessionConfig = {
             uri: config.webrtcGateway,  // WebRTC gateway server
             provider: orcaALU,          // Reference to Orca ALU code object
-            mediatypes: 'audio,video',  // Allow audio and video communications
-            providerConfig: {
-                conferenceFactoryURI: config.conferenceFactory // Conference factory
+            mediatypes: 'audio',        // Default to audio if incoming call does not specify
+            providerConfig: {           // Set any advanced settings here
+                conferenceFactoryURI: config.conferenceFactory, // Conference factory
+                crypto: config.crypto   // Key management protocol
             }
         };
         
@@ -73,7 +76,7 @@
             addLog('session.onError', arguments);
             errSession.innerHTML = error;
             this.onDisconnected();
-			checkWSS();
+            checkWSS();
         };
         session.onIncoming = function (receivedCall, event) {
             // Receiving an incoming call
@@ -238,7 +241,7 @@
         var to, mediatypes;
     
         // Define call parameters
-        to = config.publicIdPrefix + txtCallTo.value + config.publicIdSuffix; // Public ID to call (example: sip:+19995550002@example.com)
+        to = config.publicIdPrefix + txtCallTo.value + config.publicIdSuffix; // Public ID to call (example: sip:+442079590001@example.com)
         mediatypes = 'audio,video'; // Type of media to invite ('audio', 'video', or 'audio,video')
         
         // Create Call
@@ -302,17 +305,58 @@
 
     /***** Initialize UI *****/
     
-    if (!navigator.getUserMedia) {
-        navigator.getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
+    window.setTimeout(function () {
         if (!navigator.getUserMedia) {
-            window.alert('getUserMedia is not supported by your browser. Please use the latest Chrome or Firefox.');
+            navigator.getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
+            if (!navigator.getUserMedia) {
+                window.alert('getUserMedia is not supported by your browser. Please use the latest Chrome or Firefox.');
+            }
         }
-    }
+    }, 3000);
     
     window.addEventListener('load', function onPageLoad() {
         var i, el;
         document.removeEventListener('load', onPageLoad);
         
+        // If container app, load Cordova
+        if (!navigator.getUserMedia && navigator.userAgent.match(/Android|iPad|iPhone|iPod/i)) {
+            el = document.createElement('script');
+            el.type = 'text/javascript';
+            el.src = '../../cordova.js';
+            document.head.appendChild(el);
+            el = document.createElement('a');
+            el.href = 'javascript:history.back()';
+            el.innerHTML = 'Back';
+            document.body.insertBefore(el, document.body.firstChild);
+            document.addEventListener('deviceready', function () {
+                var rvtimer = false, rvwaiting = false;
+                if (window.cordova) {
+                    if (cordova.logger) {
+                        cordova.logger.level('DEBUG');
+                    }
+                    if (cordova.plugins && cordova.plugins.iosrtc) {
+                        cordova.plugins.iosrtc.registerGlobals();
+                        function refreshVideos() {
+                            if (rvtimer === false) {
+                                cordova.plugins.iosrtc.refreshVideos();
+                                rvtimer = window.setTimeout(function () {
+                                    rvtimer = false;
+                                    if (rvwaiting) {
+                                        rvwaiting = false;
+                                        cordova.plugins.iosrtc.refreshVideos();
+                                    }
+                                }, 300);
+                            } else {
+                                rvwaiting = true;
+                            }
+                        }
+                        window.addEventListener('resize', refreshVideos);
+                        window.addEventListener('scroll', refreshVideos);
+                    }
+                }
+            }, false);
+        }
+        
         // Get elements
         txtLogin = document.getElementsByName('txtLogin')[0];
         txtPassword = document.getElementsByName('txtPassword')[0];
@@ -397,44 +441,44 @@
         elLogs.value += '\r\n' + message + a;
         elLogs.scrollTop = elLogs.scrollHeight;
     };
-	
-	checkWSS = function () {
-		// Prompt to accept certificate
-		var ws, id, server;
-		id = 'WebSocketCertificatePrompt';
-		server = config.webrtcGateway;
-		function closePrompt() {
-			var notice = document.getElementById(id);
-			if (notice) {
-				notice.getElementsByTagName('button')[0].removeEventListener('click', closePrompt);
-				notice.parentNode.removeChild(notice);
-			}
-		};
-		closePrompt();
-		if (server && server.toLowerCase().indexOf('wss:') > -1) {
-			ws = new WebSocket(server, ['sip']);
-			ws.onopen = function () {
-				this.close();
-			};
-			ws.onerror = function () {
-				var notice, closer;
-				closePrompt();
-				server = server.replace(/^wss/i, 'https');
-				notice = document.createElement('div');
-				notice.id = id;
-				notice.innerHTML = 'WebSocket server may need certificate approval. Approve certificate at '
-					+ '<a href="' + server + '" target="_blank">' + server + '</a> before login.<br>'
-					+ '<small>Approving the certificate will not redirect you and may appear &quot;stuck&quot; '
-					+ 'even though it worked. Simply close that tab afterward.</small>';
-				closer = document.createElement('button');
-				closer.innerHTML = 'X';
-				closer.addEventListener('click', closePrompt);
-				notice.appendChild(closer);
-				document.body.insertBefore(notice, document.body.firstChild);
-			};
-		}
-	}
     
+    checkWSS = function () {
+        // Prompt to accept certificate
+        var ws, id, server;
+        id = 'WebSocketCertificatePrompt';
+        server = config.webrtcGateway;
+        function closePrompt() {
+            var notice = document.getElementById(id);
+            if (notice) {
+                notice.getElementsByTagName('button')[0].removeEventListener('click', closePrompt);
+                notice.parentNode.removeChild(notice);
+            }
+        };
+        closePrompt();
+        if (server && server.toLowerCase().indexOf('wss:') > -1) {
+            ws = new WebSocket(server, ['sip']);
+            ws.onopen = function () {
+                this.close();
+            };
+            ws.onerror = function () {
+                var notice, closer;
+                closePrompt();
+                server = server.replace(/^wss/i, 'https');
+                notice = document.createElement('div');
+                notice.id = id;
+                notice.innerHTML = 'WebSocket server may need certificate approval. Approve certificate at '
+                    + '<a href="' + server + '" target="_blank">' + server + '</a> before login.<br>'
+                    + '<small>Approving the certificate will not redirect you and may appear &quot;stuck&quot; '
+                    + 'even though it worked. Simply close that tab afterward.</small>';
+                closer = document.createElement('button');
+                closer.innerHTML = 'X';
+                closer.addEventListener('click', closePrompt);
+                notice.appendChild(closer);
+                document.body.insertBefore(notice, document.body.firstChild);
+            };
+        }
+    }
+    
     noop = function () {};
     
 }(window.orca, window.orcaALU,  window.SessionStatus,  window.CallStatus));
Index: apps/simple/index.html
===================================================================
--- apps/simple/index.html	(revision 62)
+++ apps/simple/index.html	(working copy)
@@ -5,20 +5,31 @@
         <title>Simple Orca Example App</title>
         
         <!-- Orca ALU library -->
-	
+
 		<!-- Orca Min -->
 		<script type="text/javascript" src="../../orca.min.js"></script>
 
-		<!-- Orca Debug -->
-		<!--
-        <script type="text/javascript" src="../../orca_version.js"></script>
-        <script type="text/javascript" src="../../orca.js"></script>
-        <script type="text/javascript" src="../../orcaALU.js"></script>
-        <script type="text/javascript" src="../../sip.js"></script>
-        <script type="text/javascript" src="../../sipAdapter.js"></script>
-        <script type="text/javascript" src="../../restAdapter.js"></script>
+		<!-- Orca Debug
+		<script type="text/javascript" src="../../msrp-stack/src/ChunkReceiver.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/ChunkSender.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/ConnectionConfig.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/ContentType.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/CPIMParser.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/Exceptions.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/Message.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/parser.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/Status.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/Uri.js"></script>
+		<script type="text/javascript" src="../../msrp-stack/src/util.js"></script>
+		<script type="text/javascript" src="../../orca_version.js"></script>
+		<script type="text/javascript" src="../../orca.js"></script>
+		<script type="text/javascript" src="../../orcaALU.js"></script>
+		<script type="text/javascript" src="../../sip.js"></script>
+		<script type="text/javascript" src="../../sipMsrp.js"></script>
+		<script type="text/javascript" src="../../sipAdapter.js"></script>
+		<script type="text/javascript" src="../../restAdapter.js"></script>
 		-->
-        
+
         <!-- App Code -->
         <script type="text/javascript" src="application.js"></script>
         
Index: index.html
===================================================================
--- index.html	(revision 62)
+++ index.html	(working copy)
@@ -1,28 +1,24 @@
 <!DOCTYPE html>
 <html>
 <head>
-    <title>Orca ALU Developer's Guide</title>
+    <title>Orca ALU Developer Guide</title>
 </head>
 <body>
 <div class="bookmarks"></div>
 <div class="container">
-    <h1 class="bm" id="start">Orca ALU Developer's Guide</h1>
-    <p>Orca.js is an API for simplifying WebRTC communications. For example, this code registers with the server and then starts a video call.</p>
-        
-<pre><code>var session = orca.createSession("sip:me@example.com", token, sessionConfig);
-session.onConnected = function (event) {
-    var call = session.createCall("sip:myfriend@example.com", "audio,video");
-    call.addStream(stream); // Local stream from getUserMedia
-    call.connect();
-}; 
-session.connect();</code></pre>
+    <h1 class="bm" id="start">Orca ALU Developer Guide</h1>
+    <p>Orca.js is a JavaScript library including WebRTC calling, chat, and file transfer.
     
-    <h2 class="bm" id="documentation">Sample Apps and Documentation</h2>
+    <h2 class="bm" id="sampleapps">Sample Apps</h2>
+    <ul class="largelinks">
+        <li><a href="apps/simple/index.html"><strong>Simple Example App</strong></a> is easy-to-follow code for registration and simple calling. Excerpts from this code are used in the developer walkthrough below.</li>
+        <li><a href="apps/multicall/index.html"><strong>MultiCall App</strong></a> is a test app that demonstrates the full range of Orca ALU features.</li>
+        <li><a href="apps/carforward/index.html"><strong>Car Forward App</strong></a> is a demo that shows call forwarding between a mobile device and a car device. Optionally, this can use cordova-plugin-ibeacon to detect beacons on iOS and Android.</li>
+    </ul>
+    
+    <h2 class="bm" id="documentation">Documentation</h2>
     <ul>
-        <li><a href="orcabt.zip"><strong>ZIP of all files</strong></a></li>
-        <li><a href="apps/simple/"><strong>Simple Example App</strong></a> is easy-to-follow code for registration and simple calling. Excerpts from this code are used in the developer walkthrough below.</li>
-        <li><a href="apps/multicall/"><strong>MultiCall App</strong></a> is a test app that demonstrates the full range of Orca ALU features.</li>
-        <li><a href="doc/"><strong>Full API reference (JSDoc)</strong></a></li>
+        <li><a href="doc/index.html"><strong>Full API reference (JSDoc)</strong></a></li>
     </ul>
     
     <h2 class="bm" id="walkthrough">Developer Walkthrough</h2>
@@ -33,23 +29,22 @@
 <pre><code>&lt;script type="text/javascript" src="<a href="orca.min.js">orca.min.js</a>"&gt;&lt;/script&gt;</code></pre>
     
     <h3 class="bm" id="create-session">Create a Session</h3>
-    <p>A Session represents a user's IMS registration, and must be connected before using any calling or communication features.</p>
+    <p>A Session represents a user's SIP registration, and must be connected before using any calling or communication features.</p>
     
 <pre><code>var userID, token, sessionConfig, session;
 
 // Define settings and credentials
-<a href="doc/global.html#userid">userID</a> = 'sip:+19995550001@example.com';    // User's public ID
+<a href="doc/global.html#userid">userID</a> = 'sip:+442079590000@sandbox.demo.alcatel-lucent.com';    // User's public ID
 <a href="doc/global.html#token">token</a> = {
-    id: '9995550001',               // User's private ID
-    key: 'password'                 // User's password
+    id: '+442079590000',            // User's private ID
+    key: 'password',                // User's password
+    displayName: 'Bob'              // User's display name (optional)
 };
 <a href="doc/global.html#SessionConfig">sessionConfig</a> = {
-    uri: 'ws://example.com:8080',   // WebRTC gateway server
+    uri: 'ws://10.1.11.127:80',     // WebRTC gateway server (or use wss://...:443 for secure)
     provider: orcaALU,              // Reference to Orca ALU code object
-    mediatypes: 'audio,video',      // Allow audio and video communications
-    providerConfig: {
-        conferenceFactoryURI: 'sip:ALU_CONF@example.com'  // Conference factory
-    }
+    mediatypes: 'audio',            // Default to audio if incoming call does not specify
+    providerConfig: {}              // Set any advanced settings here
 };
 
 // Create Session
@@ -89,30 +84,31 @@
 <pre><code>var to, mediatypes, call;
 
 // Define call parameters
-to = 'sip:+19995550002@example.com';    // Public ID to call
+to = 'sip:+442079590001@sandbox.demo.alcatel-lucent.com';  // Public ID to call
 mediatypes = 'audio,video';             // Type of media to invite
 
 // Create Call
-call = session.createCall(to, mediatypes);
+call = session.<a href="doc/orca.Session.html#createCall">createCall</a>(to, mediatypes);
 
 // Attach Call callbacks
-call.onConnected = function (event) {
+call.<a href="doc/orca.Call.html#event:onConnected">onConnected</a> = function (event) {
     // Successfully connected to other party
 };
-call.onDisconnected = function (event) {
+call.<a href="doc/orca.Call.html#event:onDisconnected">onDisconnected</a> = function (event) {
     // The call has been disconnected
 };
-call.onAddStream = function (managedStream, event) {
+call.<a href="doc/orca.Call.html#event:onAddStream">onAddStream</a> = function (managedStream, event) {
     // A stream from the remote party has been received
     
-    // Display remote stream in UI 
+    // Display remote stream in video element
+    // Example: &lt;video id="vidRemote" autoplay="autoplay"&gt;&lt;/video&gt;
     document.getElementById('vidRemote').src = window.URL.createObjectURL(managedStream.stream());
 };
-call.onError = function (error, event) {
-    // Call error. See CallError in orca.js for possible errors.
+call.<a href="doc/orca.Call.html#event:onError">onError</a> = function (error, event) {
+    // Call error. See <a href="doc/global.html#CallError">CallError</a> in orca.js for possible errors.
 };
-call.onStatus = function (status, event) {
-    // A status event has occurred. See CallStatus in orca.js for possible statuses.
+call.<a href="doc/orca.Call.html#event:onStatus">onStatus</a> = function (status, event) {
+    // Call status change. See <a href="doc/global.html#CallStatus">CallStatus</a> in orca.js for possible statuses.
 }
 
 // Add local media stream, then connect
@@ -122,12 +118,13 @@
         // Successfully got local stream
 
         // Add local media stream
-        call.addStream(stream);
+        call.<a href="doc/orca.Call.html#addStream">addStream</a>(stream);
         
         // Connect Call
-        call.connect();
+        call.<a href="doc/orca.Call.html#connect">connect</a>();
 
-        // Display local stream in UI
+        // Display local stream in a video element
+        // Example: &lt;video id="vidLocal" autoplay="autoplay" muted="muted"&gt;&lt;/video&gt;
         document.getElementById('vidLocal').src = window.URL.createObjectURL(stream);
     },
     function (error) {
@@ -149,7 +146,8 @@
     
     <p>Below is a simplistic example where an incoming call causes a pop-up box to appear.</p>
     
-<pre><code>session.onIncoming = function (receivedCall, event) {
+<pre><code>// Attach this callback after orca.createSession...
+session.onIncoming = function (receivedCall, event) {
     // Receiving an incoming call
     incomingCall = receivedCall;
     
@@ -168,7 +166,7 @@
     <p>Rejecting an incoming call will cause both parties to receive <code>Call.onDisconnected</code> events.</p>
     
 <pre><code>function callReject() {
-    incomingCall.reject();
+    incomingCall.<a href="doc/orca.Call.html#reject">reject</a>();
 }</code></pre>
     
     <h4>Accept Incoming Call</h4>
@@ -180,23 +178,24 @@
     call = incomingCall;
     
     // Attach Call callbacks
-    call.onConnected = function (event) {
+    call.<a href="doc/orca.Call.html#event:onConnected">onConnected</a> = function (event) {
         // Successfully connected to other party
     };
-    call.onDisconnected = function (event) {
+    call.<a href="doc/orca.Call.html#event:onDisconnected">onDisconnected</a> = function (event) {
         // The call has been disconnected
     };
-    call.onAddStream = function (managedStream, event) {
+    call.<a href="doc/orca.Call.html#event:onAddStream">onAddStream</a> = function (managedStream, event) {
         // A stream from the remote party has been received
 
-        // Display remote stream in UI 
+        // Display remote stream in video element
+        // Example: &lt;video id="vidRemote" autoplay="autoplay"&gt;&lt;/video&gt; 
         document.getElementById('vidRemote').src = window.URL.createObjectURL(managedStream.stream());
     };
-    call.onError = function (error, event) {
-        // Call error. See CallError in orca.js for possible errors.
+    call.<a href="doc/orca.Call.html#event:onError">onError</a> = function (error, event) {
+        // Call error. See <a href="doc/global.html#CallError">CallError</a> in orca.js for possible errors.
     };
-    call.onStatus = function (status, event) {
-        // A status event has occurred. See CallStatus in orca.js for possible statuses.
+    call.<a href="doc/orca.Call.html#event:onStatus">onStatus</a> = function (status, event) {
+        // Call status change. See <a href="doc/global.html#CallStatus">CallStatus</a> in orca.js for possible statuses.
     }
 
     // Add local media stream, then connect
@@ -206,12 +205,13 @@
             // Successfully got local stream
 
             // Add local media stream
-            call.addStream(stream);
+            call.<a href="doc/orca.Call.html#addStream">addStream</a>(stream);
 
             // Connect Call
-            call.connect();
+            call.<a href="doc/orca.Call.html#connect">connect</a>();
 
-            // Display local stream in UI
+            // Display local stream in a video element
+            // Example: &lt;video id="vidLocal" autoplay="autoplay" muted="muted"&gt;&lt;/video&gt;
             document.getElementById('vidLocal').src = window.URL.createObjectURL(stream);
         },
         function (error) {
@@ -224,34 +224,39 @@
     <h3 class="bm" id="disconnecting">Disconnecting</h3>
     
     <p>A Session or Call can be ended by invoking its <code>disconnect</code> method. Once successfully torn down, the object's <code>onDisconnected</code> callback will be invoked, and its status will change to <code>DISCONNECTED</code>.</p>
+    <p>If a Session becomes disconnected, then any active Calls created from that Session will also be disconnected.</p>
+    <p>Refer to <code><a href="doc/orca.Call.html#disconnect">Call.disconnect</a>, <a href="doc/orca.Call.html#event:onDisconnected">Call.onDisconnected</a>, <a href="doc/orca.Session.html#disconnect">Session.disconnect</a>, <a href="doc/orca.Session.html#event:onDisconnected">Session.onDisconnected</a></code>.
     
     <h3 class="bm" id="in-call-functions">In-Call Functions</h3>
     
     <p>While the call is in a connected state, there is a set of in-call functions that may be used: mute/unmute, transfer, hold/resume, upgrade/downgrade, and DTMF.</p>
     
-    <h4><a href="doc/orca.Call.html#mute">Mute</a>/<a href="doc/orca.Call.html#unmute">Unmute</a></h4>
+    <h4>Mute/Unmute</h4>
     
     <p>These are convenience functions to stop and resume the user's outgoing media stream. When muted, stream is still being sent, but data from the user's webcam and microphone are not transmitted over it.</p>
     
-<pre><code>call.mute();
-call.unmute();</code></pre>
+<pre><code>// I want to stop sending my media
+call.<a href="doc/orca.Call.html#mute">mute</a>();
 
-    <h4><a href="doc/orca.Call.html#transfer">Transfer</a></h4>
+// I want to start sending my media again
+call.<a href="doc/orca.Call.html#unmute">unmute</a>();</code></pre>
+
+    <h4>Transfer</h4>
     
-    <p>Orca supports unattended call transfer. Suppose User A and User B are in a call. User A transfers the call to User C, using the code below. As a result, User A is disconnected from the call, User B is alone but still connected to the call, and User C receives an incoming call. When User C answers the call, User B and User C will be connected.</p>
+    <p>Orca supports unattended call transfer. Suppose User A and User B are in a call. User A transfers the call to User C. As a result, User A is disconnected from the call, User B is alone but still connected to the call, and User C receives an incoming call. When User C answers the call, User B and User C will be connected.</p>
+<pre><code>// Suppose +442079590000 and +442079590001 are in a call.
+// If +442079590000 performs the transfer below, then it will drop
+// and +442079590001 and +442079590002 will be connected instead.
+
+call.<a href="doc/orca.Call.html#transfer">transfer</a>('sip:+442079590002@sandbox.demo.alcatel-lucent.com');
+</code></pre>
     
-    <h4><a href="doc/orca.Call.html#hold">Hold</a>/<a href="doc/orca.Call.html#resume">Resume</a></h4>
+    <h4>Hold/Resume</h4>
     
     <p>Suppose User A and User B are in a call. User A places User B on hold with the <code>Call.hold</code> function. User A will receive a <code>CallStatus.HOLD</code> status event, and User B will receive a <code>CallStatus.REMOTE_HOLD</code> status event. At this point, User B cannot remove himself from hold, but he can still disconnect from the call if he so chooses. User A then takes User B off of hold using the <code>Call.resume</code> function. Both users receive a <code>CallStatus.UNHOLD</code> status event.</p>
-    
-<pre><code>// To put the remote party on hold
-call.hold();
-
-// To take the remote party off hold
-call.resume();
-
-// To handle hold-related status events
-call.onStatus = function (status, event) {
+    <p>Use the <code><a href="doc/orca.Call.html#event:onStatus">Call.onStatus</a></code> event to be notified of changes in the hold status:</p>
+<pre><code>// Attach this callback after creating or receiving the call
+call.<a href="doc/orca.Call.html#event:onStatus">onStatus</a> = function (status, event) {
     switch (status) {
     case CallStatus.HOLD:
         // I have put the remote party on hold
@@ -264,7 +269,15 @@
         break;
     // Handle other statuses here
     }
-};</code></pre>
+};
+</code></pre>
+    <p>During an active call, the user can attempt to put the other party on or off hold:</p>
+<pre><code>// To put the remote party on hold
+call.<a href="doc/orca.Call.html#hold">hold</a>();
+
+// To take the remote party off hold
+call.<a href="doc/orca.Call.html#resume">resume</a>();
+</code></pre>
     
     <h4>Upgrade/Downgrade</h4>
     
@@ -277,12 +290,34 @@
             // Successfully got local stream
 
             // Add local media stream
-            call.addStream(stream);
+            call.<a href="doc/orca.Call.html#addStream">addStream</a>(stream);
 
             // Connect Call
-            call.connect();
+            call.<a href="doc/orca.Call.html#connect">connect</a>();
+        },
+        function (error) {
+            // Failed to get local stream
+            window.alert('getUserMedia failed. Error: ' + error.name);
+        }
+    );
+}</code></pre>
+    
+    <p>Likewise, an audio-only call may be upgraded to an audiovideo call. Note the only difference is the type of local media requested.</p>
+    
+<pre><code>function callUpgrade() {
+    navigator.getUserMedia(
+        { video: true, audio: true }, // Type of local media to get
+        function (stream) {
+            // Successfully got local stream
 
-            // Display local stream in UI
+            // Add local media stream
+            call.<a href="doc/orca.Call.html#addStream">addStream</a>(stream);
+
+            // Connect Call
+            call.<a href="doc/orca.Call.html#connect">connect</a>();
+
+            // Display local stream in a video element
+            // Example: &lt;video id="vidLocal" autoplay="autoplay" muted="muted"&gt;&lt;/video&gt;
             document.getElementById('vidLocal').src = window.URL.createObjectURL(stream);
         },
         function (error) {
@@ -292,11 +327,10 @@
     );
 }</code></pre>
 
-    <p>Code to upgrade from an audio only call to an audiovideo call would be the same, except using the constraints <code>{ video: true, audio: true }</code>.</p>
-
     <p>Orca will notify the other party that the media type has changed via the <code>CallStatus.UPGRADING</code> or <code>CallStatus.DOWNGRADING</code> status event. The other party should then modify their own local stream to match. Here is an example of setting the <code>Call.onStatus</code> callback to handle the upgrading/downgrading statuses.</p>
     
-<pre><code>call.onStatus = function (status, event) {
+<pre><code>// Attach this callback after creating or receiving the call
+call.<a href="doc/orca.Call.html#event:onStatus">onStatus</a> = function (status, event) {
     switch (status) {
     case CallStatus.UPGRADING:
         if (window.confirm('The other person wants to upgrade to an audiovideo call.'
@@ -315,14 +349,17 @@
     }
 };</code></pre>
     
-<pre><code>call.transfer('sip:User_C@example.com');</code></pre>
+    <h4>Send DTMF</h4>
     
-    <h4><a href="doc/orca.Call.html#sendDTMF">Send DTMF</a></h4>
-    
     <p>Orca supports sending DTMF. However, it does not support receiving DTMF, so there are limited applications for this. Send DTMF is mostly used for human-to-machine calling, where the machine requests that the user enters some digits via the phone keypad.</p>
     
-<pre><code>call.sendDTMF('123#*');</code></pre>
+<pre><code>call.<a href="doc/orca.Call.html#sendDTMF">sendDTMF</a>('123#*');</code></pre>
     
+<!--
+NOTE: The Conference Call feature described below requires advanced conferencing accounts.
+Currently the API Developer Program is recommending the use of non-advanced conferencing accounts
+which are compatible with Call Control and Call Direction APIs.
+
     <h3 class="bm" id="conference">Conference Call</h3>
     
     <p>A conference call is created in the same way as a regular call, only with a list of two or more participants passed into <code>Session.createCall</code>.</p>
@@ -347,30 +384,233 @@
 call.addParticipant('sip:dewey@example.com');
 call.addParticipant('sip:louie@example.com');
 </code></pre>
+-->
     
     <h3 class="bm" id="pagemodechat">Page Mode Chat</h3>
-	<p>A page mode chat is a single message sent to another user. To send a page mode chat message:</p>
-	<pre><code>session.<a href="doc/orca.Session.html#sendPageModeChatMessage">sendPageModeChatMessage</a>('sip:+19995550002@example.com', 'How was the meeting?');</code></pre>
+	<p>A page mode chat is a single message sent to another user. As with calls, both parties must be online with Sessions in the connected state.</p>
 	<p>The following Session callbacks are used to receive page mode chat messages, and to check if a sent message failed.</p>
-	<pre><code>session.<a href="doc/orca.Session.html#event:onIncomingPageModeChat">onIncomingPageModeChat</a> = function (event) {
-    // Received page mode chat. event.from is the sender's SIP URI. event.message is the message content string.
+	<pre><code>// Attach these callbacks after orca.createSession...
+session.<a href="doc/orca.Session.html#event:onIncomingPageModeChat">onIncomingPageModeChat</a> = function (event) {
+    // Received page mode chat.
+    // event.from is the sender's SIP URI.
+    // event.message is the message content string.
 };
 session.<a href="doc/orca.Session.html#event:onPageModeChatMessageFailed">onPageModeChatMessageFailed</a> = function (message, event) {
-    // Failed to send page mode chat. message is the content string that could not be sent. event.to is the recipient.
+    // Failed to send page mode chat.
+    // message is the content string that could not be sent.
+    // event.to is the recipient.
 };
+</code></pre>To send a page mode chat message to another user:</p>
+	<pre><code>session.<a href="doc/orca.Session.html#sendPageModeChatMessage">sendPageModeChatMessage</a>(
+    'sip:+442079590001@sandbox.demo.alcatel-lucent.com',
+    'How was the meeting?'
+);</code></pre>
+
+    <h3 class="bm" id="chat">Chat</h3>
+	<p>In a Chat, two users can send textual messages to each other over a WebRTC DataChannel.</p>
+	<p>An incoming Chat is received via event callback <code><a href="doc/orca.Session.html#event:onIncomingChat">Session.onIncomingChat</a></code>:</p>
+	<pre><code>// Attach this callback after orca.createSession...
+session.<a href="doc/orca.Session.html#event:onIncomingChat">onIncomingChat</a> = function (incomingChat, event) {
+    // Receiving an incoming Chat
+
+    // Display UI for user to accept or reject
+    if (window.confirm('Accept chat from ' + incomingChat.remoteIdentities()[0].id + '?')) {
+        // User clicked OK
+
+        // Attach Chat callbacks
+        incomingChat.<a href="doc/orca.Chat.html#event:onReceived">onReceived</a> = function (message, event) {
+            // Received a textual message from the other party
+            // message is the text content received
+        };
+        incomingChat.<a href="doc/orca.Chat.html#event:onConnected">onConnected</a> = function (event) {
+            // The Chat is connected
+        };
+        incomingChat.<a href="doc/orca.Chat.html#event:onDisonnected">onDisonnected</a> = function (event) {
+            // The Chat is disconnected
+        };
+        incomingChat.<a href="doc/orca.Chat.html#event:onStatus">onStatus</a> = function (status, event) {
+            // The Chat status changed
+        };
+        incomingChat.<a href="doc/orca.Chat.html#event:onError">onError</a> = function (error, event) {
+            // The Chat encountered an error
+        };
+
+        // Connect Chat
+        incomingChat.<a href="doc/orca.Chat.html#connect">connect</a>();
+
+    } else {
+        // User clicked Cancel
+
+        // Decline Chat
+        incomingChat.<a href="doc/orca.Chat.html#reject">reject</a>();
+
+    }
+};
 </code></pre>
+	<p>The user can invite another party to chat using <code><a href="doc/orca.Session.html#createChat">Session.createChat</a></code>, similar to how calls are created using <code>Session.createCall</code>:</p>
+	<pre><code>// Create Chat
+var chat = session.<a href="doc/orca.Session.html#createChat">createChat</a>('sip:+442079590001@sandbox.demo.alcatel-lucent.com');
 
-    <h3 class="bm" id="datachannel">DataChannel Chat, FileTransfer, and ImageShare</h3>
-	<p><a href="doc/orca.Chat.html">Chat</a>, <a href="doc/orca.FileTransfer.html">FileTransfer</a>, and <a href="doc/orca.ImageShare.html">ImageShare</a> share a similar structure. The flow can be compared to a Call: The initiator uses a Session's factory method (<a href="doc/orca.Session.html#createChat">createChat</a>, <a href="doc/orca.Session.html#createFileTransfer">createFileTransfer</a>, or <a href="doc/orca.Session.html#createImageShare">createImageShare</a>) to create the object, then invokes connect(). The recipient's Session gets an incoming event (<a href="doc/orca.Session.html#event:onIncomingChat">onIncomingChat</a>, <a href="doc/orca.Session.html#event:onIncomingFileTransfer">onIncomingFileTransfer</a>, or <a href="doc/orca.Session.html#event:onIncomingImageShare">onIncomingImageShare</a>), then can choose to accept or reject it. In the case of a Chat, the two users can then send messages to each other using <a href="doc/orca.Chat.html#sendMessage">Chat.sendMessage()</a>, and receive each message with an <a href="doc/orca.Chat.html#event:onReceived">Chat.onReceived</a> event. One user may disconnect the Chat to end it. In the case of FileTransfer and ImageShare, the file is passed to the recipient in a final <a href="doc/orca.FileTransfer.html#event:onReceived">onReceived</a> event before the FileTransfer or ImageShare disconnects automatically.</p>
+// Attach Chat callbacks
+chat.<a href="doc/orca.Chat.html#event:onReceived">onReceived</a> = function (message, event) {
+    // Received a textual message from the other party
+    // message is the text content received
+};
+chat.<a href="doc/orca.Chat.html#event:onConnected">onConnected</a> = function (event) {
+    // The Chat is connected
+};
+chat.<a href="doc/orca.Chat.html#event:onDisonnected">onDisonnected</a> = function (event) {
+    // The Chat is disconnected
+};
+chat.<a href="doc/orca.Chat.html#event:onStatus">onStatus</a> = function (status, event) {
+    // The Chat status changed
+};
+chat.<a href="doc/orca.Chat.html#event:onError">onError</a> = function (error, event) {
+    // The Chat encountered an error
+};
+
+// Connect Chat
+chat.<a href="doc/orca.Chat.html#connect">connect</a>();
+</code></pre>
+	<p>Once the Chat is in a connected state (indicated by the <code><a href="doc/orca.Chat.html#event:onConnected">Chat.onConnected</a></code> event), both parties may send messages to each other.</p>
+	<pre><code>chat.<a href="doc/orca.Chat.html#sendMessage">sendMessage</a>('Hello, friend!');
+</code></pre>
+	<p>Either party can disconnect the Chat at any time. After the Chat is disconnected, messages cannot be sent on it, and it should not be used anymore.</p>
+	<pre><code>chat.<a href="doc/orca.Chat.html#disconnect">disconnect</a>();
+</code></pre>
+	
+	<h3 class="bm" id="filetransfer">FileTransfer and ImageShare</h3>
+	<p>A user can send a single file to another user over WebRTC DataChannel using FileTransfer or ImageShare. FileTransfer and ImageShare are identical except that ImageShare supports image files only, and their API structure is very similar to Chat.</p>
+	<p>An incoming FileTransfer or ImageShare is received via event callback <code><a href="doc/orca.Session.html#event:onIncomingFileTransfer">Session.onIncomingFileTransfer</a></code> or <code><a href="doc/orca.Session.html#event:onIncomingImageShare">Session.onIncomingImageShare</a></code>. In the following example, the same function is used to handle both callbacks:</p>
+	<pre><code>function onIncomingFileOrImage(incomingFile, event) {
+    // Receiving an incoming FileTransfer or ImageShare
+
+    // Display UI for user to accept or reject
+    if (window.confirm('Accept file from ' + incomingFile.remoteIdentities()[0].id + '?')) {
+        // User clicked OK
+
+        // Attach callbacks
+        incomingFile.<a href="doc/orca.FileTransfer.html#event:onReceived">onReceived</a> = function (message, event) {
+            // Received the file from the other party.
+            // The FileTransfer or ImageShare will disconnect after this.
+
+            // Populate a link in to download the file
+            // Example: &lt;a href="" id="downloadLink"&gt;&lt;/a&gt;
+            var a = document.getElementById('downloadLink'),
+                objectUrl = window.URL.createObjectURL(message),
+                fileName = event.fileProperties.name,
+                fileType = event.fileProperties.type,
+                fileSize = event.fileProperties.size;
+            a.href = objectUrl;
+            a.target = '_blank';
+            a.download = fileName;
+            a.innerHTML = 'Download ' + fileName
+                + ' (Type: ' + fileType
+                + ', Size: ' + fileSize + ' bytes)';
+        };
+        incomingFile.<a href="doc/orca.FileTransfer.html#event:onConnected">onConnected</a> = function (event) {
+            // Connected
+        };
+        incomingFile.<a href="doc/orca.FileTransfer.html#event:onDisonnected">onDisonnected</a> = function (event) {
+            // Disconnected
+        };
+        incomingFile.<a href="doc/orca.FileTransfer.html#event:onStatus">onStatus</a> = function (status, event) {
+            // Status changed
+            switch (status) {
+            case <a href="doc/global.html#CommStatus">CommStatus</a>.REJECTED:
+                // Rejected by other party. Will be disconnected.
+                break;
+            case <a href="doc/global.html#CommStatus">CommStatus</a>.PROGRESS:
+                // File progress update
+                console.log('Transferred ' + event.progress + ' of ' + event.size + ' bytes');
+                break;
+            case <a href="doc/global.html#CommStatus">CommStatus</a>.SENDSUCCESS:
+                // Send succeeded
+                break;
+            case <a href="doc/global.html#CommStatus">CommStatus</a>.SENDFAIL:
+                // Send failed
+                break;
+            }
+        };
+        incomingFile.<a href="doc/orca.FileTransfer.html#event:onError">onError</a> = function (error, event) {
+            // Encountered an error
+        };
+
+        // Connect
+        incomingFile.<a href="doc/orca.FileTransfer.html#connect">connect</a>();
+
+    } else {
+        // User clicked Cancel
+
+        // Decline FileTransfer or ImageShare
+        incomingFile.<a href="doc/orca.FileTransfer.html#reject">reject</a>();
+
+    }
+}
+// Attach these callbacks after orca.createSession...
+session.<a href="doc/orca.Session.html#event:onIncomingFileTransfer">onIncomingFileTransfer</a> = onIncomingFileOrImage;
+session.<a href="doc/orca.Session.html#event:onIncomingImageShare">onIncomingImageShare</a> = onIncomingFileOrImage;
+</code></pre>
+    <p>The user can send a file to another user with <code><a href="doc/orca.Session.html#createFileTransfer">Session.createFileTransfer</a></code> or <code><a href="doc/orca.Session.html#createImageShare">Session.createImageShare</a></code>. The code below creates a FileTransfer.</p>
+    <pre><code>// Get file from an HTML file input element &lt;input type="file" id="fileInput" /&gt;
+var myFile = document.getElementById('fileInput').files[0];
+if (!myFile) {
+    window.alert('Please select a file first');
+}
+
+// Create FileTransfer
+var filetransfer = session.<a href="doc/orca.Session.html#createFileTransfer">createFileTransfer</a>(
+    'sip:+442079590001@sandbox.demo.alcatel-lucent.com',
+    myFile
+);
+
+// Attach callbacks
+filetransfer.<a href="doc/orca.FileTransfer.html#event:onReceived">onReceived</a> = function (message, event) {
+    // Received the file from the other party.
+    // (Since we are sending the file in this case, this event will not happen)
+};
+filetransfer.<a href="doc/orca.FileTransfer.html#event:onConnected">onConnected</a> = function (event) {
+    // Connected
+};
+filetransfer.<a href="doc/orca.FileTransfer.html#event:onDisonnected">onDisonnected</a> = function (event) {
+    // Disconnected
+};
+filetransfer.<a href="doc/orca.FileTransfer.html#event:onStatus">onStatus</a> = function (status, event) {
+    // Status changed
+    switch (status) {
+    case <a href="doc/global.html#CommStatus">CommStatus</a>.REJECTED:
+        // Rejected by other party. Will be disconnected.
+        break;
+    case <a href="doc/global.html#CommStatus">CommStatus</a>.PROGRESS:
+        // File progress update
+        console.log('Transferred ' + event.progress + ' of ' + event.size + ' bytes');
+        break;
+    case <a href="doc/global.html#CommStatus">CommStatus</a>.SENDSUCCESS:
+        // Send succeeded
+        break;
+    case <a href="doc/global.html#CommStatus">CommStatus</a>.SENDFAIL:
+        // Send failed
+        break;
+    }
+};
+filetransfer.<a href="doc/orca.FileTransfer.html#event:onError">onError</a> = function (error, event) {
+    // Encountered an error
+};
+
+// Connect
+filetransfer.<a href="doc/orca.FileTransfer.html#connect">connect</a>();
+</code></pre>
+
+	<p>A FileTransfer or ImageShare will disconnect automatically after successful completion, or after encountering an error. If a FileTransfer or ImageShare is in progress, it can be canceled at any time by either party with <code><a href="doc/orca.FileTransfer.html#disconnect">FileTransfer.disconnect</a></code> or <code><a href="doc/orca.ImageShare.html#disconnect">ImageShare.disconnect</a></code>.</p>
     
     <h2 class="bm" id="requirements">User Requirements</h2>
-    <p>Orca ALU works best in the latest version of <a href="https://www.google.com/intl/en-US/chrome/browser/">Google Chrome</a> for desktop. <a href="http://www.mozilla.org/en-US/firefox/new/">Mozilla Firefox</a> for desktop supports most features, but certain advanced calling features are limited by browser bugs. In addition, Google Chrome for Android and Mozilla Firefox for Android have WebRTC support, and certain open-source Cordova plugins exist which can be used to construct WebRTC applications for iOS and Android.</p>
-    <p>Hardware requirements are a webcam, a microphone, and a decent internet connection.</p>
+    <p>Orca ALU works best in the latest version of <a href="https://www.google.com/intl/en-US/chrome/browser/">Google Chrome</a> for desktop. For mobile, the Google Chrome Android app has WebRTC support, and certain open-source Cordova plugins can be used to construct WebRTC applications for iOS and Android.</p>
+    <p>Hardware requirements are a webcam, a microphone, and an internet connection.</p>
     
     <h2 class="bm" id="troubleshooting">Troubleshooting</h2>
     <ul>
         <li><strong>Check settings and credentials.</strong> Can't get a Session to connect? The sample apps provide the correct formatting of parameters which must be passed into orca.createSession(). Your lab environment support team will be able to provide needed values, such as WebSocket Gateway URI, Conference Factory URI, Public ID, Private ID, and Password.</li>
-        <li><strong>Clear advanced settings.</strong> Problems with calling, or still can't get that Session to connect? If you are testing using Multicall App, try doing Advanced Settings &gt; Clear to default. (This will reset all settings to the values in config.js.) If you are testing your own application code, refer to the <a href="apps/simple/">Simple Example App</a> for how to structure your <code>sessionConfig</code> parameters, and avoid adding any other parameters that are not needed.</li>
+        <li><strong>Clear advanced settings.</strong> Problems with calling, or still can't get that Session to connect? If you are testing using Multicall App, try doing Advanced Settings &gt; Clear to default. (This will reset all settings to the values in config.js.) If you are testing your own application code, refer to the <a href="apps/simple/index.html">Simple Example App</a> for how to structure your <code>sessionConfig</code> parameters, and avoid adding any other parameters that are not needed.</li>
         <li><strong>Reset camera/microphone permissions.</strong> If the browser is denying camera/microphone permissions, this may become a roadblock to connecting a call. Refer to browser documentation on managing these permissions: <a href="https://support.google.com/chrome/answer/2693767?hl=en">Chrome</a>.</li>
         <li><strong>Examine JavaScript console logs.</strong> Orca ALU prints valuable information to the JS console. This includes session parameters, SIP messages, error details, and more. Refer to browser documentation on viewing the JS console: <a href="https://developer.chrome.com/devtools/docs/console">Chrome</a>, <a href="https://developer.mozilla.org/en-US/docs/Tools/Web_Console">Firefox</a>.</li>
         <li><strong>WebRTC Internals</strong>. Google Chrome provides a WebRTC debugging tool, which shows detailed information on the PeerConnections in any open tabs. Access the tool by entering the following location in the Chrome address bar: <em>chrome://webrtc-internals</em></li>
@@ -377,7 +617,7 @@
     </ul>
         
     <h2 class="bm" id="about">About Orca ALU</h2>
-    <p>Alcatel-Lucent provides this Orca library to demonstrate its IMS-WebRTC solutions. It is often updated with bug fixes and new features. At any given time, this library may have enhancements not found in the original Orca.js from ATIS, so please refer to ALU's provided documentation. (The official Orca API is developed by the <a href="http://www.atis.org/dsi/">ATIS Device Solutions Initiative</a> and can be found on <a href="https://github.com/orcajs/orca.js">GitHub</a>.)</p>
+    <p>Alcatel-Lucent provides this Orca.js library to demonstrate its Rapport-WebRTC solutions.</p>
     
     <p>Copyright &copy; 2015 Alcatel-Lucent</p>
     
@@ -426,6 +666,13 @@
         padding: 20px;
         margin: 0 auto;
     }
+    .largelinks a {
+        font-size: 1.5em;
+    }
+    .largelinks li {
+        margin-top: 0.5em;
+        margin-bottom: 0.5em;
+    }
     @media all and (max-width: 1400px) and (min-width: 1100px) {
         body {
             padding-left: 300px;
Index: orca.js
===================================================================
--- orca.js	(revision 62)
+++ orca.js	(working copy)
@@ -160,6 +160,28 @@
         this.sendPageModeChatMessage = function (to, message) {
             return sessionImp.sendPageModeChatMessage(to, message);
         };
+        
+        /**
+        * Sends a sms message to a remote party 
+        * @param {string} to The user identifier of the chat invitee
+        * @param {string} message The message to be sent
+        * @param {Object} smsIMDNMessageInfo Message attributes
+        * @returns {string} imdnMessageID to application
+        */
+        this.sendSmsMessage = function (to, message, smsIMDNMessageInfo) {
+            return sessionImp.sendSmsMessage(to, message, smsIMDNMessageInfo);
+        };
+        
+        /**
+        * Sends a sms IMDN message to a remote party 
+        * @param {string} to The user identifier of the chat invitee
+        * @param {string} imdnMessageID of sms message sent
+        * @param {string} status of sms message sent
+        * @param {string} dateTime of sms message sent
+        */
+        this.sendSmsIMDNMessage = function (to, imdnMessageID, status, dateTime) {
+            return sessionImp.sendSmsIMDNMessage(to, imdnMessageID, status, dateTime);
+        };
 
         /**
          * Subscribe to current and future presence updates of a presentity 
@@ -267,9 +289,60 @@
         */
         this.onPageModeChatMessageFailed = function (message, event) {
         };
+        
+        /**
+        * Triggered when an incoming sms message is received
+        * @event
+        * @param {orca.SmsMessage} smsMessage incoming smsMessage object
+        * @param {Event} event event data
+        */
+        this.onIncomingSmsMessage = function (event) {
+        };
 
+        /**
+        * Triggered when a sms message is sent out
+        * @event
+        * @param {message} the sms message that is sent
+        * @param {Event} event event data
+        */
+        this.onSmsMessageSent = function (message, event) {
+        };
 
         /**
+        * Triggered when a sms message fails to be sent out
+        * @event
+        * @param {message} the sms message that is sent
+        * @param {Event} event event data
+        */
+        this.onSmsMessageFailed = function (message, event) {
+        };
+        
+        /**
+        * Triggered when an incoming sms IMDN message is received
+        * @event
+        * @param {Event} event event data with properties message-id, datetime, status
+        */
+        this.onIncomingSmsIMDNMessage = function (event) {
+        };
+
+        /**
+        * Triggered when an IMDN message is sent out
+        * @event
+        * @param {Event} event event data
+        */
+        this.onSmsIMDNMessageSent = function (event) {
+        };
+
+        /**
+        * Triggered when an IMDN message fails to be sent out
+        * @event
+        * @param {Event} event event data
+        */
+        this.onSmsIMDNMessageFailed = function (event) {
+        };
+
+
+        /**
         * Triggered when an incoming file transfer is received during an active session
         * @event
         * @param {orca.Chat} fileTransfer incoming file transfer object
@@ -1607,8 +1680,9 @@
     * @property {string} uri The address of the gateway server
     * @property {object} provider Reference to implementation providing actual functionality.
     * For Orca ALU, this is the orcaALU object.
-    * @property {string} mediatypes The types of media streams that the created session will
-    * support; defaults if not provided
+    * @property {string} mediatypes The default media streams to use in calls if not specified.
+    * Examples: "audio", "audio,video". Note that this is only the default, so video calls are
+    * still possible even if this value is set to "audio".
     * @property {ProviderConfig} providerConfig Provider-specific settings
     */
 
@@ -1625,6 +1699,12 @@
     * SIP over Websocket, 'REST-WS' for REST over Websocket. Default is SIP-WS. REST-WS was supported
     * from ORCA ECMS load 29.14.01.xx and it can only work with IMS 13.1/ISC 24.1/IBC-4 R4.0 
     * as a proof-of-concept.
+    * @property {boolean} sendAuthOnInitReg If true, we include Authorization header in initial sip REGISTER.
+    * The default is false meaning we would not send authorization in initial register.
+    * @property {boolean} sendAuthOnReregDereg If true, we include Authorization header in sip re-register
+    * and de-register messages.  The default is true meaning we would send authorization in re-register and de-register.
+    * @property {boolean} reUseCallidInReregDereg If true, we will re-use the same callId used on initial register,
+    * when sending re-register or de-register.  The default is true, meaning we will re-use the same callId.
     * @property {string} stun The STUN server to use for calls. Defaults to blank (none).
     * @property {boolean} bundle If false, the line "a=group:BUNDLE" is removed from the SDP if
     * present. If true, no change is made. Defaults to true.
@@ -1661,8 +1741,8 @@
     * @property {boolean} stripExtraSSRC If true, remove extra and unnecessary 'synchronization
     * source' attributes (a=ssrc:) from SDP (offers or answers) which Chrome may have added
     * in scenarios involving video upgrade or downgrade. Default is true.
-    * @property {boolean} confWorkaroundChrome If true, enable workaround for video conference
-    * call to work on Chrome version 39 and earlier. Default is false.
+    * @property {boolean} confWorkaroundChrome If true, enable workaround for conference call
+    * issue found in certain environments. Default is false.
     * @property {boolean} useFirstCandidate If true, use the first ICE candidate immediately
     * without waiting for any more candidates to be gathered. This is useful to prevent delay
     * in calling if candidate gathering is slow, particularly in Firefox.
@@ -1688,7 +1768,7 @@
     * @property {string|number} registerRefreshTime How often (in seconds) to do register
     * refreshes. Default is 0.
     * @property {boolean} msidHandling Select the type of handling on incoming msid in SDP.
-    * We may select from among: 'Strip Incoming MSID', 'Generate/Replace Incoming MSID'
+    * We may select from among: 'Strip Incoming MSID (default)', 'Generate/Replace Incoming MSID'
     * or 'None, no applicable handling'.
     * @property {boolean} enableMDSPsupport If true, then this device and contact is sharing
     * its PUID with other devices.  This device is either the main devie or a secondary MDSP
@@ -1714,6 +1794,7 @@
     * @type object
     * @property {string} id The user's private ID
     * @property {string} key The user's password
+    * @property {string} displayName The user's display name (optional)
     * @property {string} imsauth Set as 'sso-token' to add an Authorization header for single
     * sign-on applications. Otherwise the special header is not added. Default is undefined.
     */
Index: orca.min.js
===================================================================
--- orca.min.js	(revision 62)
+++ orca.min.js	(working copy)
@@ -48,1839 +48,22 @@
 var CrocMSRP=(function(b){var a=2208988800;b.util={newUriAuthority:function(){return Math.random().toString(36).substr(2,8)+".invalid"},newSID:function(){return Math.random().toString(36).substr(2,10)},newTID:function(){return Math.random().toString(36).substr(2,8)},newMID:function(){var c=new Date();return b.util.dateToNtpTime(c)+"."+Math.random().toString(36).substr(2,8)},newFileTransferId:function(){var c=new Date();return b.util.dateToNtpTime(c)+"."+Math.random().toString(36).substr(2)},normaliseHeader:function(d){var e=d.toLowerCase().split("-"),c,f="";for(c in e){if(c!=="0"){f+="-"}f+=e[c].charAt(0).toUpperCase()+e[c].substring(1)}switch(f){case"Www-Authenticate":return"WWW-Authenticate";case"Message-Id":return"Message-ID"}return f},isEmpty:function(d){var c;for(c in d){if(d.hasOwnProperty(c)){return false}}return true},ntpTimeToDate:function(c){return new Date((parseInt(c,10)-a)*1000)},dateToNtpTime:function(c){return parseInt(c.getTime()/1000,10)+a},encodeSdpFileName:function(c){return c.replace(/%/g,"%25").replace(/\0/g,"%00").replace(/\n/g,"%0A").replace(/\r/g,"%0D").replace(/"/g,"%22")},decodeSdpFileName:function(c){return c.replace(/%00/g,"\0").replace(/%0A/gi,"\n").replace(/%0D/gi,"\r").replace(/%22/g,'"').replace(/%25/g,"%")},encodeQuotedString:function(e){var d=e.split(""),c;for(c in d){switch(d[c]){case'"':case"\r":case"\\":d[c]="\\"+d[c];break}}return d.join("")},decodeQuotedString:function(f){var d=f.split(""),c,e=false;for(c in d){if(e){continue}if(d[c]==="\\"){e=true;delete d[c]}}return d.join("")}};return b}(CrocMSRP||{}));
 
 // orca/orca_version.js
-var orcaVersion="27.11.00:1435241426 spwl";
+var orcaVersion = "27.11.00:1441236612 spwl hackathon01";
 
 // orca/orca.js
-/**
- *  Copyright (c) 2013 Alcatel-Lucent
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *  http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
+(function(){var orca,SessionStatus,SessionError,CallStatus,CallError,AddressBookStatus,AddressBookError;function ManagedStream(rtcMediaStream){this.type=function(){var a=rtcMediaStream.getAudioTracks().length>0,v=rtcMediaStream.getVideoTracks().length>0;if(a){if(v){return"audio,video"}return"audio"}if(v){return"video"}return""};this.resume=function(){setTrackListEnabled(rtcMediaStream.getAudioTracks(),true);setTrackListEnabled(rtcMediaStream.getVideoTracks(),true)};this.stop=function(){setTrackListEnabled(rtcMediaStream.getAudioTracks(),false);setTrackListEnabled(rtcMediaStream.getVideoTracks(),false)};this.stream=function(){return rtcMediaStream}}function Session(userid,token,sessionConfig){var sessionImp=sessionConfig.provider.createSession(userid,token,sessionConfig,this);this.connect=function(){return sessionImp.connect()};this.createCall=function(to,mediatypes){return new Call(to,mediatypes,sessionImp)};this.createChat=function(to){return new Chat(to,sessionImp)};this.createFileTransfer=function(to,file){return new FileTransfer(to,file,sessionImp)};this.createImageShare=function(to,file){return new ImageShare(to,file,sessionImp)};this.disconnect=function(){return sessionImp.disconnect()};this.getStatus=function(){return sessionImp.getStatus()};this.sendPageModeChatMessage=function(to,message){return sessionImp.sendPageModeChatMessage(to,message)};this.sendSmsMessage=function(to,message,smsIMDNMessageInfo){return sessionImp.sendSmsMessage(to,message,smsIMDNMessageInfo)};this.sendSmsIMDNMessage=function(to,imdnMessageID,status,dateTime){return sessionImp.sendSmsIMDNMessage(to,imdnMessageID,status,dateTime)};this.subscribePresence=function(presenceResource){return sessionImp.subscribePresence(presenceResource)};this.getPresence=function(presenceResource){return sessionImp.getPresence(presenceResource)};this.updatePresence=function(presenceInfo){return sessionImp.updatePresence(presenceInfo)};this.test=function(testString){return sessionImp.test(testString)};this.onConnected=function(event){};this.onDisconnected=function(event){};this.onError=function(error,event){};this.onIncoming=function(receivedCall,event){};this.onIncomingChat=function(chat,event){};this.onIncomingPageModeChat=function(event){};this.onPageModeChatMessageSent=function(message,event){};this.onPageModeChatMessageFailed=function(message,event){};this.onIncomingSmsMessage=function(event){};this.onSmsMessageSent=function(message,event){};this.onSmsMessageFailed=function(message,event){};this.onIncomingSmsIMDNMessage=function(event){};this.onSmsIMDNMessageSent=function(event){};this.onSmsIMDNMessageFailed=function(event){};this.onIncomingFileTransfer=function(fileTransfer,event){};this.onIncomingImageShare=function(imageShare,event){};this.onPresenceNotify=function(presenceInfo,event){};this.onSubscribePresenceSuccess=function(event){};this.onSubscribePresenceFailed=function(event){};this.onGetPresenceSuccess=function(event){};this.onGetPresenceFailed=function(event){};this.onUpdatePresenceSuccess=function(event){};this.onUpdatePresenceFail=function(event){};this.getMDSPinfo=function(){return sessionImp.mdsp.getContacts()};this.pullCallFromMDSPdialog=function(call,callInfo){sessionImp.mdsp.pullCallFromMDSPdialog(call,callInfo)};this.onMDSPinfoUpdate=function(){};this.onStatus=function(status,event){};this.updateToken=function(tokenKey){return sessionImp.updateToken(tokenKey)};this.sendPingFrame=function(){return sessionImp.sendPingFrame()}}function Call(to,mediatypes,sessionImp){var callImp=sessionImp.createCall(to,mediatypes,sessionImp,this),id=generateCallId(),localStreams=[];this.id=function(){return id};this.remoteIdentities=function(){return callImp.remoteIdentities()};this.getpc=function(){return callImp.getpc()};this.dumpCallInfo=function(){return callImp.dumpCallInfo()};this.addStream=function(stream){var managed=stream;if(stream!==null){if(stream.constructor.name!=="ManagedStream"){managed=orca.createManagedStream(stream)}localStreams.push(managed);if(typeof callImp.addStream==="function"){callImp.addStream(managed)}return managed}};this.removeStream=function(stream){var managed=stream;if(stream!==null){if(typeof callImp.removeStream==="function"){callImp.removeStream(managed)}localStreams.shift()}};this.connect=function(){return callImp.connect()};this.disconnect=function(){return callImp.disconnect()};this.reject=function(){return callImp.reject()};this.streams=function(selector){var result=[],el="",id="",audio=false,video=false;if(selector&&typeof selector==="string"){el=selector.match(/^[0-9a-zA-Z]*/)[0].toLowerCase();id=selector.match(/#[0-9a-zA-Z]*/);if(id){id=id[0].substring(1)}else{id=""}audio=selector.match(/\.audio([#.\s]|$)/)?true:false;video=selector.match(/\.video([#.\s]|$)/)?true:false}if(el!=="local"){selectStreams(callImp.remoteStreams(),result,id,audio,video)}if(el!=="remote"){selectStreams(localStreams,result,id,audio,video)}return result};this.getStatus=function(){return callImp.getStatus()};this.getMediaTypes=function(){return callImp.getMediaTypes()};this.addParticipant=function(target){return callImp.addParticipant(target)};this.removeParticipant=function(target){return callImp.removeParticipant(target)};this.sendDTMF=function(dtmf){return callImp.sendDTMF(dtmf)};this.transfer=function(target){return callImp.transfer(target)};this.mute=function(media_types){var streams=this.streams("local"),i;if(media_types===undefined){for(i=0;i<streams.length;i+=1){streams[i].stop()}return}if(media_types.indexOf("audio")>=0){for(i=0;i<streams.length;i+=1){setTrackListEnabled(streams[i].stream().getAudioTracks(),false)}}if(media_types.indexOf("video")>=0){for(i=0;i<streams.length;i+=1){setTrackListEnabled(streams[i].stream().getVideoTracks(),false)}}};this.unmute=function(media_types){var streams=this.streams("local"),i;if(media_types===undefined){for(i=0;i<streams.length;i+=1){streams[i].resume()}return}if(media_types.indexOf("audio")>=0){for(i=0;i<streams.length;i+=1){setTrackListEnabled(streams[i].stream().getAudioTracks(),true)}}if(media_types.indexOf("video")>=0){for(i=0;i<streams.length;i+=1){setTrackListEnabled(streams[i].stream().getVideoTracks(),true)}}};this.hold=function(type){callImp.hold(type)};this.resume=function(){callImp.resume()};this.createDataChannel=function(){callImp.createDataChannel()};this.sendMessage=function(msg){callImp.sendMessage(msg)};this.sendFile=function(url){callImp.sendFile(url)};this.onAddStream=function(stream,event){};this.onConnected=function(event){};this.onDisconnected=function(event){};this.onError=function(error,event){};this.onStatus=function(status,event){};this.onMessage=function(event){};this.pushCallToMDSPcontact=function(pushToGruu){sessionImp.mdsp.pushCallToContact(callImp,pushToGruu)};this.getCallImp=function(){return callImp}}function Chat(to,sessionImp){var chatImp=sessionImp.createChat(to,sessionImp,this),id=generateCallId();this.getImp=function(){return chatImp};this.id=function(){return id};this.remoteIdentities=function(){return chatImp.remoteIdentities()};this.getStatus=function(){return chatImp.getStatus()};this.connect=function(){return chatImp.connect()};this.disconnect=function(){return chatImp.disconnect()};this.reject=function(){return chatImp.reject()};this.sendMessage=function(message){return chatImp.sendMessage(message)};this.onConnected=function(event){};this.onDisconnected=function(event){};this.onError=function(error,event){};this.onStatus=function(status,event){};this.onReceived=function(message,event){}}function FileTransfer(to,file,sessionImp){var fileTransferImp=sessionImp.createFileTransfer(to,file,sessionImp,this),id=generateCallId();this.getImp=function(){return fileTransferImp};this.id=function(){return id};this.remoteIdentities=function(){return fileTransferImp.remoteIdentities()};this.getStatus=function(){return fileTransferImp.getStatus()};this.connect=function(){return fileTransferImp.connect()};this.disconnect=function(){return fileTransferImp.disconnect()};this.reject=function(){return fileTransferImp.reject()};this.onConnected=function(event){};this.onDisconnected=function(event){};this.onError=function(error,event){};this.onStatus=function(status,event){};this.onReceived=function(message){}}function ImageShare(to,file,sessionImp){var imageShareImp=sessionImp.createImageShare(to,file,sessionImp,this),id=generateCallId();this.getImp=function(){return imageShareImp};this.id=function(){return id};this.remoteIdentities=function(){return imageShareImp.remoteIdentities()};this.getStatus=function(){return imageShareImp.getStatus()};this.connect=function(){return imageShareImp.connect()};this.disconnect=function(){return imageShareImp.disconnect()};this.reject=function(){return imageShareImp.reject()};this.onConnected=function(event){};this.onDisconnected=function(event){};this.onError=function(error,event){};this.onStatus=function(status,event){};this.onReceived=function(message){}}function AddressBook(userId,token,abConfig){var abImp=abConfig.provider.createAddressBook(userId,token,abConfig,this);this.getLists=function(getMembersInList){return abImp.getLists(getMembersInList)};this.getMembers=function(listId){return abImp.getMembers(listId)};this.getContacts=function(){return abImp.getContacts()};this.addMember=function(listId,member){return abImp.addMember(listId,member)};this.addContact=function(contact){return abImp.addContact(contact)};this.updateMember=function(listId,member){return abImp.updateMember(listId,member)};this.updateContact=function(contact){return abImp.updateContact(contact)};this.deleteList=function(listId){return abImp.deleteList(listId)};this.deleteMember=function(listId,member){return abImp.deleteMember(listId,member)};this.deleteContact=function(contact){return abImp.deleteContact(contact)};this.trnsferMember=function(listId,member,newListId){return abImp.trnsferMember(listId,member,newListId)};this.onError=function(error,event){};this.onGetLists=function(lists,event){};this.onGetMembers=function(list,event){};this.onGetContacts=function(contacts,event){};this.onAddMember=function(event){};this.onAddContact=function(event){};this.onUpdateMember=function(event){};this.onUpdateContact=function(event){};this.onDeleteList=function(event){};this.onDeleteMember=function(event){};this.onDeleteContact=function(event){};this.onTransferMember=function(event){}}function generateCallId(){var id="",i,an="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(i=0;i<8;i+=1){id+=an.charAt(Math.floor(Math.random()*an.length))}return id}function setTrackListEnabled(tracklist,value){var i;for(i=0;i<tracklist.length;i+=1){tracklist[i].enabled=value}}function selectStreams(list,result,id,audio,video){var i,stream;for(i=0;i<list.length;i+=1){stream=list[i].stream();if((id===""||stream.id===id)&&(!audio||stream.getAudioTracks().length>0)&&(!video||stream.getVideoTracks().length>0)){result.push(list[i])}}}CallError={};CallError.NETWORK_FAILURE="call_error_network_failure";CallStatus={};CallStatus.CONNECTING="call_status_connecting";CallStatus.HOLD="call_status_hold";CallStatus.UNHOLD="call_status_unhold";CallStatus.REJECTED="call_status_rejected";CallStatus.CANCELED="call_status_canceled";CallStatus.CONNECTED="call_status_connected";CallStatus.DISCONNECTED="call_status_disconnected";CallStatus.REMOTE_HOLD="call_status_remote_hold";CallStatus.UPGRADING="call_status_upgrading";CallStatus.DOWNGRADING="call_status_downgrading";CallStatus.ADDSTREAM="call_status_add_stream";CommError={};CommError.NETWORK_FAILURE="comm_error_network_failure";CommError.NOT_SUPPORTED="comm_error_not_supported";CommStatus={};CommStatus.CONNECTING="comm_status_connecting";CommStatus.REJECTED="comm_status_rejected";CommStatus.CANCELED="comm_status_canceled";CommStatus.CONNECTED="comm_status_connected";CommStatus.DISCONNECTED="comm_status_disconnected";CommStatus.PROGRESS="comm_status_progress";CommStatus.SENDSUCCESS="comm_status_send_success";CommStatus.SENDFAIL="comm_status_send_fail";CommStatus.RECEIVED="comm_status_received";SessionError={};SessionError.AUTHENTICATION_FAILED="session_error_authentication_failed";SessionError.NETWORK_ERROR="session_error_network_error";SessionStatus={};SessionStatus.CONNECTED="session_status_connected";SessionStatus.CONNECTING="session_status_connecting";SessionStatus.DISCONNECTED="session_status_disconnected";SessionStatus.INCOMINGCALL="session_status_incoming_call";SessionStatus.AUTHENTICATING="session_status_authenticating";SessionStatus.INCOMINGCHAT="session_status_incoming_chat";SessionStatus.INCOMINGFILE="session_status_incoming_file";SessionStatus.INCOMINGIMAGE="session_status_incoming_image";SessionStatus.INCOMINGAUTOANSWER="session_status_incoming_auto_answer";SessionStatus.UPDATEPRESENCESUCCESS="session_status_update_presence_success";SessionStatus.UPDATEPRESENCEFAIL="session_status_update_presence_fail";AddressBookError={};AddressBookError.AUTHENTICATION_FAILED="addressbook_error_authentication_failed";AddressBookError.CONFIG_ERROR="addressbook_error_config_error";AddressBookError.PARAMETERS_ERROR="addressbook_error_parameters_error";AddressBookError.NETWORK_ERROR="addressbook_error_network_error";AddressBookStatus={};AddressBookStatus.GETLISTS_SUCCESSFUL="addressbook__status_getLists_successful";AddressBookStatus.GETMEMBERS_SUCCESSFUL="addressbook_status_getMembers_successful";AddressBookStatus.GETCONTACTS_SUCCESSFUL="addressbook_status_getContacts_successful";AddressBookStatus.ADDMEMBER_SUCCESSFUL="addressbook_status_addMember_successful";AddressBookStatus.ADDCONTACT_SUCCESSFUL="addressbook_status_addContact_successful";AddressBookStatus.UPDATEMEMBER_SUCCESSFUL="addressbook_status_updateMebmer_successful";AddressBookStatus.UPDATECONTACT_SUCCESSFUL="addressbook_status_updateContact_successful";AddressBookStatus.DELETELIST_SUCCESSFUL="addressbook_status_deleteList_successful";AddressBookStatus.DELETEMEMBER_SUCCESSFUL="addressbook_status_deleteMember_successful";AddressBookStatus.DELETECONTACT_SUCCESSFUL="addressbook_status_deleteContact_successful";AddressBookStatus.TRANSFERMEMBER_SUCCESSFUL="addressbook_status_transferMember_successful";AddressBookStatus.GETLISTS_FAILED="addressbook_status_getLists_failed";AddressBookStatus.GETMEMBERS_FAILED="addressbook_status_getMembers_failed";AddressBookStatus.GETCONTACTS_FAILED="addressbook_status_getContacts_failed";AddressBookStatus.ADDMEMBER_FAILED="addressbook_status_addMember_failed";AddressBookStatus.ADDCONTACT_FAILED="addressbook_status_addContact_failed";AddressBookStatus.UPDATEMEMBER_FAILED="addressbook_status_updateMebmer_failed";AddressBookStatus.UPDATECONTACT_FAILED="addressbook_status_updateContact_failed";AddressBookStatus.DELETELIST_FAILED="addressbook_status_deleteList_failed";AddressBookStatus.DELETEMEMBER_FAILED="addressbook_status_deleteMember_failed";AddressBookStatus.DELETECONTACT_FAILED="addressbook_status_deleteContact_failed";AddressBookStatus.TRANSFERMEMBER_FAILED="addressbook_status_transferMember_failed";orca={createSession:function(userid,token,sessionConfig){return new Session(userid,token,sessionConfig)},createAddressBook:function(userid,token,abConfig){return new AddressBook(userid,token,abConfig)},createManagedStream:function(rtcMediaStream){return new ManagedStream(rtcMediaStream)}};this.orca=orca;this.SessionStatus=SessionStatus;this.SessionError=SessionError;this.CallStatus=CallStatus;this.CallError=CallError;this.CommStatus=CommStatus;this.CommError=CommError;this.AddressBookStatus=AddressBookStatus;this.AddressBookError=AddressBookError}());
 
-/* $Id: orca.js 412 2014-09-29 07:56:20Z wenwenzh $ */
-/*jslint browser: true, sloppy: true, undef: true */
-
-(function () {
-    var orca, SessionStatus, SessionError, CallStatus, CallError, AddressBookStatus, AddressBookError;
-
-    /**
-    * @summary Provides access to media control functions during a call
-    * @classdesc ManagedStream objects are obtained by calling the
-    * {@Link orca.createManagedStream} method or handling the onAddStream event of a
-    * {@Link orca.Call} ({@Link orca.Call#event:onAddStream}). They are also created
-    * implicitly when passing a raw RTCMediaStream to the {@Link orca.Call#addStream} method.
-    * @constructor
-    * @memberOf orca
-    * @param {RTCMediaStream} rtcMediaStream the underlying WebRTC runtime MediaStream instance  
-    */
-    function ManagedStream(rtcMediaStream) {
-
-        /**
-        * @summary Gets the types of media associated with this instance as a comma-separated
-        * list, e.g. "audio,video"
-        * @returns {string}
-        */
-        this.type = function () {
-            var a = rtcMediaStream.getAudioTracks().length > 0,
-                v = rtcMediaStream.getVideoTracks().length > 0;
-            if (a) {
-                if (v) {
-                    return 'audio,video';
-                }
-                return 'audio';
-            }
-            if (v) {
-                return 'video';
-            }
-            return '';
-        };
-
-        /**
-        * @summary Restarts transmission of the media content after it has been stopped
-        */
-        this.resume = function () {
-            setTrackListEnabled(rtcMediaStream.getAudioTracks(), true);
-            setTrackListEnabled(rtcMediaStream.getVideoTracks(), true);
-        };
-
-        /**
-        * @summary Halts transmission of the media content during a call
-        * 
-        */
-        this.stop = function () {
-            setTrackListEnabled(rtcMediaStream.getAudioTracks(), false);
-            setTrackListEnabled(rtcMediaStream.getVideoTracks(), false);
-        };
-
-        /**
-        * Gets the underlying WebRTC MediaStream
-        * @returns {RTCMediaStream}
-        */
-        this.stream = function () {
-            return rtcMediaStream;
-        };
-    }
-
-    /** 
-    *
-    * @classdesc Session objects are obtained by calling the {@Link orca.createSession} method
-    * @summary Manages communications for a given user identity
-    * @constructor
-    * @memberOf orca
-    */
-    function Session(userid, token, sessionConfig) {
-        var sessionImp = sessionConfig.provider.createSession(userid, token, sessionConfig, this);
-
-        /**
-        * Activates the communications session with a gateway server. In Orca ALU, this sends a
-        * SIP REGISTER request.
-        * @method
-        */
-        this.connect = function () {
-            return sessionImp.connect();
-        };
-
-        /**
-        * Creates a new call instance for communication with the specified recipient
-        * @param {string} to the user identifier of the call recipient. In Orca ALU, this is the
-        * user's public ID.
-        * @param {string} mediatypes Comma-separated list of media stream types to be used during
-        * the call e.g. "audio,video".
-        */
-        this.createCall = function (to, mediatypes) {
-            return new Call(to, mediatypes, sessionImp);
-        };
-
-        /**
-        * Creates a new Chat instance for communication with the specified recipient
-        * @param {string} to The user identifier of the chat invitee. In Orca ALU, this is the
-        * user's public ID.
-        */
-        this.createChat = function (to) {
-            return new Chat(to, sessionImp);
-        };
-
-        /**
-        * Creates a new FileTransfer instance to send a file to the specified recipient
-        * @param {string} to The user identifier of the file recipient. In Orca ALU, this is the
-        * user's public ID.
-        * @param {File|Blob} file The file to send
-        */
-        this.createFileTransfer = function (to, file) {
-            return new FileTransfer(to, file, sessionImp);
-        };
-
-        /**
-        * Creates a new ImageShare instance to send an image file to the specified recipient
-        * @param {string} to The user identifier of the image recipient. In Orca ALU, this is the
-        * user's public ID.
-        * @param {File|Blob} file The image file to send
-        */
-        this.createImageShare = function (to, file) {
-            return new ImageShare(to, file, sessionImp);
-        };
-        /**
-        * Ends and active communications session with a gateway server. In Orca ALU, this does an
-        * unregister.
-        */
-        this.disconnect = function () {
-            return sessionImp.disconnect();
-        };
-
-        /**
-        * @summary Retrieves the current status of this session
-        * @returns {SessionStatus}
-        */
-        this.getStatus = function () {
-            return sessionImp.getStatus();
-        };
-
-        /**
-        * Sends a page mode message to a remote party 
-        * @param {string} to The user identifier of the chat invitee
-        * @param {string} message The message to be sent
-        */
-        this.sendPageModeChatMessage = function (to, message) {
-            return sessionImp.sendPageModeChatMessage(to, message);
-        };
-
-        /**
-         * Subscribe to current and future presence updates of a presentity 
-         * or presentities in a presence list.
-         * 
-         * @param {string} presenceResource A presentity or a presence list
-         */
-         this.subscribePresence = function (presenceResource) {
-        	    return sessionImp.subscribePresence(presenceResource);
-         };
-
-          
-         /**
-         * Request current presence information of a presentity or 
-         * presentites of a presence list. getPresence() will also
-         * terminate the former subscription made on the same presence
-         * resource by the watcher
-         * 
-         * @param {string} presenceResource A presentity or a presence list
-         */
-         this.getPresence = function (presenceResource) {
-        	    return sessionImp.getPresence(presenceResource);
-         };
-           
-         /**
-         * Update own presence information for others to see.
-         * @param {string} presenceInfo pidf XML or pidf-diff XML
-         * that are defined by RFC 3386, 5263, 5196, 4480
-         */
-         this.updatePresence = function (presenceInfo) {
-             return sessionImp.updatePresence(presenceInfo);
-         };
-         
-         this.test = function(testString) {
-         	return sessionImp.test(testString);
-         }
-         
-        /**
-        * @summary Triggered when the session is connected successfully
-        * @event
-        * @param {Event} event event data
-        */
-        this.onConnected = function (event) {
-        };
-
-        /**
-        * @summary Triggered when the session is disconnected
-        * @event
-        * @param {Event} event event data
-        *
-        */
-        this.onDisconnected = function (event) {
-        };
-
-        /**
-        * @Summary Triggered when an error condition occurs
-        * @event
-        * @param {SessionError} status Indicates the error that caused the event
-        * @param {Event} event event data
-        */
-        this.onError = function (error, event) {
-        };
-
-        /**
-        * Triggered when an incoming call is received during an active session
-        * @event
-        * @param {orca.Call} receivedCall incoming call object
-        * @param {Event} event event data
-        */
-        this.onIncoming = function (receivedCall, event) {
-        };
-
-        /**
-        * Triggered when an incoming chat is received during an active session
-        * @event
-        * @param {orca.Chat} chat incoming chat object
-        * @param {Event} event event data
-        */
-        this.onIncomingChat = function (chat, event) {
-        };
-
-        /**
-        * Triggered when an incoming page mode chat message is received
-        * @event
-        * @param {orca.PageModeChat} pageModeChat incoming pageModeChat object
-        * @param {Event} event event data
-        */
-        this.onIncomingPageModeChat = function (event) {
-        };
-
-        /**
-        * Triggered when an page mode chat message is sent out
-        * @event
-        * @param {message} the pageModeChat message that is sent
-        * @param {Event} event event data
-        */
-        this.onPageModeChatMessageSent = function (message, event) {
-        };
-
-        /**
-        * Triggered when an page mode chat message fails to be sent out
-        * @event
-        * @param {message} the pageModeChat message that is sent
-        * @param {Event} event event data
-        */
-        this.onPageModeChatMessageFailed = function (message, event) {
-        };
-
-
-        /**
-        * Triggered when an incoming file transfer is received during an active session
-        * @event
-        * @param {orca.Chat} fileTransfer incoming file transfer object
-        * @param {Event} event event data
-        */
-        this.onIncomingFileTransfer = function (fileTransfer, event) {
-        };
-
-        /**
-        * Triggered when an incoming image share is received during an active session
-        * @event
-        * @param {orca.Chat} imageShare incoming image share object
-        * @param {Event} event event data
-        */
-        this.onIncomingImageShare = function (imageShare, event) {
-        };
-
-        /**
-         * Triggered when presence information is received.
-         * This is a callback function that needs to be implemented 
-         * in application layer
-         * 
-         * @param {String} presenceInfo The body of NOTIFY message that contains the 
-         * information for subscribed presentity(ies).
-         * @param {Event} event event data containing the NOTIFY message header information
-         * including: event.from, event.to, event.callId, event.cSeq, event.subscriptionState,
-         * event.contentLength, event.contentType, event.type, event.boundary.
-         */
-         this.onPresenceNotify = function (presenceInfo, event) {
-         };
-
-         /**
-          * Triggered when successfully subscribe presence 
-          * This is a callback function that needs to be implemented 
-          * in application layer
-          * 
-          * @param {Event} event event data
-          */
-          this.onSubscribePresenceSuccess = function (event) {
-          };
-
-         /**
-         * Triggered when subscription to presence fails. 
-         * This is a callback function that needs to be implemented 
-         * in application layer
-         * 
-         * @param {Event} event event data
-         */
-         this.onSubscribePresenceFailed = function (event) {
-         };
-
-         /**
-          * Triggered when successfully unSubscribe presence 
-          * This is a callback function that needs to be implemented 
-          * in application layer
-          * 
-          * @param {Event} event event data
-          */
-          this.onGetPresenceSuccess = function (event) {
-          };
-
-          /**
-         * Triggered when get presence fails. 
-         * This is a callback function that needs to be implemented 
-         * in application layer
-         * 
-         * @param {Event} event event data
-         */
-         this.onGetPresenceFailed = function (event) {
-         };
-
-         /**
-         * Triggered when successfully updated presence
-         * @event
-         * @param {Event} event event data
-         */
-         this.onUpdatePresenceSuccess = function (event) {
-         };
-
-         /**
-         * Triggered when failed to update presence
-         * @event
-         * @param {Event} event event data
-         */
-         this.onUpdatePresenceFail = function (event) {
-         };
-          
-        /**
-        *  Returns the MDSP (Multiple Devices Shared PUID) contact information associated
-	*  with other device sharing the user's PUID.
-        */
-	this.getMDSPinfo = function() {
-		return sessionImp.mdsp.getContacts();
-	};
-
-        /**
-	* Pull a call from a shared PUID contact.
-        * Triggered when the user wishes to pull a call from a shared PUID contact.
-        * @param {orca.Call} call Outgoing call object
-        * @param {callInfo} callInfo Holds gruu and dialog associated with the call to be 'pulled'.
-        */
-	this.pullCallFromMDSPdialog = function( call, callInfo) {
-		sessionImp.mdsp.pullCallFromMDSPdialog( call, callInfo);
-	};
-
-	/*
-         *  Triggered when MDSP Information is updated.
-         *  This is a callback function that needs to be implemented 
-         *  in application layer
-         */
-	this.onMDSPinfoUpdate = function() {
-	};
-
-        /**
-        * @summary Triggered when a change in the call state occurs
-        * Examples of changes in call state are: Hold (call is placed on hold), Unhold (call is
-        * taken off hold)
-        * @event
-        * @param {SessionStatus} status Indicates the state that triggered the event
-        * @param {Event} event event data
-        */
-        this.onStatus = function (status, event) {
-        };
-        
-	/**
-	* @summary Update token.key and refresh session
-	*/
-	this.updateToken = function (tokenKey) {
-		 return sessionImp.updateToken(tokenKey);
-	};
-		/**
-		* @summary send ping frame
-		*/
-		this.sendPingFrame = function () {
-			return sessionImp.sendPingFrame();
-		}
-    }
-
-
-
-    /**
-    * @summary Provides access to methods for managing an outgoing or incoming call
-    * @classdesc Calls objects are obtained by calling the {@Link orca.Session#createCall}
-    * method or handling the onIncoming event of a connected {@Link orca.Session} instance
-    * ({@Link orca.Session#event:onIncoming})
-    * @Constructor
-    * @memberOf orca
-    */
-    function Call(to, mediatypes, sessionImp) {
-        var callImp = sessionImp.createCall(to, mediatypes, sessionImp, this),
-            id = generateCallId(),
-            localStreams = [];
-
-        /**
-        * Gets a unique identifier for the call 
-        * @type {string}
-        */
-        this.id = function () {
-            return id;
-        };
-
-        /**
-        * Gets the identities of the remote peers attached to this call
-        * @returns {PeerIdentity[]}
-        */
-        this.remoteIdentities = function () {
-            return callImp.remoteIdentities();
-        };
-
-        this.getpc = function () {
-            return callImp.getpc();
-        };
-
-        this.dumpCallInfo = function () {
-            return callImp.dumpCallInfo();
-        };
-
-        /**
-        * Adds a local media stream to the call. 
-        * Media stream instances are obtained from the browser's getUserMedia() method.
-        * Local media streams should be added using this method before the connect method 
-        * is called to either initiate a new call or answer a received call. 
-        * If a RTCMediaStream is passed to this function, it will be converted to a ManagedStream.
-        * In Orca ALU, this method may be used during an active call to replace the outgoing media 
-        * stream with a new one, allowing an upgrade from an audio to a video call for example.
-        * @param {(orca.ManagedStream|RTCMediaStream)} stream local media stream
-        * @returns {orca.ManagedStream}
-        */
-        this.addStream = function (stream) {
-            var managed = stream;
-            if (stream !== null) {
-                if (stream.constructor.name !== 'ManagedStream') {
-                    managed = orca.createManagedStream(stream);
-                }
-                localStreams.push(managed);
-                if (typeof callImp.addStream === 'function') {
-                    callImp.addStream(managed);
-                }
-                return managed;
-            }
-        };
-
-        /**
-        * @private
-        */
-        this.removeStream = function (stream) {
-            var managed = stream;
-            if (stream !== null) {
-                if (typeof callImp.removeStream === 'function') {
-                    callImp.removeStream(managed);
-                }
-                localStreams.shift();
-            }
-        };
-
-        /**
-        * Attempts to reach the call recipient and establish a connection. 
-        * For an incoming call, calling this method explicitly joins/accepts the call.
-        */
-        this.connect = function () {
-            return callImp.connect();
-        };
-
-        /**
-        * Ends an active call.
-        */
-        this.disconnect = function () {
-            return callImp.disconnect();
-        };
-
-        /**
-        * Called when a user does not wish to accept an incoming call. 
-        */
-        this.reject = function () {
-            return callImp.reject();
-        };
-
-        /**
-        * Retrieves a list of streams associated with this call.
-        * The return value is an array of ManagedStream instances with undefined order
-        * When no selector parameter is provided all local and remote streams are included
-        * in the returned array.
-        * The keywords *local* and *remote* can be specified to limit the results to local or 
-        * remote streams respectively.
-        * The *.* (period) symbol is used to prefix a keyword used to limit the results by the
-        * stream type.  E.g. ".video" would be used to return a list of streams with video tracks.
-        * The *#* (pound) symbol is used to prefix label text used to limit the results to a 
-        * to a single stream with a label matching the specified text.
-        * 
-        * @param {string} selector optional query to filter the result list
-        * @returns {orca.ManagedStream[]}
-        * @example
-        * // Get list of all local streams
-        * var localStreams = call.streams("local");
-        *
-        * // Get list of all audio streams
-        * var audioStreams = call.streams(".audio");
-        * 
-        * // Get stream with by its label name
-        * // If successful only one match should be
-        * // returned
-        * var stream0 = call.streams("#stream_0");
-        * if (stream0 && stream0.length == 1) {
-        * ...
-        * }
-        * 
-        * // Possible to support combined selections?
-        * // Get list of local audio streams
-        * var localAudio = call.streams("local.audio");
-        */
-        this.streams = function (selector) {
-            var result = [], el = '', id = '', audio = false, video = false;
-            if (selector && typeof selector === 'string') {
-                el = selector.match(/^[0-9a-zA-Z]*/)[0].toLowerCase();
-                id = selector.match(/#[0-9a-zA-Z]*/);
-                if (id) {
-                    id = id[0].substring(1);
-                } else {
-                    id = '';
-                }
-                audio = selector.match(/\.audio([#.\s]|$)/) ? true : false;
-                video = selector.match(/\.video([#.\s]|$)/) ? true : false;
-            }
-            if (el !== 'local') {
-                selectStreams(callImp.remoteStreams(), result, id, audio, video);
-            }
-            if (el !== 'remote') {
-                selectStreams(localStreams, result, id, audio, video);
-            }
-            return result;
-        };
-
-        /**
-        * Retrieves the current status of this call
-        * @returns {CallStatus}
-        */
-        this.getStatus = function () {
-            return callImp.getStatus();
-        };
-
-        /**
-        * Gets the media stream types used in this call as a comma-separated list, e.g.
-        * "audio,video". (Orca ALU feature, not in standard Orca.)
-        * @returns {string}
-        */
-        this.getMediaTypes = function () {
-            return callImp.getMediaTypes();
-        };
-
-        /**
-        * Add a new participant to a group call of which you are the initiator. (Orca ALU
-        * feature, not in standard Orca.)
-        * @param {string} target The user to add
-        */
-        this.addParticipant = function (target) {
-            return callImp.addParticipant(target);
-        };
-
-        /**
-        * Remove a participant from a group call of which you are the initiator. (Orca ALU
-        * feature, not in standard Orca.)
-        * @param {string} target The user to remove
-        */
-        this.removeParticipant = function (target) {
-            return callImp.removeParticipant(target);
-        };
-
-        /**
-        * Send DTMF. (Orca ALU feature, not in standard Orca.)
-        * @param {string} dtmf The DTMF to send
-        */
-        this.sendDTMF = function (dtmf) {
-            return callImp.sendDTMF(dtmf);
-        };
-
-        /**
-        * Blind transfer a call via SIP REFER request. (Orca ALU feature, not in standard Orca.)
-        * @param {string} target the user identifier to transfer the call to
-        */
-        this.transfer = function (target) {
-            return callImp.transfer(target);
-        };
-
-        /**
-         *  Locally mute audio and/or video. (Orca ALU feature, not in standard Orca.)
-         */
-        this.mute = function (media_types) {
-            var streams = this.streams('local'), i;
-            if (media_types === undefined) {
-                // no argument provided so mute both
-                for (i = 0; i < streams.length; i += 1) {
-                    streams[i].stop();
-                }
-                return;
-            }
-            if (media_types.indexOf('audio') >= 0) {
-                // Muting audio
-                for (i = 0; i < streams.length; i += 1) {
-                    setTrackListEnabled(streams[i].stream().getAudioTracks(), false);
-                }
-            }
-            if (media_types.indexOf('video') >= 0) {
-                // Muting video
-                for (i = 0; i < streams.length; i += 1) {
-                    setTrackListEnabled(streams[i].stream().getVideoTracks(), false);
-                }
-            }
-        };
-
-        /**
-         *  Locally un-mute audio and/or video. (Orca ALU feature, not in standard Orca.)
-         */
-        this.unmute = function (media_types) {
-            var streams = this.streams('local'), i;
-            if (media_types === undefined) {
-                // no argument provided so mute both
-                for (i = 0; i < streams.length; i += 1) {
-                    streams[i].resume();
-                }
-                return;
-            }
-            if (media_types.indexOf('audio') >= 0) {
-                // Un-Muting audio
-                for (i = 0; i < streams.length; i += 1) {
-                    setTrackListEnabled(streams[i].stream().getAudioTracks(), true);
-                }
-            }
-            if (media_types.indexOf('video') >= 0) {
-                // Un-Muting video
-                for (i = 0; i < streams.length; i += 1) {
-                    setTrackListEnabled(streams[i].stream().getVideoTracks(), true);
-                }
-
-            }
-        };
-
-        /**
-        * Places a call on hold. (Orca ALU feature, not in standard Orca.)
-        */
-        this.hold = function (type) {
-            callImp.hold(type);
-        };
-
-        /**
-        * Takes a call off hold. (Orca ALU feature, not in standard Orca.)
-        */
-        this.resume = function () {
-            callImp.resume();
-        };
-
-        /**
-        * Create data channel. (Orca ALU feature, not in standard Orca.)
-        */
-        this.createDataChannel = function () {
-            callImp.createDataChannel();
-        };
-
-        /**
-        * Sends text message via data channel. (Orca ALU feature, not in standard Orca.)
-        */
-        this.sendMessage = function (msg) {
-            callImp.sendMessage(msg);
-        };
-
-        /**
-        * Sends binary file via data channel. (Orca ALU feature, not in standard Orca.)
-        */
-        this.sendFile = function (url) {
-            callImp.sendFile(url);
-        };
-
-        /**
-        * @summary Triggered when a remote stream is added to the call
-        * @event
-        * @param {orca.ManagedStream} stream remote media stream
-        * @param {Event} event event data
-        */
-        this.onAddStream = function (stream, event) {
-        };
-
-        /**
-        * @summary Triggered when a call is connected
-        * @event
-        * @param {Event} event event data
-        */
-        this.onConnected = function (event) {
-        };
-
-        /**
-        * @summary Triggered when a call is disconnected
-        * @event
-        * @param {Event} event event data
-        */
-        this.onDisconnected = function (event) {
-        };
-
-        /**
-        * @summary Triggered when an error condition occurs
-        * @event
-        * @param {CallError} status Indicates the error that caused the event
-        * @param {Event} event event data
-        */
-        this.onError = function (error, event) {
-        };
-
-        /**
-        * Triggered when a change in the session state occurs
-        * @event
-        * @param {CallStatus} status Indicates the state that caused the event
-        * @param {Event} event event data
-        */
-        this.onStatus = function (status, event) {
-        };
-
-        /**
-        * Triggered when a change in the session state occurs
-        * @event
-        * @param {Event} event event data
-        */
-        this.onMessage = function (event) {
-        };
-
-	/**
-	* Push a call to a shared PUID contact.
-	* @param {string} pushToGruu Holds gruu associated with contact to which the call will be 'pushed'.
-	*/
-	this.pushCallToMDSPcontact = function( pushToGruu) {
-		sessionImp.mdsp.pushCallToContact( callImp, pushToGruu);
-	};
-
-	/**
-	* @private
-	*/
-        this.getCallImp = function() {
-            return callImp;
-        };
-    }
-
-
-
-    /**
-    * @summary Provides access to methods for managing an outgoing or incoming chat
-    * @classdesc Chat objects are obtained by calling the {@Link orca.Session#createChat}
-    * method or handling the onIncomingChat event of a connected {@Link orca.Session} instance
-    * ({@Link orca.Session#event:onIncomingChat})
-    * @Constructor
-    * @memberOf orca
-    */
-    function Chat(to, sessionImp) {
-        var chatImp = sessionImp.createChat(to, sessionImp, this),
-            id = generateCallId();
-
-		/**
-		* @private
-		*/
-        this.getImp = function() {
-            return chatImp;
-        };
-
-        /**
-        * Gets a unique identifier for the communication 
-        * @type {string}
-        */
-        this.id = function () {
-            return id;
-        };
-
-        /**
-        * Gets the identities of the remote peers attached to this communication
-        * @returns {PeerIdentity[]}
-        */
-        this.remoteIdentities = function () {
-            return chatImp.remoteIdentities();
-        };
-
-        /**
-        * Retrieves the current status of this communication
-        * @returns {CommStatus}
-        */
-        this.getStatus = function () {
-            return chatImp.getStatus();
-        };
-
-        /**
-        * Attempts to reach the recipient and establish a connection. 
-        * For an incoming communication, this method is used to accept it.
-        */
-        this.connect = function () {
-            return chatImp.connect();
-        };
-
-        /**
-        * Ends an active communication.
-        */
-        this.disconnect = function () {
-            return chatImp.disconnect();
-        };
-
-        /**
-        * Decline an incoming communication. 
-        */
-        this.reject = function () {
-            return chatImp.reject();
-        };
-
-        /**
-        * Send a textual message to the other chat participant. 
-        * @param {string} message The message content to send
-        */
-        this.sendMessage = function (message) {
-            return chatImp.sendMessage(message);
-        };
-
-        /**
-        * @summary Triggered when the communication is connected
-        * @event
-        * @param {Event} event event data
-        */
-        this.onConnected = function (event) {
-        };
-
-        /**
-        * @summary Triggered when the communication is disconnected
-        * @event
-        * @param {Event} event event data
-        */
-        this.onDisconnected = function (event) {
-        };
-
-        /**
-        * @summary Triggered when an error condition occurs
-        * @event
-        * @param {CommError} status Indicates the error that caused the event
-        * @param {Event} event event data
-        */
-        this.onError = function (error, event) {
-        };
-
-        /**
-        * Triggered when a change in the session state occurs
-        * @event
-        * @param {CommStatus} status Indicates the state that caused the event
-        * @param {Event} event event data
-        */
-        this.onStatus = function (status, event) {
-        };
-
-        /**
-        * Triggered when a textual message is received from the other chat participant
-        * @event
-        * @param {string} message The message content that was received
-        * @param {Event} event event data
-        */
-        this.onReceived = function (message, event) {
-        };
-
-    }
-
-
-
-    /**
-    * @summary Provides access to methods for managing an outgoing or incoming file transfer
-    * @classdesc FileTransfer objects are obtained by calling the {@Link orca.Session#createFileTransfer}
-    * method or handling the onIncomingFileTransfer event of a connected {@Link orca.Session} instance
-    * ({@Link orca.Session#event:onIncomingFileTransfer})
-    * @Constructor
-    * @memberOf orca
-    */
-    function FileTransfer(to, file, sessionImp) {
-        var fileTransferImp = sessionImp.createFileTransfer(to, file, sessionImp, this),
-            id = generateCallId();
-
-		/**
-		* @private
-		*/
-        this.getImp = function() {
-            return fileTransferImp;
-        };
-
-        /**
-        * Gets a unique identifier for the communication 
-        * @type {string}
-        */
-        this.id = function () {
-            return id;
-        };
-
-        /**
-        * Gets the identities of the remote peers attached to this communication
-        * @returns {PeerIdentity[]}
-        */
-        this.remoteIdentities = function () {
-            return fileTransferImp.remoteIdentities();
-        };
-
-        /**
-        * Retrieves the current status of this communication
-        * @returns {CommStatus}
-        */
-        this.getStatus = function () {
-            return fileTransferImp.getStatus();
-        };
-
-        /**
-        * Attempts to reach the recipient and establish a connection. 
-        * For an incoming communication, this method is used to accept it.
-        */
-        this.connect = function () {
-            return fileTransferImp.connect();
-        };
-
-        /**
-        * Ends an active communication.
-        */
-        this.disconnect = function () {
-            return fileTransferImp.disconnect();
-        };
-
-        /**
-        * Decline an incoming communication. 
-        */
-        this.reject = function () {
-            return fileTransferImp.reject();
-        };
-
-        /**
-        * @summary Triggered when the communication is connected
-        * @event
-        * @param {Event} event event data
-        */
-        this.onConnected = function (event) {
-        };
-
-        /**
-        * @summary Triggered when the communication is disconnected
-        * @event
-        * @param {Event} event event data
-        */
-        this.onDisconnected = function (event) {
-        };
-
-        /**
-        * @summary Triggered when an error condition occurs
-        * @event
-        * @param {CommError} status Indicates the error that caused the event
-        * @param {Event} event event data
-        */
-        this.onError = function (error, event) {
-        };
-
-        /**
-        * Triggered when a change in the session state occurs
-        * @event
-        * @param {CommStatus} status Indicates the state that caused the event
-        * @param {Event} event event data
-        */
-        this.onStatus = function (status, event) {
-        };
-
-        /**
-        * Triggered when the complete file is received from the other party. Only the recipient will get this event.
-        * @event
-        * @param {Blob} message The file that was received
-        * @param {Event} event event data
-        */
-        this.onReceived = function (message) {
-        };
-
-    }
-
-
-
-    /**
-    * @summary Provides access to methods for managing an outgoing or incoming image share
-    * @classdesc ImageShare objects are obtained by calling the {@Link orca.Session#createFileTransfer}
-    * method or handling the onIncomingImageShare event of a connected {@Link orca.Session} instance
-    * ({@Link orca.Session#event:onIncomingImageShare})
-    * @Constructor
-    * @memberOf orca
-    */
-    function ImageShare(to, file, sessionImp) {
-        var imageShareImp = sessionImp.createImageShare(to, file, sessionImp, this),
-            id = generateCallId();
-
-		/**
-		* @private
-		*/
-        this.getImp = function() {
-            return imageShareImp;
-        };
-
-        /**
-        * Gets a unique identifier for the communication 
-        * @type {string}
-        */
-        this.id = function () {
-            return id;
-        };
-
-        /**
-        * Gets the identities of the remote peers attached to this communication
-        * @returns {PeerIdentity[]}
-        */
-        this.remoteIdentities = function () {
-            return imageShareImp.remoteIdentities();
-        };
-
-        /**
-        * Retrieves the current status of this communication
-        * @returns {CommStatus}
-        */
-        this.getStatus = function () {
-            return imageShareImp.getStatus();
-        };
-
-        /**
-        * Attempts to reach the recipient and establish a connection. 
-        * For an incoming communication, this method is used to accept it.
-        */
-        this.connect = function () {
-            return imageShareImp.connect();
-        };
-
-        /**
-        * Ends an active communication.
-        */
-        this.disconnect = function () {
-            return imageShareImp.disconnect();
-        };
-
-        /**
-        * Decline an incoming communication. 
-        */
-        this.reject = function () {
-            return imageShareImp.reject();
-        };
-
-        /**
-        * @summary Triggered when the communication is connected
-        * @event
-        * @param {Event} event event data
-        */
-        this.onConnected = function (event) {
-        };
-
-        /**
-        * @summary Triggered when the communication is disconnected
-        * @event
-        * @param {Event} event event data
-        */
-        this.onDisconnected = function (event) {
-        };
-
-        /**
-        * @summary Triggered when an error condition occurs
-        * @event
-        * @param {CommError} status Indicates the error that caused the event
-        * @param {Event} event event data
-        */
-        this.onError = function (error, event) {
-        };
-
-        /**
-        * Triggered when a change in the session state occurs
-        * @event
-        * @param {CommStatus} status Indicates the state that caused the event
-        * @param {Event} event event data
-        */
-        this.onStatus = function (status, event) {
-        };
-
-        /**
-        * Triggered when the complete file is received from the other party. Only the recipient will get this event.
-        * @event
-        * @param {Blob} message The file that was received
-        * @param {Event} event event data
-        */
-        this.onReceived = function (message) {
-        };
-
-    }
-
-    
-    /**
-     * @summary Provides access to methods for managing an address book
-     * @classdesc AddressBook objects are obtained by calling the {@Link orca.createAddressBook}
-     * @Constructor
-     * @memberOf orca
-     */
-    function AddressBook(userId, token, abConfig) {
-    	var abImp = abConfig.provider.createAddressBook(userId, token, abConfig, this);
-
-    	/**
-    	* Get lists.
-    	* @param {boolean} getMembersInList If true, return list IDs and list members.
-    	* If false, return list IDs.Default is false.
-    	* @returns {List[]}
-    	*/
-    	this.getLists = function (getMembersInList) {
-    		return abImp.getLists(getMembersInList);
-    	};
-
-    	/**
-    	* Get members.
-    	* @param {string} listId ID for the list
-    	* @returns {List}
-    	*/
-    	this.getMembers = function (listId) {
-    		return abImp.getMembers(listId);
-    	};
-
-
-    	/**
-    	* Get contacts.
-    	* @returns {Contact[]}
-    	*/
-    	this.getContacts = function () {
-    		return abImp.getContacts();
-    	};
-
-
-    	/**
-    	* Create a list, or add a member in the list. If listId is present 
-    	* and member is missing then it creates an empty list.
-    	* @param {string} listId ID for the list
-    	* @param {Member} member Member to add
-    	*/
-    	this.addMember = function (listId, member) {
-    		return abImp.addMember(listId, member);
-    	};
-
-
-    	/**
-    	* Create a contact.
-    	* @param {Contact} contact Contact to add
-    	*/
-    	this.addContact = function (contact) {
-    		return abImp.addContact(contact);
-    	};
-
-
-    	/**
-    	* Update a member in the list.
-    	* @param {string} listId ID for the list
-    	* @param {Member} member Member to update
-    	*/
-    	this.updateMember = function (listId, member) {
-    		return abImp.updateMember(listId, member);
-    	};
-
-
-    	/**
-    	* Update a contact.
-    	* @param {Contact} contact Contact to update
-    	*/
-    	this.updateContact = function (contact) {
-    		return abImp.updateContact(contact);
-    	};
-
-    	/**
-    	* Delete the list.
-    	* @param {string} listId ID for the list
-    	*/
-    	this.deleteList = function (listId) {
-    		return abImp.deleteList(listId);
-    	};
-
-
-    	/**
-    	* Delete a member in the list.
-    	* @param {string} listId ID for the list
-    	* @param {Member} member Member to delete
-    	*/
-    	this.deleteMember = function (listId, member) {
-    		return abImp.deleteMember(listId, member);
-    	};
-
-
-    	/**
-    	* Delete a contact.
-    	* @param {Contact} contact Contact to delete
-    	*/
-    	this.deleteContact = function (contact) {
-    		return abImp.deleteContact(contact);
-    	};
-
-
-    	/**
-    	* Transfer a member to a new list.
-    	* @param {string} listId ID for the list
-    	* @param {Member} member Member to move
-    	* @param {string} newListId the new list ID to move to
-    	*/
-    	this.trnsferMember = function (listId, member, newListId) {
-    		return abImp.trnsferMember(listId, member, newListId);
-    	};
-
-
-    	 /**
-    	 * Triggered when an error condition occurs
-         * @event
-    	 * @param {AddressBookError} error status Indicates the error that 
-    	 * caused the event
-    	 * @param {Event} event event data
-    	 */ 
-    	 this.onError = function (error, event) {
-    	 };
-
-
-    	 /**
-    	 * Triggered when lists is received
-    	 * @event
-    	 * @param {List[]} lists received lists
-    	 * @param {Event} event event data
-    	 */
-    	 this.onGetLists = function (lists, event) {
-    	 };
-
-
-    	 /**
-    	 * Triggered when an list is received
-    	 * @event
-    	 * @param {List} list received list
-    	 * @param {Event} event event data
-    	 */
-    	 this.onGetMembers = function (list, event) {
-    	 };
-
-
-    	 /**
-    	 * Triggered when an lists is received
-    	 * @event
-    	 * @param {Contact[]} contacts received contacts
-    	 * @param {Event} event event data
-    	 */
-    	 this.onGetContacts = function (contacts, event) {
-    	 };
-
-
-    	 /**
-    	 * Triggered when a member adds successfully
-    	 * @event
-    	 * @param {Event} event event data
-    	 */
-    	 this.onAddMember = function (event) {
-    	 };
-
-
-    	 /**
-    	 * Triggered when a contact adds successfully
-    	 * @event
-    	 * @param {Event} event event data
-    	 */
-    	 this.onAddContact = function (event) {
-    	 };
-
-
-    	 /**
-    	 * Triggered when a member updates successfully
-    	 * @event
-    	 * @param {Event} event event data
-    	 */
-    	 this.onUpdateMember = function (event) {
-    	 };
-
-
-    	 /**
-    	 * Triggered when a contact updates successfully
-    	 * @event
-    	 * @param {Event} event event data
-    	 */
-    	 this.onUpdateContact = function (event) {
-    	 };
-
-
-    	 /**
-    	 * Triggered when a list deletes successfully
-    	 * @event
-    	 * @param {Event} event event data
-    	 */
-    	 this.onDeleteList = function (event) {
-    	 };
-
-
-    	 /**
-    	 * Triggered when a member deletes successfully
-    	 * @event
-    	 * @param {Event} event event data
-    	 */
-    	 this.onDeleteMember = function (event) {
-    	 };
-
-
-    	 /**
-    	 * Triggered when a contact deletes successfully
-    	 * @event
-    	 * @param {Event} event event data
-    	 */
-    	 this.onDeleteContact = function (event) { 
-    	 };
-
-
-    	 /**
-    	 * Triggered when a member transfers successfully
-    	 * @event
-    	 * @param {Event} event event data
-    	 */
-    	 this.onTransferMember = function (event) {
-    	 };
-   	}
-    
-
-
-    /**
-    * @private
-    */
-    function generateCallId() {
-        var id = '', i,
-            an = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
-        for (i = 0; i < 8; i += 1) {
-            id += an.charAt(Math.floor(Math.random() * an.length));
-        }
-        return id;
-    }
-
-    /**
-    * @private
-    */
-    function setTrackListEnabled(tracklist, value) {
-        var i;
-        for (i = 0; i < tracklist.length; i += 1) {
-            tracklist[i].enabled = value;
-        }
-    }
-
-    /**
-    * @private
-    */
-    function selectStreams(list, result, id, audio, video) {
-        var i, stream;
-        for (i = 0; i < list.length; i += 1) {
-            stream = list[i].stream();
-            if ((id === '' || stream.id === id) &&
-                    (!audio || stream.getAudioTracks().length > 0) &&
-                    (!video || stream.getVideoTracks().length > 0)) {
-                result.push(list[i]);
-            }
-        }
-    }
-     
-    /**
-    * @summary Possible errors associated with an orca.Call
-    * @typedef CallError
-    * @type enum 
-    * @property {string} NETWORK_ERROR An error has occured 
-    */
-    CallError = {};
-    CallError.NETWORK_FAILURE = 'call_error_network_failure';
-
-    /**
-    * @summary Possible states of an orca.Call
-    * @typedef CallStatus
-    * @type enum 
-    * @property {string} CONNECTING The call is in the process of connecting to the remote party
-    * @property {string} HOLD The call has been placed on hold by the local party
-    * @property {string} UNHOLD The call has been taken out of the "on hold" state (Not returned
-    * by Call.getStatus, as not a persistent state)
-    * @property {string} REJECTED The call refused by the remote party (Not returned by 
-    * Call.getStatus, as not a persistent state)
-    * @property {string} CANCELED The call canceled
-    * @property {string} CONNECTED The call is connected to the remote party
-    * @property {string} DISCONNECTED The call is terminated
-    * @property {string} REMOTE_HOLD The call has been placed on hold by the remote party (Orca
-    * ALU only, not in standard Orca)
-    * @property {string} UPGRADING Received an invitation to upgrade to an audiovideo call. At
-    * this point, an updated media stream should be attached using {@Link orca.Call#addStream}
-    * (Not returned by Call.getStatus, as not a persistent state) (Orca ALU only, not in
-    * standard Orca)
-    * @property {string} DOWNGRADING Received an invitation to downgrade to an audio-only call.
-    * At this point, an updated media stream should be attached using {@Link orca.Call#addStream}
-    * (Not returned by Call.getStatus, as not a persistent state) (Orca ALU only, not in standard
-    * Orca)
-    * @property {string} ADDSTREAM Received a media stream from the remote party (Not returned by
-    * Call.getStatus, as not a persistent state) (Orca ALU only, not in standard Orca)
-    */
-    CallStatus = {};
-    CallStatus.CONNECTING = 'call_status_connecting';
-    CallStatus.HOLD = 'call_status_hold';
-    CallStatus.UNHOLD = 'call_status_unhold';
-    CallStatus.REJECTED = 'call_status_rejected';
-    CallStatus.CANCELED = 'call_status_canceled';
-    CallStatus.CONNECTED = 'call_status_connected';
-    CallStatus.DISCONNECTED = 'call_status_disconnected';
-    CallStatus.REMOTE_HOLD = 'call_status_remote_hold';
-    CallStatus.UPGRADING = 'call_status_upgrading';
-    CallStatus.DOWNGRADING = 'call_status_downgrading';
-    CallStatus.ADDSTREAM = 'call_status_add_stream';
-
-    /**
-    * @summary Possible errors associated with an orca.Chat, orca.FileTransfer, or orca.ImageShare
-    * @typedef CommError
-    * @type enum 
-    * @property {string} NETWORK_ERROR An error has occured 
-    */
-    CommError = {};
-    CommError.NETWORK_FAILURE = 'comm_error_network_failure';
-    CommError.NOT_SUPPORTED = 'comm_error_not_supported';
-
-    /**
-    * @summary Possible states of an orca.Chat, orca.FileTransfer, or orca.ImageShare
-    * @typedef CommStatus
-    * @type enum 
-    * @property {string} CONNECTING The communication is in the process of connecting to the remote party
-    * @property {string} REJECTED The communication refused by the remote party (Not returned by 
-    * getStatus, as not a persistent state)
-    * @property {string} CANCELED The communication canceled
-    * @property {string} CONNECTED The communication is connected to the remote party
-    * @property {string} DISCONNECTED The communication is terminated
-    * @property {string} PROGRESS Some portion of a file has been sent or received. (Not returned by 
-    * getStatus, as not a persistent state.)
-    * @property {string} SENDSUCCESS The outgoing file or message has been delivered completely. (Not returned by 
-    * getStatus, as not a persistent state.)
-    * @property {string} SENDFAIL The outgoing file or message failed to be delivered. (Not returned by 
-    * getStatus, as not a persistent state.)
-    * @property {string} RECEIVED The incoming file or message has been received in full. (Not returned by 
-    * getStatus, as not a persistent state.)
-    */
-    CommStatus = {};
-    CommStatus.CONNECTING = 'comm_status_connecting';
-    CommStatus.REJECTED = 'comm_status_rejected';
-    CommStatus.CANCELED = 'comm_status_canceled';
-    CommStatus.CONNECTED = 'comm_status_connected';
-    CommStatus.DISCONNECTED = 'comm_status_disconnected';
-    CommStatus.PROGRESS = 'comm_status_progress';
-    CommStatus.SENDSUCCESS = 'comm_status_send_success';
-    CommStatus.SENDFAIL = 'comm_status_send_fail';
-    CommStatus.RECEIVED = 'comm_status_received';
-
-    /**
-    * @summary Provides information about an event. (This describes a data type. It is not
-    * accessible as a global object.)
-    * @typedef Event
-    * @type object 
-    * @property {(CallStatus|SessionStatus|AddressBookStatus)} name Gets the name/type indicator of the event
-    */
-
-    /**
-    * @summary Provides information about the identity of a communications peer. (This describes a
-    * data type. It is not accessible as a global object.)
-    * @typedef PeerIdentity
-    * @type object 
-    * @property {string} id the unique identifier or address string of the associated user
-    */
-
-    /**
-    * @summary Possible errors associated with an orca.Session
-    * @typedef SessionError
-    * @type enum 
-    * @property {string} AUTHENTICATION_FAILED User credentials are invalid
-    * @property {string} NETWORK_ERROR No response recieved within maximum expected time
-    */
-    SessionError = {};
-    SessionError.AUTHENTICATION_FAILED = 'session_error_authentication_failed';
-    SessionError.NETWORK_ERROR = 'session_error_network_error';
-
-    /**
-    * @summary Possible states of an orca.Session
-    * @typedef SessionStatus
-    * @type enum 
-    * @property {string} CONNECTED The session has been successfully established
-    * @property {string} CONNECTING The session is in the process of being established
-    * @property {string} DISCONNECTED The session has been torn down
-    * @property {string} INCOMINGCALL The session has received an incoming call (Not returned by
-    * Session.getStatus, as not a persistent state)
-    * @property {string} AUTHENTICATING The session is in the process of authentication
-    * @property {string} INCOMINGCHAT The session has received an incoming chat (Not returned by
-    * Session.getStatus, as not a persistent state)
-    * @property {string} INCOMINGFILE The session has received an incoming file transfer (Not returned by
-    * Session.getStatus, as not a persistent state)
-    * @property {string} INCOMINGIMAGE The session has received an incoming image share (Not returned by
-    * Session.getStatus, as not a persistent state)
-    * @property {string} INCOMINGAUTOANSWER The session has received an incoming call that
-    * should be answered automatically (Not returned by Session.getStatus, as it is not a 
-    * persistent state)
-    * @property {string} UPDATEPRESENCESUCCESS Update presence succeeded
-    * (Not returned by Session.getStatus, as it is not a persistent state)
-    * @property {string} UPDATEPRESENCEFAIL Update presence failed
-    * (Not returned by Session.getStatus, as it is not a persistent state)
-    */
-    SessionStatus = {};
-    SessionStatus.CONNECTED = 'session_status_connected';
-    SessionStatus.CONNECTING = 'session_status_connecting';
-    SessionStatus.DISCONNECTED = 'session_status_disconnected';
-    SessionStatus.INCOMINGCALL = 'session_status_incoming_call';
-    SessionStatus.AUTHENTICATING = 'session_status_authenticating';
-    SessionStatus.INCOMINGCHAT = 'session_status_incoming_chat';
-    SessionStatus.INCOMINGFILE = 'session_status_incoming_file';
-    SessionStatus.INCOMINGIMAGE = 'session_status_incoming_image';
-    SessionStatus.INCOMINGAUTOANSWER = 'session_status_incoming_auto_answer';
-    SessionStatus.UPDATEPRESENCESUCCESS = 'session_status_update_presence_success';
-    SessionStatus.UPDATEPRESENCEFAIL = 'session_status_update_presence_fail';
-
-    /**
-     * @summary Possible errors associated with an orca.AddressBook
-     * @typedef AddressBookError
-     * @type enum 
-     * @property {string} AUTHENTICATION_FAILED User credentials are invalid
-     * @property {string} CONFIG_ERROR Config are null or invalid
-     * @property {string} PARAMETERS_ERROR Parameters are null or invalid  
-     * @property {string} NETWORK_ERROR No response recieved within maximum expected time
-     */
-     AddressBookError = {};
-     AddressBookError.AUTHENTICATION_FAILED = 'addressbook_error_authentication_failed';
-     AddressBookError.CONFIG_ERROR = 'addressbook_error_config_error';
-     AddressBookError.PARAMETERS_ERROR = 'addressbook_error_parameters_error';
-     AddressBookError.NETWORK_ERROR = 'addressbook_error_network_error';
-    
-    
-    /**
-     * @summary Possible states of an orca.AddressBook
-     * @typedef AddressBookStatus
-     * @type enum 
-     * @property {string} GETLISTS_SUCCESSFUL The getLists operation successful
-     * @property {string} GETMEMBERS_SUCCESSFUL The getMembers operation successful
-     * @property {string} GETCONTACTS_SUCCESSFUL The getContacts operation successful
-     * @property {string} ADDMEMBER_SUCCESSFUL The addMember operation successful
-     * @property {string} ADDCONTACT_SUCCESSFUL The addContact operation successful
-     * @property {string} UPDATEMEMBER_SUCCESSFUL The updateMebmer operation successful
-     * @property {string} UPDATECONTACT_SUCCESSFUL The updateContact operation successful
-     * @property {string} DELETELIST_SUCCESSFUL The deleteList operation successful
-     * @property {string} DELETEMEMBER_SUCCESSFUL The deleteMember operation successful
-     * @property {string} DELETECONTACT_SUCCESSFUL The deleteContact operation successful
-     * @property {string} TRANSFERMEMBER_SUCCESSFUL The transferMember operation successful
-     * @property {string} GETLISTS_FAILED The getLists operation failed
-     * @property {string} GETMEMBERS_FAILED The getMembers operation failed
-     * @property {string} GETCONTACTS_FAILED The getContacts operation failed
-     * @property {string} ADDMEMBER_FAILED The addMember operation failed
-     * @property {string} ADDCONTACT_FAILED The addContact operation failed
-     * @property {string} UPDATEMEMBER_FAILED The updateMebmer operation failed
-     * @property {string} UPDATECONTACT_FAILED The updateContact operation failed
-     * @property {string} DELETELIST_FAILED The deleteList operation failed
-     * @property {string} DELETEMEMBER_FAILED The deleteMember operation failed
-     * @property {string} DELETECONTACT_FAILED The deleteContact operation failed
-     * @property {string} TRANSFERMEMBER_FAILED The transferMember operation failed
-     */
-     AddressBookStatus = {};     
-     AddressBookStatus.GETLISTS_SUCCESSFUL = 'addressbook__status_getLists_successful';
-     AddressBookStatus.GETMEMBERS_SUCCESSFUL = 'addressbook_status_getMembers_successful';
-     AddressBookStatus.GETCONTACTS_SUCCESSFUL = 'addressbook_status_getContacts_successful';
-     AddressBookStatus.ADDMEMBER_SUCCESSFUL = 'addressbook_status_addMember_successful';
-     AddressBookStatus.ADDCONTACT_SUCCESSFUL = 'addressbook_status_addContact_successful';
-     AddressBookStatus.UPDATEMEMBER_SUCCESSFUL = 'addressbook_status_updateMebmer_successful';
-     AddressBookStatus.UPDATECONTACT_SUCCESSFUL = 'addressbook_status_updateContact_successful';
-     AddressBookStatus.DELETELIST_SUCCESSFUL = 'addressbook_status_deleteList_successful';
-     AddressBookStatus.DELETEMEMBER_SUCCESSFUL = 'addressbook_status_deleteMember_successful';
-     AddressBookStatus.DELETECONTACT_SUCCESSFUL = 'addressbook_status_deleteContact_successful';
-     AddressBookStatus.TRANSFERMEMBER_SUCCESSFUL = 'addressbook_status_transferMember_successful';
-     AddressBookStatus.GETLISTS_FAILED = 'addressbook_status_getLists_failed';
-     AddressBookStatus.GETMEMBERS_FAILED = 'addressbook_status_getMembers_failed';
-     AddressBookStatus.GETCONTACTS_FAILED = 'addressbook_status_getContacts_failed';
-     AddressBookStatus.ADDMEMBER_FAILED = 'addressbook_status_addMember_failed';
-     AddressBookStatus.ADDCONTACT_FAILED = 'addressbook_status_addContact_failed';
-     AddressBookStatus.UPDATEMEMBER_FAILED = 'addressbook_status_updateMebmer_failed';
-     AddressBookStatus.UPDATECONTACT_FAILED = 'addressbook_status_updateContact_failed';
-     AddressBookStatus.DELETELIST_FAILED = 'addressbook_status_deleteList_failed';
-     AddressBookStatus.DELETEMEMBER_FAILED = 'addressbook_status_deleteMember_failed';
-     AddressBookStatus.DELETECONTACT_FAILED = 'addressbook_status_deleteContact_failed';
-     AddressBookStatus.TRANSFERMEMBER_FAILED = 'addressbook_status_transferMember_failed';
-    
-    /**
-    * @summary Configuration properties for an orca.Session. (This describes a data type. It is
-    * not accessible as a global object.)
-    * @typedef SessionConfig
-    * @type object 
-    * @property {string} uri The address of the gateway server
-    * @property {object} provider Reference to implementation providing actual functionality.
-    * For Orca ALU, this is the orcaALU object.
-    * @property {string} mediatypes The types of media streams that the created session will
-    * support; defaults if not provided
-    * @property {ProviderConfig} providerConfig Provider-specific settings
-    */
-
-    /**
-    * @summary Provider-specific configuration properties for an orca.Session. (This
-    * describes a data type. It is not accessible as a global object.) Most of these
-    * advanced settings are not needed in most situations and have sensible default values,
-    * thus the application does not need to set them. Typically the application will only
-    * need to set conferenceFactoryURI (if advanced conferencing feature is available)
-    * and crypto (to specify whether DTLS or SDES should be used.)
-    * @typedef ProviderConfig
-    * @type object 
-    * @property {string} interfaceType Value for the signalling interface. Set as 'SIP-WS' for 
-    * SIP over Websocket, 'REST-WS' for REST over Websocket. Default is SIP-WS. REST-WS was supported
-    * from ORCA ECMS load 29.14.01.xx and it can only work with IMS 13.1/ISC 24.1/IBC-4 R4.0 
-    * as a proof-of-concept.
-    * @property {string} stun The STUN server to use for calls. Defaults to blank (none).
-    * @property {boolean} bundle If false, the line "a=group:BUNDLE" is removed from the SDP if
-    * present. If true, no change is made. Defaults to true.
-    * @property {string} crypto Default is 'sdes-srtp'. "dtls-srtp" is used for Firefox 
-    * as dtls-srtp is the only supported cryption for Firefox.
-    * @property {string} conferenceFactoryURI Conference factory public ID, needed for conference
-    * calling feature.
-    * @property {(string|number)} expires Value for the Expires header in the initial SIP
-    * REGISTER. Default is '600'.
-    * @property {boolean} addCodecs If set to true, then if VP8 codec is missing from incoming
-    * SDP, then all codecs are replaced with the VP8, red, and ulpfec codecs. If false, no change
-    * is made. Default is false.
-    * @property {string} dtmf Specify the DTMF method to use. Set as 'sip' for SIP INFO, 'inband'
-    * for inband, or 'both' for both. Default is both.
-    * @property {string|number} dtmfDuration Duration of a DTMF tone, in milliseconds. Default is 100.
-    * @property {string|number} dtmfGap Gap between DTMF tones, in milliseconds. Default is 70.
-    * @property {(string|number)} audioBandwidth The target bandwidth for audio in kilobits per
-    * second. Default is unconstrained.
-    * @property {(string|number)} videoBandwidth The target bandwidth for video in kilobits per
-    * second. Default is unconstrained.
-    * @property {(string|number)} dataBandwidth The target bandwidth for MSRP over DataChannel
-    * in kilobits per second. Default is unconstrained.
-    * @property {string} audioCodecs Comma-separated list of allowed audio codecs.
-    * If a value is given, then any audio codecs not in the list will be removed from SDP.
-    * If no value or an empty string is given, then no change is made. Default is no change.
-    * @property {string} videoCodecs Comma-separated list of allowed video codecs.
-    * If a value is given, then any video codecs not in the list will be removed from SDP.
-    * If no value or an empty string is given, then no change is made. Default is no change.
-    * @property {boolean} persistentPC If true, create a new PeerConnection whenever the
-    * MediaStream is changed during a call, for example during a video upgrade or downgrade.
-    * If false, use the same PeerConnection for the duration of the call. Default is false.
-    * @property {boolean} breaker This option is only for interoperation with the webrtc2sip open
-    * source project. True to enable the RTCWeb Breaker, false for no change. Default is false.
-    * @property {boolean} stripExtraSSRC If true, remove extra and unnecessary 'synchronization
-    * source' attributes (a=ssrc:) from SDP (offers or answers) which Chrome may have added
-    * in scenarios involving video upgrade or downgrade. Default is true.
-    * @property {boolean} confWorkaroundChrome If true, enable workaround for video conference
-    * call to work on Chrome version 39 and earlier. Default is false.
-    * @property {boolean} useFirstCandidate If true, use the first ICE candidate immediately
-    * without waiting for any more candidates to be gathered. This is useful to prevent delay
-    * in calling if candidate gathering is slow, particularly in Firefox.
-    * If false, wait for the end of ICE candidates. Default is false.
-    * @property {boolean} removeIPV6Candidates If true, remove any IPV6 candidates from SDP.
-    * If false, no change is made. Default is false.
-    * @property {string|number} autoAnswerTime Used for service continuity feature.
-    * How long (in seconds) after registration the client will auto-answer new call requests.
-    * This applies only to the first registration done after the page loads (which is presumed
-    * to be an auto-register) and to internal re-registrations done as part of service recovery.
-    * Default is 0.
-    * @property {string|number} maxRecoveryAttempts Used for service continuity feature.
-    * How many attempts are made to re-establish the websocket connection after a network outage.
-    * Default is 5.
-    * @property {string|number} networkRetryInterval Used for service continuity feature.
-    * How long the client waits between attempts to re-establish the websocket connection.
-    * Default is 5.
-    * @property {boolean} sendRegisterOnRecovery Used for testing.
-    * If true, send a register or re-invite once the websocket connection has been restored.
-    * Default is false.
-    * @property {string|number} registerResponseTime How long to wait (in seconds) for a 
-    * register response before failing the websocket connection. Default is 0.
-    * @property {string|number} registerRefreshTime How often (in seconds) to do register
-    * refreshes. Default is 0.
-    * @property {boolean} msidHandling Select the type of handling on incoming msid in SDP.
-    * We may select from among: 'Strip Incoming MSID', 'Generate/Replace Incoming MSID'
-    * or 'None, no applicable handling'.
-    * @property {boolean} enableMDSPsupport If true, then this device and contact is sharing
-    * its PUID with other devices.  This device is either the main devie or a secondary MDSP
-    * (Multiple Devices Shared PUID) device.  Default is false.
-    * @property {boolean} secondaryDeviceId String to be included in SIP Contact Header to
-    * identify this device and contact as an MDSP (Multiple Devices Shared PUID) Secondary device.
-    * Only applicable if enableMDSPsupport is true.  AT&T is expected to set this to, mobility="fixed",
-    * while, Verizon is expected to set this to, +g.gsma.rcs.ipcall. Default is, mobility="fixed".
-    */
-
-    /**
-    * @summary A user's unique identifier. In Orca ALU, this is the user's public ID. (This
-    * describes a data type. It is not accessible as a global object.)
-    * @typedef userid
-    * @type string
-    */
-
-    /**
-    * @summary An authorization token associated with the provided userid. In Orca ALU, this is
-    * an object containing authorization information for the SIP registration. (This describes a
-    * data type. It is not accessible as a global object.)
-    * @typedef token
-    * @type object
-    * @property {string} id The user's private ID
-    * @property {string} key The user's password
-    * @property {string} imsauth Set as 'sso-token' to add an Authorization header for single
-    * sign-on applications. Otherwise the special header is not added. Default is undefined.
-    */
-
-    /**
-     * @summary Configuration properties for an orca.AddressBook. (This describes a data type. It is
-     * not accessible as a global object.)
-     * @typedef AbConfig
-     * @type object 
-     * @property {object} provider Reference to implementation providing actual functionality.
-     * For Orca ALU, this is the orcaALU object.
-     * @property {string} contactServerURI The address of the contact server
-     * @property {string} baseResourcePath The base API resource path
-     */
-    
-     /**
-      * @summary An AddressBook contact's basic required data
-      * @typedef Contact
-      * @type object
-      * @property {string} id SIP/TEL/ACR address, which is used as a unique ID
-      * @property {Attribute[]} attributes Any attributes
-      */
-
-     /**
-      * @summary An AddressBook member's basic required data
-      * @typedef Member
-      * @type object
-      * @property {string} id SIP/TEL/ACR address, which is used as a unique ID
-      * @property {Attribute[]} attributes Any attributes
-      */
-     
-     /**
-      * @summary An AddressBook attribute's basic required data
-      * @typedef Attribute
-      * @type object
-      * @property {string} name name of attribute
-      * @property {string} value value of attribute
-      */
-     
-     /**
-      * @summary An AddressBook list's basic required data
-      * @typedef List
-      * @type object
-      * @property {string} id a unique ID
-      * @property {Member[]} members member in the list
-      */
-     
-    /** 
-    * @summary root namespace of the call control SDK
-    * @global
-    * @namespace 
-    */
-     
-    orca = {
-        /**
-        * Create a new session instance for a user to be in connection with the server. 
-        * In Orca ALU, a Session object corresponds to a SIP REGISTER session.
-        * @param {userid} userid The user's unique identifier. In Orca ALU, this is the user's
-        * public ID.
-        * @param {token} token An authorization token associated with the provided userid
-        * @param {SessionConfig} sessionConfig Session initialization parameters
-        * @returns {orca.Session}
-        */
-        createSession: function (userid, token, sessionConfig) {
-            return new Session(userid, token, sessionConfig);
-        },
-
-        /**
-         * Create a new addressbook instance for a user. 
-         * @param {userid} userid The user's unique identifier. In Orca ALU, this is the user's
-         * public ID.
-         * @param {token} token An authorization token associated with the provided userid
-         * @param {AbConfig} abConfig AddressBook initialization parameters
-         * @returns {orca.AddressBook}
-         */
-        createAddressBook: function (userid, token, abConfig) {
-             return new AddressBook(userid, token, abConfig);
-        },
-         
-        /**
-        * Create a reference to a managed WebRTC media stream that can be attached 
-        * to a call. Use of this method is optional, as the Call.addStream method will
-        * automatically create a ManagedStream if a raw RTCMediaStream is passed to it.
-        * @param {RTCMediaStream} rtcMediaStream Browser media stream
-        * @returns {orca.ManagedStream}
-        */
-        createManagedStream: function (rtcMediaStream) {
-            return new ManagedStream(rtcMediaStream);
-        }
-    };
-
-    this.orca = orca;
-    this.SessionStatus = SessionStatus;
-    this.SessionError = SessionError;
-    this.CallStatus = CallStatus;
-    this.CallError = CallError;
-    this.CommStatus = CommStatus;
-    this.CommError = CommError;
-    this.AddressBookStatus = AddressBookStatus;
-    this.AddressBookError = AddressBookError;
-
-}());
-
 // orca/orcaALU.js
-console.trace=function(a){if(navigator.userAgent.match(/Chrome/i)){console.debug("["+new Date().toUTCString()+"] "+a+(new Error).stack.replace(/Error|http.*\//g,""))}else{console.debug(a)}};(function(){var a={ab:"urn:oma:xml:rest:netapi:addressbook:1"};var c=true;console.debug("ORCA/$Rev: 421 $; "+navigator.userAgent);if(typeof orcaVersion!=="undefined"){console.debug("ecms: "+orcaVersion)}if(navigator.mozGetUserMedia){console.debug("Firefox adapting");webkitRTCPeerConnection=mozRTCPeerConnection;RTCSessionDescription=mozRTCSessionDescription;RTCIceCandidate=mozRTCIceCandidate;navigator.getUserMedia=navigator.mozGetUserMedia;attachMediaStream=function(t,u){console.log("Attaching media stream");t.mozSrcObject=u;t.play()};reattachMediaStream=function(u,t){console.log("Reattaching media stream");u.mozSrcObject=t.mozSrcObject;u.play()}}else{if(navigator.webkitGetUserMedia){console.debug("chrome adapting");navigator.getUserMedia=navigator.webkitGetUserMedia}else{console.warn("Browser does not appear to be WebRTC-capable")}}function m(w,v,u,x){this.callback=x;this.WebSocketStatus={};this.WebSocketStatus.DISCONNECTED="0";this.WebSocketStatus.CONNECTING="1";this.WebSocketStatus.CONNECTED="2";this.RegisterStatus={};this.RegisterStatus.UNREGISTERED="0";this.RegisterStatus.WAITING="1";this.RegisterStatus.REGISTERING="2";this.RegisterStatus.REGISTERED="3";this.userId=w;this.token=v;this.config=u;this.sessionStatus=SessionStatus.DISCONNECTED;this.socketStatus=this.WebSocketStatus.DISCONNECTED;this.ws=undefined;this.localAOR=w;this.calls=[];this.presenceSubscriptions=[];this.adapter=null;var t=this;this.recoveryAttemptsRemaining=u.providerConfig.maxRecoveryAttempts;this.wsRestoreInProgress=false;this.ws_only=false;this.autoAnswerMode=false;this.needAuthOnReRegister=false;this.closePending=false;this.autoAnswerTimer=false;this.isReceivePong=false;this.updateToken=function(y){console.debug("orcaALU.updateToken");this.token=v;this.adapter.updateToken(y);this.adapter.createSession()};this.sendPingFrame=function(){var z=isNaN(u.providerConfig.crlfKeepAliveInterval)?0:parseInt(u.providerConfig.crlfKeepAliveInterval);console.log("crlfKeepAliveInterval is "+z);if(z>0){var y;if(z>10){y=10}else{y=z}this.SendPingMessage(y);this.sendPingMessageInterval=setInterval(function(){t.SendPingMessage(y)},z*1000)}};this.SendPingMessage=function(y){console.debug("Send CRLF Keep Alive request, timeOut:"+y);this.isReceivePong=false;this.sendPingMessageTimer=setTimeout(function(){t.sendPingMessageTimeout()},y*1000);this.ws.send("\r\n\r\n")};this.sendPingMessageTimeout=function(){console.debug("Enter sendPingMessageTimeout, isReceivePong:"+this.isReceivePong);if(!this.isReceivePong){console.debug("Can't receive the pong meesage, disconnect the session and close the WebSocket");this.setSessionStatus(SessionStatus.DISCONNECTED,SessionError.NETWORK_ERROR);this.ws.close(1000,"CRLF heartbeat failure")}};this.mdsp={myOwnGruu:"",gruuSupported:false,isGRUUsupported:function(){return this.gruuSupported},setGRUUsupport:function(y){this.gruuSupported=y},contacts:[],onContactsUpdate:function(){if(typeof x.onMDSPinfoUpdate==="function"){x.onMDSPinfoUpdate()}},isFeatureEnabled:function(){return t.config.providerConfig.enableMDSPsupport},getSecDeviceId:function(){return t.config.providerConfig.secondaryDeviceId},getContacts:function(){return this.contacts},addContact:function(y,B,z,C){var A;if(y==this.myOwnGruu){return false}for(A=0;A<this.contacts.length;++A){if(this.contacts[A].gruu==y){return false}}this.contacts.push({gruu:y,sipUri:B,displayName:z,isSecondaryDevice:C,dialog:[]});return true},addDialog:function(y){var z;for(z=0;z<this.contacts.length;++z){if(this.contacts[z].displayName==y.localDisplayName){this.contacts[z].dialog.push({dialogId:y.dialogId,callId:y.callId,remoteId:y.remoteId,state:y.state,exclusive:y.exclusive,direction:y.direction,localTag:y.localTag,remoteTag:y.remoteTag,mediaAttr:y.mediaAttr});return true}}console.log("Unable to add dialog, displayName not found:\n\tdisplayName = "+y.localDisplayName+"\n\tdialogId = "+y.dialogId+"\n\tcallId   = "+y.callId+"\n\tremoteId = "+y.remoteId+"\n\tstate    = "+y.state+"\n\texclusive= "+y.exclusive+"\n\tdirection= "+y.direction+"\n\tlocalTag = "+y.localTag+"\n\tremoteTag= "+y.remoteTag);for(z=0;z<y.mediaAttr.length;++z){console.log("\tmediaAttr["+z+"].mediaType      = "+y.mediaAttr[z].mediaType+"\n\tmediaAttr["+z+"].mediaDirection = "+y.mediaAttr[z].mediaDirection)}return false},logContacts:function(B,C){var A,z,y;console.log("MDSP Contacts: "+((B)?B:"")+":\n");for(A=0;A<this.contacts.length;++A){console.log("contacts["+A+"].displayName = "+this.contacts[A].displayName);console.log("contacts["+A+"].gruu   = "+this.contacts[A].gruu);console.log("contacts["+A+"].sipUri = "+this.contacts[A].sipUri);console.log("contacts["+A+"].isSecondaryDevice = "+this.contacts[A].isSecondaryDevice);console.log("\tDialogs:\n");for(z=0;z<this.contacts[A].dialog.length;++z){console.log("\t\tdialog["+z+"].dialogId = "+this.contacts[A].dialog[z].dialogId+"\n\t\tdialog["+z+"].callId   = "+this.contacts[A].dialog[z].callId+"\n\t\tdialog["+z+"].state    = "+this.contacts[A].dialog[z].state+"\n\t\tdialog["+z+"].remoteId = "+this.contacts[A].dialog[z].remoteId+"\n\t\tdialog["+z+"].exclusive= "+this.contacts[A].dialog[z].exclusive+"\n\t\tdialog["+z+"].direction= "+this.contacts[A].dialog[z].direction+"\n\t\tdialog["+z+"].localTag = "+this.contacts[A].dialog[z].localTag+"\n\t\tdialog["+z+"].remoteTag= "+this.contacts[A].dialog[z].remoteTag);for(y=0;y<this.contacts[A].dialog[z].mediaAttr.length;++y){console.log("\t\t\tmediaAttr["+y+"].mediaType = "+this.contacts[A].dialog[z].mediaAttr[y].mediaType+"\n\t\t\tmediaAttr["+y+"].mediaDirection = "+this.contacts[A].dialog[z].mediaAttr[y].mediaDirection)}}if(this.contacts[A].dialog.length==0){console.log("\t\tNone\n")}}if(A==0){console.log("None\n");return}if(C){console.log("My own GRUU = "+this.myOwnGruu)}},subscribeDialog:function(y){t.adapter.sendSubscribeDialog(y)},dialogSubscriptions:[],subscribeToMDSPContactDialogs:function(){var y;for(y=0;y<this.contacts.length;y++){if(this.getDialogSubscriptionIndex(this.contacts[y].sipUri)==(-1)){this.subscribeDialog(this.contacts[y].sipUri);this.addDialogSubscription(this.contacts[y].sipUri)}}},subscribeDialogTimerExp:function(A){var z;var y=this.getDialogSubscriptionIndex(A);for(z=0;z<this.contacts.length;++z){if(this.contacts[z].sipUri==A){this.subscribeDialog(A);if(y>=0){var B=setTimeout(this.subscribeDialogTimerExp.bind(this),60*60*1000,A);this.dialogSubscriptions[y].expTimerId=B}else{this.addDialogSubscription(A)}return}}if(y>=0){dialogSubscriptions.splice(y,1)}},addDialogSubscription:function(y){var z=setTimeout(this.subscribeDialogTimerExp.bind(this),60*60*1000,y);this.dialogSubscriptions.push({sipUri:y,expTimerId:z})},getDialogSubscriptionIndex:function(z){var y;for(y=0;y<this.dialogSubscriptions.length;y++){if(this.dialogSubscriptions[y].sipUri==z){return y}}return -1},clearDialogSubscriptions:function(){var y;for(y=0;y<this.dialogSubscriptions.length;y++){clearTimeout(this.dialogSubscriptions[y].expTimerId)}},clearMDSPcontacts:function(){this.contacts=[];this.clearDialogSubscriptions();this.onContactsUpdate()},onDialogNotify:function(B){var F;var A;var E="application/xml";var C=[];var D;var z;var y;console.debug("mdsp.onDialogNotify():");if(window.DOMParser){F=new DOMParser();A=F.parseFromString(B,E)}else{A=new ActiveXObject("Microsoft.XMLDOM");A.async=false;A.loadXML(B)}y=A.getElementsByTagName("dialog");console.log("dialogArray.length = "+y.length);for(z=0;z<y.length;++z){D=this.getDialogInfoElemFromNotifyDialog(y[z]);C.push(D)}this.reconcileMDSPDialogs(C)},getDialogInfoElemFromNotifyDialog:function(D){var B,A,z;console.log("getDialogInfoElemFromNotifyDialog()");var C={localDisplayName:"Unavailable",dialogId:"0000",callId:"",remoteId:"",state:"",exclusive:false,direction:"",localTag:"",remoteTag:"",mediaAttr:[]};if((D.attributes!=undefined)&&(D.attributes.length>0)){for(B=0;B<D.attributes.length;++B){if(D.attributes[B].localName=="id"){C.dialogId=D.attributes[B].textContent}else{if(D.attributes[B].localName=="call-id"){C.callId=D.attributes[B].textContent}else{if(D.attributes[B].localName=="local-tag"){C.localTag=D.attributes[B].textContent}else{if(D.attributes[B].localName=="remote-tag"){C.remoteTag=D.attributes[B].textContent}else{if(D.attributes[B].localName=="direction"){C.direction=D.attributes[B].textContent}}}}}}}for(B=0;B<D.childNodes.length;++B){if(D.childNodes[B].localName=="exclusive"){C.exclusive=((D.childNodes[B].textContent=="true")?true:false)}else{if(D.childNodes[B].localName=="state"){C.state=D.childNodes[B].textContent}else{if(D.childNodes[B].localName=="remote"){for(A=0;A<D.childNodes[B].childNodes.length;++A){if(D.childNodes[B].childNodes[A].localName=="identity"){C.remoteId=D.childNodes[B].childNodes[A].textContent}else{if(D.childNodes[B].childNodes[A].localName=="mediaAttributes"){var y={};for(z=0;z<D.childNodes[B].childNodes[A].childNodes.length;++z){if(D.childNodes[B].childNodes[A].childNodes[z].localName=="mediaType"){y.mediaType=D.childNodes[B].childNodes[A].childNodes[z].textContent}else{if(D.childNodes[B].childNodes[A].childNodes[z].localName=="mediaDirection"){y.mediaDirection=D.childNodes[B].childNodes[A].childNodes[z].textContent}}}C.mediaAttr.push(y)}}}}else{if(D.childNodes[B].localName=="local"){for(A=0;A<D.childNodes[B].childNodes.length;++A){if(D.childNodes[B].childNodes[A].localName=="identity"){for(z=0;z<D.childNodes[B].childNodes[A].attributes.length;++z){if(D.childNodes[B].childNodes[A].attributes[z].localName=="display-name"){C.localDisplayName=D.childNodes[B].childNodes[A].attributes[z].textContent}}}}}}}}}return C},reconcileMDSPDialogs:function(A){var z,y;console.log("reconcileMDSPDialogs(), newDialogInfo.length = "+A.length);for(z=0;z<this.contacts.length;++z){this.contacts[z].dialog.splice(0,this.contacts[z].dialog.length)}for(z=0;z<A.length;++z){this.addDialog(A[z])}for(z=0;z<A.length;++z){console.log("newDialogInfo["+z+"].localDisplayName = "+A[z].localDisplayName);console.log("newDialogInfo["+z+"].dialogId         = "+A[z].dialogId);console.log("newDialogInfo["+z+"].callId           = "+A[z].callId);console.log("newDialogInfo["+z+"].remoteId         = "+A[z].remoteId);console.log("newDialogInfo["+z+"].state            = "+A[z].state);console.log("newDialogInfo["+z+"].exclusive        = "+A[z].exclusive);console.log("newDialogInfo["+z+"].direction        = "+A[z].direction);console.log("newDialogInfo["+z+"].localTag         = "+A[z].localTag);console.log("newDialogInfo["+z+"].remoteTag        = "+A[z].remoteTag);for(y=0;y<A[z].mediaAttr.length;++y){console.log("newDialogInfo["+z+"].mediaAttr["+y+"].mediaType = "+A[z].mediaAttr[y].mediaType);console.log("newDialogInfo["+z+"].mediaAttr["+y+"].mediaDirection = "+A[z].mediaAttr[y].mediaDirection)}}this.onContactsUpdate()},getContactFromGruu:function(y){var z;for(z=0;z<this.contacts.length;++z){if(this.contacts[z].gruu==y){return this.contacts[z]}}return null},pushCallToContact:function(z,A){var y;y=this.getContactFromGruu(A);if(y==null){console.error("Unable to locate MDSP contact for GRUU = "+gruu);return}t.adapter.doPush(z,y.sipUri,A)},pullCallFromMDSPdialog:function(z,y){z.getCallImp().pullCallInfo=y},getReplacesUriForPull:function(y){return(y.dialogElem.callId+";to-tag="+y.dialogElem.localTag+";from-tag="+y.dialogElem.remoteTag)},getToUriForPull:function(C){var D;var B;var E="VoLTE-";var A="active";var z=t.userId.slice(w.indexOf("@")+1);var y=this.getContactFromGruu(C.gruu);if(y==null){console.debug("Unable to find MDSP contact for GRUU = "+C.gruu)}else{if(y.isSecondaryDevice){E="SP-"}}for(D=0;D<C.dialogElem.mediaAttr.length;++D){if(((C.dialogElem.mediaAttr[D].mediaType=="audio")||(C.dialogElem.mediaAttr[D].mediaType=="video"))&&(C.dialogElem.mediaAttr[D].mediaDirection!="sendrecv")){A="hold"}}B="sip:pull-"+E+A+"@"+z;return B},getRequestUriUserForPull:function(){return"pull-VoLTE-active"}};this.updateToken=function(y){console.debug("orcaALU.updateToken");this.token=y;this.adapter.updateToken(y);this.adapter.createSession()};this.printConfig=function(){console.debug("Config Parameters Start:\n");console.debug("userId: "+this.userId);console.debug("token.id: "+this.token.id);console.debug("token.key: "+this.token.key);console.debug("token.displayName: "+this.token.displayName);console.debug("token.authtype: "+this.token.authtype);console.debug("uri: "+this.config.uri);console.debug("mediatypes: "+this.config.mediatypes);var z=JSON.stringify(this.config.providerConfig);var y=z.split(",");for(i in y){console.debug(y[i])}console.debug("Config Parameters End:\n")};this.connect=function(){console.debug("["+new Date().toUTCString()+"] Session.connect()");this.printConfig();if(!this.config.providerConfig.addCodecs&&this.config.providerConfig.addCodecs!==false){this.config.providerConfig.addCodecs=true;console.debug("use default value 'Enabled' for the addCodecs")}if(c){c=false;if(this.config.providerConfig.autoAnswerTime>0){this.autoAnswerTimer=setTimeout(function(){t.autoAnswerTimer=false},this.config.providerConfig.autoAnswerTime*1000)}}if(this.socketStatus===this.WebSocketStatus.DISCONNECTED){this.createWebSocket()}else{console.error("your session is already connecting or connected to the gateway")}};this.createWebSocket=function(){console.debug("["+new Date().toUTCString()+"] Session.createWebSocket()");var y=this.config.uri;if((y.substr(0,2)!=="ws")&&(y.substr(0,3)!=="wss")){console.error("URI of the gateway is malformed.");return}console.debug("connect to "+y+" interfaceType: "+this.config.providerConfig.interfaceType);if(this.config.providerConfig.interfaceType==="REST-WS"){this.ws=new WebSocket(y,["ALURest"]);this.adapter=new b.RestAdapter(this.ws,w,v,u,this)}else{this.ws=new WebSocket(y,["sip"]);this.adapter=new b.SipAdapter(this.ws,w,v,u,this)}this.ws.binaryType="arraybuffer";this.socketStatus=this.WebSocketStatus.CONNECTING;this.ws.onopen=function(z){t.onWebSocketOpen(z)};this.ws.onclose=function(z){t.onWebSocketClose(z)};this.ws.onerror=function(z){t.onWebSocketError(z)};this.ws.onmessage=function(z){t.onWebSocketMessage(z)}};this.createCall=function(C,y,A,B){console.debug("Session.createCall()");var z=new f(C,y,A,B);this.calls.push(z);return z};this.createChat=function(A,y,z){return new e(A,y,z)};this.sendPageModeChatMessage=function(A,z){var y=new r(A,this,z);this.calls.push(y);y.sendMessage()};this.createFileTransfer=function(B,y,z,A){return new p(B,y,z,A)};this.createImageShare=function(B,y,z,A){return new d(B,y,z,A)};this.subscribePresence=function(y){this.adapter.sendSubscribePresence(y)};this.test=function(z){var y={data:z};this.onWebSocketMessage(y)};this.getPresence=function(y){this.adapter.sendSubscribePresence(y,0)};this.updatePresence=function(y){this.adapter.sendUpdatePresence(y)};this.disconnect=function(){console.debug("Session.disconnect()");if(this.socketStatus!==this.WebSocketStatus.DISCONNECTED){this.adapter.terminateSession()}else{console.warn("Session.disconnect() Ignoring in this state : "+this.socketStatus)}};this.getStatus=function(){return this.sessionStatus};this.onWebSocketOpen=function(y){console.debug("["+new Date().toUTCString()+"] Session.onWebSocketOpen()");this.socketStatus=this.WebSocketStatus.CONNECTED;if((this.wsRestoreInProgress==true)&&(!this.config.providerConfig.sendRegisterOnRecovery)){this.ws_only=true;this.needAuthOnReRegister=true;console.debug("Setting up to create ws only session")}this.adapter.createSession()};this.onWebSocketClose=function(y){console.debug("["+new Date().toUTCString()+"] Session.onWebSocketClose(), evt = "+y);var z={name:y.data};if((this.closePending==true)&&(this.socketStatus==this.WebSocketStatus.CONNECTED)){console.log("Ignoring register refresh timeout late close");this.closePending=false;return}clearTimeout(this.adapter.refresh_timer);clearTimeout(this.adapter.registerResponseTimer);clearTimeout(this.sendPingMessageTimer);clearInterval(this.sendPingMessageInterval);if(this.mdsp.isFeatureEnabled()){this.mdsp.clearMDSPcontacts()}if((this.socketStatus==this.WebSocketStatus.CONNECTED)&&(this.recoveryAttemptsRemaining!=0)&&(this.config.providerConfig.networkRetryInterval!=0)&&(this.calls[0])){console.log("Getting timer to retry ws connection");setTimeout(function(){t.connect()},(u.providerConfig.networkRetryInterval*1000));this.recoveryAttemptsRemaining--;this.wsRestoreInProgress=true;this.socketStatus=this.WebSocketStatus.DISCONNECTED;return}if(this.socketStatus!==this.WebSocketStatus.CONNECTED){console.error("Network failure")}else{z={name:this.sessionStatus};this.callback.onStatus(this.sessionStatus,z);this.callback.onDisconnected(z)}this.socketStatus=this.WebSocketStatus.DISCONNECTED};this.onWebSocketError=function(y){console.error("Network failure");console.debug("Session.onWebSocketError() network failure, evt = "+y);clearTimeout(this.adapter.refresh_timer);this.socketStatus=this.WebSocketStatus.DISCONNECTED;if((this.recoveryAttemptsRemaining!=0)&&(this.config.providerConfig.networkRetryInterval!=0)&&(this.calls[0])){console.log("Getting timer to retry ws connection");setTimeout(function(){t.connect()},(u.providerConfig.networkRetryInterval*1000));this.recoveryAttemptsRemaining--;this.wsRestoreInProgress=true}else{var z={name:SessionError.NETWORK_ERROR};this.callback.onError(SessionError.NETWORK_ERROR,z);this.wsRestoreInProgress=false}};this.onWebSocketMessage=function(y){var z=y.data;if(z==="\r\n"){console.debug("received WebSocket message with CRLF Keep Alive response");this.isReceivePong=true;clearTimeout(this.sendPingMessageTimer);return}else{if(typeof z!=="string"){try{z=String.fromCharCode.apply(null,new Uint8Array(z))}catch(y){console.warn("received WebSocket binary message failed to be converted into string, message discarded");return}}else{}}z=z.replace(/^l:/gm,"Content-Length:");z=z.replace(/^v:/gm,"Via:");z=z.replace(/^t:/gm,"To:");z=z.replace(/^f:/gm,"From:");z=z.replace(/^i:/gm,"Call-ID:");z=z.replace(/^e:/gm,"Content-Encoding:");z=z.replace(/^m:/gm,"Contact:");console.debug("["+new Date().toUTCString()+"] Session.onWebSocketMessage() message:\n"+z);this.adapter.received(z)};this.onPageModeChatMessageFailed=function(y){var A=this.getCall(y.callId);if(A===null){console.warn("Session received a SIP response for a unknow page mode chat message. Ignore it.");return}var B={to:A.to};this.callback.onPageModeChatMessageFailed(A.message,B);for(var z=0;z<this.calls.length;z++){if(this.calls[z].callId===A.callId){this.calls.splice(z,1);break}}};this.onPageModeChatMessageSent=function(y){var A=this.getCall(y.callId);if(A===null){console.warn("Session received a SIP response for a unknow page mode chat message. Ignore it.");return}for(var z=0;z<this.calls.length;z++){if(this.calls[z].callId===A.callId){this.calls.splice(z,1);break}}};this.onPresenceNotify=function(y,z){this.callback.onPresenceNotify(y,z)};this.onSubscribePresenceSuccess=function(z){var y=new n(z.from,z.to,z.callId,z.cSeq,z.expires);this.presenceSubscriptions.push(y);if(typeof this.callback.onSubscribePresenceSuccess==="function"){this.callback.onSubscribePresenceSuccess(z)}};this.onSubscribePresenceFailed=function(y){if(typeof this.callback.onSubscribePresenceFailed==="function"){this.callback.onSubscribePresenceFailed(y)}};this.onGetPresenceSuccess=function(z){var y=new n(z.from,z.to,z.callId,z.cSeq,z.expires);this.presenceSubscriptions.push(y);if(typeof this.callback.onGetPresenceSuccess==="function"){this.callback.onGetPresenceSuccess(z)}};this.onGetPresenceFailed=function(y){if(typeof this.callback.onGetPresenceFailed==="function"){this.callback.onGetPresenceFailed(y)}};this.onUpdatePresenceSuccess=function(y){if(typeof this.callback.onUpdatePresenceSuccess==="function"){this.callback.onUpdatePresenceSuccess(y)}};this.onUpdatePresenceFail=function(y){if(typeof this.callback.onUpdatePresenceFail==="function"){this.callback.onUpdatePresenceFail(y)}};this.getPresenceSubscription=function(C,z,B){var A=null,y;for(y=0;y<this.presenceSubscriptions.length;y++){if(this.presenceSubscriptions[y].presentity.indexOf(C)!=-1&&this.presenceSubscriptions[y].callId.match(z)){A=this.presenceSubscriptions[y];if(A.expires===0){this.presenceSubscriptions.splice(y,1)}break}}return A};this.getCall=function(A){var z=null,y;for(y=0;y<this.calls.length;y+=1){if(this.calls[y].callId===A){z=this.calls[y];break}}return z};this.setSessionStatus=function(z,A){this.sessionStatus=z;var y={name:this.sessionStatus};if(A){this.callback.onError(A,y)}else{if(z===SessionStatus.CONNECTED){this.callback.onStatus(this.sessionStatus,y);this.callback.onConnected();if((this.calls[0])&&(this.wsRestoreInProgress)){if(this.config.providerConfig.sendRegisterOnRecovery){console.log("Going to auto answer mode ");this.wsRestoreInProgress=false;this.autoAnswerMode=true;setTimeout(function(){t.autoAnswerMode=false},this.config.providerConfig.autoAnswerTime*1000)}else{console.log("Service Continuity: Call exists... create a new offer");this.calls[0].callDirection=this.calls[0].CallDirection.OUTGOING;console.log("setting restoredCall to true");this.calls[0].restoredCall=true;this.wsRestoreInProgress=false;this.calls[0].createSDPOffer()}}}else{if(z===SessionStatus.DISCONNECTED){this.callback.onStatus(this.sessionStatus,y);this.callback.onDisconnected()}else{this.callback.onStatus(this.sessionStatus,y)}}}};this.incomingSessionEvent=function(y){var z=this.getCall(y.callId);if(!z){if(y.name==="invitation"){z=this.callback.createCall(null,null,this);z.getCallImp().incomingCallSessionEvent(y)}else{if(y.name==="message"){this.adapter.sendPageModeChatMessageResponse(y.uaCall,200);if(y.contentType==="application/im-iscomposing+xml"&&s(y.message)){return}this.callback.onIncomingPageModeChat(y)}else{console.warn("no call found for "+y.name);return}}}else{if(y.name==="invitation"){z.incomingCallSessionEvent(y)}else{console.warn("unknown event")}}}}function n(x,w,u,v,t){this.watcher=x;this.presentity=w;this.callId=u;this.cSeq=v;this.expires=t}function f(x,t,v,w){this.callback=w;this.CallStatus={};this.CallStatus.IDLE="idle";this.CallStatus.PREPARING_OFFER="prep-offer";this.CallStatus.CALLING="calling";this.CallStatus.RINGING="ringing";this.CallStatus.PREPARING_ANSWER="prep-answer";this.CallStatus.ACCEPTED="accepted";this.CallStatus.CONFIRMED="confirmed";this.CallStatus.CANCELING="canceling";this.CallStatus.CANCELED="canceled";this.CallStatus.FAILED="failed";this.CallStatus.REFUSED="refused";this.CallStatus.TERMINATING="terminating";this.CallStatus.HOLD="hold";this.CallStatus.REMOTE_HOLD="remote hold";this.CallStatus.UPGRADING="upgrading";this.CallStatus.DOWNGRADING="downgrading";this.CallDirection={};this.CallDirection.INCOMING="i";this.CallDirection.OUTGOING="o";this.MediaDirection={};this.MediaDirection.SENDRECV="sendrecv";this.MediaDirection.SENDONLY="sendonly";this.MediaDirection.RECVONLY="recvonly";this.MediaDirection.INACTIVE="inactive";this.managedStreams=[];this.iceServers=null;this.pc=null;this.session=v;this.callStatus=this.CallStatus.IDLE;this.callStatusExternal=this.CallStatus.DISCONNECTED;this.callDirection=undefined;this.sdpOffer=undefined;this.callId=undefined;this.activeCall=false;this.uaCall=null;this.targetAOR=(typeof x=="string"?[x]:x);this.mediaTypes=t;this.oldMediaTypes=t;this.audioMediaDirection=undefined;this.videoMediaDirection=undefined;this.waitingIce=false;this.remotePeerIds=[];this.isTiledVideo=false;this.dtmfSipBuffer="";this.dtmfSip=(this.session.config.providerConfig.dtmf!=="inband");this.dtmfInband=(this.session.config.providerConfig.dtmf!=="sip");this.holdPending=false;this.resumePending=false;this.telephoneEvent=null;this.crypto=null;this.inviteCount=0;this.initialHoldOffer=false;this.currNonZeroPortCount=0;this.MSID="undefined";this.restoredCall=false;this.localAudioCodecs=[];this.localVideoCodecs=[];this.pullCallInfo=undefined;this.bodilessReInvite=false;this.videoIceUfrag="";this.videoIcePwd="";this.dataChannel=null;var u=this;this.remoteIdentities=function(){return this.remotePeerIds};this.getpc=function(){return this.pc};this.dumpCallInfo=function(){var B=this.getpc();var y,C;y=B.getRemoteStreams();console.log("Number of remote streams: "+y.length);for(C=0;C<y.length;C++){console.log("Stream #"+C);console.log(y[C]);var A,z;A=y[C].getAudioTracks();console.log("# of audio tracks: "+A.length);for(z=0;z<A.length;z++){console.log("track #"+z+", info:");console.log(A[z])}A=y[C].getVideoTracks();console.log("# of video tracks: "+A.length);for(z=0;z<A.length;z++){console.log("track #"+z+", info:");console.log(A[z])}console.log("\n-- End of output for Stream #"+C)}};this.addStream=function(y){var B,A;if(this.callStatus===this.CallStatus.HOLD||this.callStatus===this.CallStatus.REMOTE_HOLD){console.debug("addStream() impossible during call hold");return false}if((this.callStatus===this.CallStatus.CONFIRMED)||(this.callStatus===this.CallStatus.ACCEPTED)){this.callDirection=this.CallDirection.OUTGOING}if(this.pc){B=this.pc.getLocalStreams();if(B.length>0){this.pc.removeStream(B[0]);console.debug("addStream() removeStream: "+B[0].id+"/"+B.length)}}if(this.session.config.providerConfig.persistentPC===false){console.debug("addStream() close peerconnection");if(this.pc){this.pc.close();this.pc=null}}if(!this.pc){console.debug("addStream() create new PeerConnection");this.createPeerConnection()}this.pc.addStream(y.stream());this.mediaTypes=y.type();this.dtmfSender=null;if(this.dtmfInband){A=y.stream().getAudioTracks();if(A.length>0){try{this.dtmfSender=this.pc.createDTMFSender(A[0])}catch(z){this.dtmfSender=null;console.warn("Call.connect() inband DTMF not supported by browser")}}}return true};this.connect=function(){if(this.callStatus===this.CallStatus.HOLD||this.callStatus===this.CallStatus.REMOTE_HOLD){console.debug("Call.connect() impossible during call hold");return false}console.debug("Call.connect()");console.debug("---------- The Call Connect parameters begin ----------");for(var y=0;y<this.targetAOR.length;y++){console.debug("targetAOR: "+this.targetAOR[y])}console.debug("oldMediaTypes: "+this.oldMediaTypes);console.debug("mediaTypes: "+this.mediaTypes);console.debug("---------- The Call Connect parameters end ----------");if(this.pc){if(this.callDirection===this.CallDirection.INCOMING){this.accept()}else{this.sendCallOffer()}}else{console.warn("Call.connect() Peer connection is not created")}return true};this.disconnect=function(){console.debug("Call.disconnect() status: "+this.callStatus);this.session.needAuthOnReRegister=false;if((this.callStatus===this.CallStatus.IDLE)||this.callStatus===this.CallStatus.RINGING||this.callStatus==this.CallStatus.PREPARING_OFFER){if(this.callDirection===this.CallDirection.OUTGOING){this.session.adapter.cancelCallSession(this);this.callStatus=this.CallStatus.CANCELING}else{if(this.callDirection===this.CallDirection.INCOMING){this.session.adapter.rejectCallSession(this);this.callStatus=this.CallStatus.REFUSED;this.callStatusExternal=CallStatus.REJECTED}}}else{console.debug("Call.disconnect() [activeCall = "+this.activeCall+", callStatus = "+this.callStatus+", callDirection = "+this.callDirection+"]");if(this.callDirection===this.CallDirection.INCOMING&&!this.activeCall){this.session.adapter.rejectCallSession(this);this.callStatus=this.CallStatus.REFUSED;this.callStatusExternal=CallStatus.REJECTED}else{this.callStatus=this.CallStatus.FAILED;this.callStatusExternal=CallStatus.DISCONNECTED;this.session.adapter.terminateCallSession(this)}}};this.reject=function(){console.debug("Call.reject()");if(this.activeCall===true){this.callStatus=this.CallStatus.PREPARING_ANSWER;this.markActionNeeded();return}this.callStatus=this.CallStatus.REFUSED;this.callStatusExternal=CallStatus.REJECTED;this.session.adapter.rejectCallSession(this)};this.remoteStreams=function(){return this.managedStreams};this.getStatus=function(){return this.callStatusExternal};this.getMediaTypes=function(){return this.mediaTypes};this.addParticipant=function(y){this.session.adapter.doRefer(this,y,true)};this.removeParticipant=function(y){this.session.adapter.doRefer(this,y,false)};this.sendDTMF=function(y){var A=this.session.config.providerConfig.dtmfDuration;var B=this.session.config.providerConfig.dtmfGap;console.debug("sendDTMF dtmfDuration: "+A);console.debug("sendDTMF dtmfGap: "+B);console.debug("sendDTMF "+y);if(this.activeCall===true){if(this.dtmfInband){if(this.dtmfSender){try{this.dtmfSender.insertDTMF(y,A,B)}catch(z){console.error("Error from insertDTMF: "+z.message)}}else{console.error("Could not send inband DTMF")}}if(this.dtmfSip){if(this.dtmfSipBuffer.length>0){this.dtmfSipBuffer+=","+y}else{this.dtmfSipBuffer=y;this.sendDTMFBuffer()}}}};this.sendDTMFBuffer=function(){var z=u.session.config.providerConfig.dtmfGap;console.debug("sendDTMFBuffer dtmfGap: "+z);var y;if(u.dtmfSipBuffer.length>0){y=u.dtmfSipBuffer[0];u.dtmfSipBuffer=u.dtmfSipBuffer.substring(1);if(y===","){z=2000}else{u.session.adapter.sendDTMFSip(u,y)}if(u.dtmfSipBuffer.length>0){setTimeout(u.sendDTMFBuffer,z)}}};this.transfer=function(y){this.session.adapter.doRefer(this,y,true)};this.startVideo=function(){this.updateCall({audio:undefined,video:"sendrecv"})};this.stopVideo=function(){this.updateCall({audio:undefined,video:"none"})};this.updateCall=function(z){var y=false;var B=false;var A=false;if(z.audio!==this.audioMediaDirection){console.debug("updateCall() audio: "+this.audioMediaDirection+" => "+z.audio);y=true;this.audioMediaDirection=z.audio}if(z.video!==this.videoMediaDirection){console.debug("updateCall() video: "+this.videoMediaDirection+" => "+z.video);y=true;this.videoMediaDirection=z.video}if(z.audio===undefined){B=false}else{B=true}if(z.video===undefined){A=false}else{A=true}if(B===true){if(A===true){this.mediaTypes="audio,video"}else{this.mediaTypes="audio"}}else{if(A===true){this.mediaTypes="video"}else{this.mediaTypes=""}}if(y){this.sendCallOffer()}};this.sendCallOffer=function(){var y;console.debug("Call.invite(): oldMediaTypes="+this.oldMediaTypes+"; current mediaTypes="+this.mediaTypes);this.callDirection=this.CallDirection.OUTGOING;if(this.targetAOR.length>1){this.isTiledVideo=this.mediaTypes.indexOf("video")>-1}for(y=0;y<this.targetAOR.length;y+=1){this.remotePeerIds.push({id:this.targetAOR[y]})}this.markActionNeeded()};this.hold=function(y){if(this.callStatus===this.CallStatus.HOLD||this.callStatus===this.CallStatus.REMOTE_HOLD){console.debug("Call.hold() impossible, already on hold");return false}console.debug("Call.hold() type = "+y);if(y===undefined){y="inactive"}if(y!="sendonly"&&y!="inactive"){console.debug("Call.hold invalid type = ",+y);return false}var z={};if(this.mediaTypes.indexOf("audio")!==-1){z.audio=y}if(this.mediaTypes.indexOf("video")!==-1){z.video=y}this.holdPending=true;this.updateCall(z);return true};this.resume=function(){if(this.callStatus!==this.CallStatus.HOLD){console.debug("Call.resume() impossible, no local hold");return false}console.debug("Call.resume()");if((this.mediaTypes.indexOf("video")===-1)&&(this.mediaTypes.indexOf("audio")===-1)){console.debug("Call.hold invalid mediaTypes=",+this.mediaTypes);return false}this.resumePending=true;var y={};if(this.mediaTypes.indexOf("audio")!==-1){y.audio="sendrecv"}if(this.mediaTypes.indexOf("video")!==-1){y.video="sendrecv"}this.updateCall(y);return true};this.markActionNeeded=function(){this.actionNeeded=true;var y=this;this.doLater(function(){y.onStableStatus();y.dumpCallInfo()})};this.doLater=function(y){setTimeout(y,1)};this.determineWaitingIce=function(y){var A=y.sdp.split("\r\nm=");var z;if(A.length>=2){for(z=1;z<A.length;z++){if(A[z].indexOf(" 0 RTP/")===-1&&A[z].indexOf("\r\na=candidate:")===-1){console.trace("m= line "+z+" does not have ice-candidates.. setting self.waitingIce to true");u.waitingIce=true;break}else{console.trace("m= line "+z+" already has ice-candidates or m= line has port zero")}}}else{console.trace("ERROR: local SDP does not have any m= lines. mLines.length="+A.length)}};this.mediaTypeFromSdp=function(z){var E=undefined,D,C;var y=(/a=dcsa:[0-9]*:[0-9]* accept-types:(.*)\r\n/).exec(z);var A=null;var G=null;if(y){y=y[1]}console.log("parsed accept-types: "+y+", type: "+typeof y);var F=(/a=dcsa:[0-9]*:[0-9]* file-selector:name:"(.*)" type:(.*)\r\n/).exec(z);if(F){A=F[1];G=F[2];console.log("parsed file-selector name: "+A+", type: "+G)}if(z.search("m=audio")!==-1){if((z.search("m=video")!==-1)&&(z.search("m=video 0")===-1)){E="audio,video"}else{E="audio"}}else{if(z.search("m=video")!==-1){E="video"}else{if(z.search("m=application")!==-1){if(A===null){E="chat"}else{if(y.search("image")!==-1){E="imageshare"}else{var B=(/\.(.*)/).exec(A)[1].toLowerCase();console.log("fileExtension: "+B);if(B.match(/jpg|bmp|gif|png/)){E="imageshare"}else{E="filetransfer"}}}console.log("parsed mediatypes: "+E);if(!this.msrpToPath&&(this.callStatus===this.CallStatus.IDLE||this.callStatus===this.CallStatus.ACCEPTED)){this.msrpToPath=(/a=dcsa:[0-9]*:[0-9]* path:([^\s]*)\r\n/).exec(z);if(this.msrpToPath){this.msrpToPath=this.msrpToPath[1]}else{this.msrpToPath=undefined}}D=(/a=dcsa:[0-9]*:[0-9]* file-selector:(.*)\r\n/).exec(z);if(D){D=D[1].split(" ");this.msrpFileProperties={};for(C=0;C<D.length;C++){if(D[C].indexOf(":")>-1){this.msrpFileProperties[D[C].split(":")[0]]=D[C].split(":")[1]}}if(this.msrpFileProperties.name){this.msrpFileProperties.name=A}}}else{E=undefined}}}return E};this.setMediaTypeFromSdp=function(z){var y=this.mediaTypeFromSdp(z);this.mediaTypes=y;this.oldMediaTypes=y};this.setLDsuccessOnCreateOfferSuccess=function(){console.debug("setLDsuccessOnCreateOfferSuccess(): setLocalDescription success: restoredCall = "+u.restoredCall);u.callStatus=u.CallStatus.PREPARING_OFFER;u.callStatusExternal=CallStatus.CONNECTING;u.sdpOffer=sdpOffer.sdp;u.localAudioCodecs=u.getCodecsFromSDP(u.sdpOffer,"audio");u.localVideoCodecs=u.getCodecsFromSDP(u.sdpOffer,"video");u.markActionNeeded()};this.setLDsuccessOnCreateAnswerSuccess=function(){console.debug("setLDsuccessOnCreateAnswerSuccess(): setLocalDescription success: restoredCall = "+u.restoredCall);u.callStatus=u.CallStatus.PREPARING_ANSWER;u.markActionNeeded()};this.setLDfailure=function(y){console.error("setLocalDescription failure: "+y);u.errorCallback(y)};this.createAnswerSuccess=function(A){var y;var z;console.debug("unmodified local SDP from createAnswer:\n"+A.sdp);A=u.updateSDPCrypto(A,"answer");A=u.updateSDPssrc(A,"answer");A=u.updateSDPcodecs(A,"answer","audio",u.session.config.providerConfig.audioCodecs);A=u.updateSDPcodecs(A,"answer","video",u.session.config.providerConfig.videoCodecs);A=u.updateSDPOfferMediaBundle(A,"answer");A=u.updateSDPBandwidth(A,"answer");u.pc.setLocalDescription(A,u.setLDsuccessOnCreateAnswerSuccess,u.setLDfailure);u.localAudioCodecs=u.getCodecsFromSDP(A.sdp,"audio");u.localVideoCodecs=u.getCodecsFromSDP(A.sdp,"video");y=u.getSDPattrValue(A.sdp,"video","ice-ufrag:");z=u.getSDPattrValue(A.sdp,"video","ice-pwd:");if((y!=u.videoIceUfrag)||(z!=u.videoIcePwd)){console.log("new ICE Params on createAnswer:\n\tprior videoIceUfrag = "+u.videoIceUfrag+"\t  New videoIceUfrag = "+y+"\tprior videoIcePwd   = "+u.videoIcePwd+"\t  New videoIcePwd   = "+z);u.videoIceUfrag=y;u.videoIcePwd=z}console.trace("createAnswerSuccess() setLocalDescription sdp = "+A.sdp);u.determineWaitingIce(A)};this.createAnswerFailure=function(y){console.error("createAnswer failure: "+y);u.callStatus=u.CallStatus.FAILED;u.callStatusExternal=CallStatus.DISCONNECTED;u.errorCallback(y);u.markActionNeeded()};this.setRDsuccess=function(){console.debug("setRemoteDescription success");u.dumpCallInfo()};this.setRDfailure1=function(y){console.error("setRemoteDescription failure: "+y);u.callStatus=u.CallStatus.FAILED;u.callStatusExternal=CallStatus.DISCONNECTED;u.errorCallback(y)};this.setRDfailure2=function(y){console.error("setRemoteDescription failure: "+y);u.errorCallback(y)};this.getNonZeroPortCount=function(A){var z,B,y;z=A.split("\r\nm=");y=0;for(B=1;B<z.length;B++){port=z[B].match(/ \d* /);if(port!=0){y=y+1}}return y};this.updateMSID=function(B){var z,D;var y;var F;switch(u.session.config.providerConfig.msidHandling){case"0":console.debug("updateMSID(), msidHandling is 'Strip Incoming MSID (default)'.\n");B=B.replace(/a=msid-semantic.*\r\n/g,"");B=B.replace(/a=ssrc:.* label:.*\r\n/g,"");console.debug("a=ssrc.* label:.* -removed");B=B.replace(/a=ssrc:.* mslabel:.*\r\n/g,"");console.debug("a=ssrc.* mslabel:.* -removed");B=B.replace(/a=ssrc:.* msid:.*\r\n/g,"");console.debug("a=ssrc.* msid:.* -removed");return B;case"1":break;case"2":console.debug("updateMSID() no change, msidHandling is 'None, no applicable handling'.\n");return B;default:console.debug("updateMSID() no change, msidHandling is 'Undefined'  ("+u.session.config.providerConfig.msidHandling+")");return B}console.debug("updateMSID(), msidHandling is 'Generate/Replace Incoming MSID'.\n");if(!B.match(/ssrc:\d* /)){console.log("No ssrc lines... so not adding msid");return B}B=B.replace(/a=msid-semantic.*\r\n/g,"");console.debug("a=msid-semantic removed");B=B.replace(/a=ssrc:.* label:.*\r\n/g,"");console.debug("a=ssrc.* label:.* -removed");B=B.replace(/a=ssrc:.* mslabel:.*\r\n/g,"");console.debug("a=ssrc.* mslabel:.* -removed");B=B.replace(/a=msid:.*\r\n/g,"");console.debug("a=msid.* -removed");B=B.replace(/a=ssrc:.* msid:.*\r\n/g,"");console.debug("a=ssrc.* msid:.* -removed");z=B.split("\r\nm=");y=this.getNonZeroPortCount(B);if(this.currNonZeroPortCount!=y){console.debug("currNonZeroPortCount="+this.currNonZeroPortCount+"!= newPortCount="+y+". Generating new MSID");this.currNonZeroPortCount=y;F="orca-wms-id-"+Math.round(Math.random()*100000000000);this.MSID=F;console.debug("Using new MSID generated '"+F+"'")}else{F=this.MSID;console.debug("Using previous MSID '"+F+"'")}z[0]=z[0]+"\r\na=msid-semantic: WMS "+F;for(D=1;D<z.length;D++){var A,H,E;var G=new RegExp("\r\n$");A=z[D];E=A.match(/ssrc:\d* /);if(E){console.log("a=ssrc found.'"+E+"'");H=A.split("a=");msidline=E+"msid:"+F+" ";msidline=msidline+D+"\r\n";mslabelline=E+"mslabel:"+F+"\r\n";labelline=E+"label:"+D;var C;for(C=0;C<H.length;C++){if(H[C].match(/^ssrc:/)){if(G.test(H[C])==true){labelline=labelline+"\r\n"}else{H[C]=H[C]+"\r\n"}H.splice(C+1,0,msidline,mslabelline,labelline);console.debug("Adding msid at position "+C);break}}z[D]=H.join("a=")}}B=z.join("\r\nm=");return B};this.onStableStatus=function(){console.debug("Call.onStableStatus() [actionNeeded = "+this.actionNeeded+", waitingIce = "+this.waitingIce+", status = "+this.callStatus+", callDirection = "+this.callDirection+", activeCall = "+this.activeCall+"]");var B,z,A;if(this.actionNeeded){switch(this.callStatus){case this.CallStatus.IDLE:this.createSDPOffer();break;case this.CallStatus.PREPARING_OFFER:if(this.waitingIce){return}z=this.pc.localDescription.sdp;if(this.callDirection===this.CallDirection.INCOMING){z=this.updateSDPForDTLS(z,"outgoing");z=this.updateSDPCandidate(z,"answer");this.session.adapter.sendResponse(this,200,"OK",z)}else{z=this.updateSDPForDTLS(z,"outgoing");z=this.updateSDPCandidate(z,"offer");z=this.updateSDPDataChannel(z,"offer");this.session.adapter.createCallSession(this,this.targetAOR,z);this.callStatus=this.CallStatus.CALLING}break;case this.CallStatus.ACCEPTED:if(this.sdpOffer!==undefined){this.sdpOffer=this.updateSDPForTempWorkarounds(this.sdpOffer,"offer");var C=this.sdpOffer;C=C.replace(/\r\na=setup:passive/g,"");var y=this.sdpOffer.indexOf("m=video");if(y!==-1&&this.sdpOffer.indexOf("VP8")===-1){C=C.substring(0,y)}C=this.updateMSID(C);console.trace("onStableStatus() setRemoteDescription sdp = "+C);this.pc.setRemoteDescription(new RTCSessionDescription({type:"offer",sdp:C}),this.setRDsuccess,this.setRDfailure1);try{A=this;this.pc.createAnswer(this.createAnswerSuccess,this.createAnswerFailure)}catch(D){console.error("Call.onStableStatus() webkitRTCPeerConnection can not create a SDP answer, exception = "+D);A.callStatus=A.CallStatus.FAILED;A.callStatusExternal=CallStatus.DISCONNECTED;A.markActionNeeded()}}else{this.createSDPOffer()}break;case this.CallStatus.PREPARING_ANSWER:if(this.waitingIce){return}z=this.pc.localDescription.sdp;var y=z.indexOf("m=video");if(y===-1&&this.sdpOffer.indexOf("m=video")!==-1){z=z+"m=video 0 RTP/SAVPF 0\nc=IN IP4 0.0.0.0\n"}z=this.updateSDPForDTLS(z,"outgoing");z=this.updateSDPCandidate(z,"answer");z=this.updateSDPDataChannel(z,"answer");this.session.adapter.sendResponse(this,200,"OK",z);this.setMediaTypeFromSdp(z);break;case this.CallStatus.CONFIRMED:case this.CallStatus.HOLD:if(this.activeCall===false){this.activeCall=true}else{if((this.activeCall===true)&&(this.callDirection===this.CallDirection.OUTGOING)){this.createSDPOffer()}}break;case this.CallStatus.FAILED:if(this.activeCall===true){this.callStatus=this.CallStatus.CONFIRMED;this.callStatusExternal=CallStatus.CONNECTED}else{console.warn("call FAILED");if(this.callDirection===this.CallDirection.INCOMING){this.reject();this.errorCallback("call failed")}}break;case this.CallStatus.CALLING:case this.CallStatus.CANCELED:break;default:console.warn("Call.onStableStatus() Dazed and confused in state "+this.callStatus+", stopping here");break}}};this.onRTCPeerConnectionOnAddStream=function(y){console.debug("Call.onRTCPeerConnectionOnAddStream()");var z,A;z=orca.createManagedStream(y.stream);y.stream.onaddtrack=function(B){console.log("onaddtrack ",y.stream.getVideoTracks());var C,D;C=orca.createManagedStream(y.stream);u.managedStreams.push(C);D={name:CallStatus.ADDSTREAM}};u.managedStreams.push(z);this.callStatusExternal=CallStatus.ADDSTREAM;A={name:CallStatus.ADDSTREAM};u.callback.onAddStream(z,A)};this.onRTCPeerConnectionOnConnecting=function(y){console.debug("Call.onRTCPeerConnectionConnecting()")};this.onRTCPeerConnectionOnGatheringChange=function(y){console.debug("onRTCPeerConnectionOnGatheringChange()");if(y.currentTarget!==undefined){console.debug("onRTCPeerConnectionOnGatheringChange() evt.currentTarget.iceGatheringState = "+y.currentTarget.iceGatheringState);if(y.currentTarget.iceGatheringState==="complete"){if((u.callStatus===u.CallStatus.PREPARING_OFFER)||(u.callStatus===u.CallStatus.PREPARING_ANSWER)){u.waitingIce=false;u.markActionNeeded()}else{console.debug("onRTCPeerConnectionOnGatheringChange() Event reveived event is dropped")}}}};this.onRTCPeerConnectionOnIceCandidate=function(y){if(y.candidate===null){console.debug("Call.onRTCPeerConnectionIceCandidate() end of candidates [status = "+u.callStatus+", callDirection = "+u.callDirection+", activeCall = "+u.activeCall+"]");if((u.callStatus===u.CallStatus.PREPARING_OFFER)||(u.callStatus===u.CallStatus.PREPARING_ANSWER)){u.waitingIce=false;u.markActionNeeded()}else{console.debug("Call.onRTCPeerConnectionOnIceCandidate() RTCPeerConnectionIceEvent received event is dropped")}}else{console.debug("Call.onRTCPeerConnectionIceCandidate() received candidate = "+y.candidate.candidate+" [status = "+u.callStatus+", callDirection = "+u.callDirection+", activeCall = "+u.activeCall+"]");if(u.session.config.providerConfig.useFirstCandidate&&(u.callStatus===u.CallStatus.PREPARING_OFFER||u.callStatus===u.CallStatus.PREPARING_ANSWER)){u.waitingIce=false;u.markActionNeeded()}}};this.onRTCPeerConnectionOnNegotiationNeeded=function(y){console.debug("Call.onRTCPeerConnectionNegotiationNeeded()")};this.onRTCPeerConnectionOnOpen=function(y){console.debug("Call.onRTCPeerConnectionOnOpen()")};this.onRTCPeerConnectionOnRemoveStream=function(y){console.debug("Call.onRTCPeerConnectionRemoveStream()")};this.onRTCPeerConnectionOnStatusChange=function(y){console.debug("Call.onRTCPeerConnectionStatusChange() [readyStatus="+y.currentTarget.readyStatus+", iceStatus="+y.currentTarget.iceStatus+"]")};this.onDataChannelOnOpen=function(y){console.debug("Call.onDataChannelOnOpen()")};this.onDataChannelOnClose=function(y){console.debug("Call.onDataChannelOnClose()")};this.onDataChannelOnMessage=function(y){if(y.data instanceof File){console.debug("evt.data  is File")}else{if(y.data instanceof Blob){console.debug("evt.data  is Blob")}else{if(y.data instanceof ArrayBuffer){console.debug("evt.data  is ArrayBuffer")}else{if(y.data instanceof String){console.debug("evt.data  is String")}else{if(typeof y.data==="string"){console.debug("evt.data  is string")}else{console.debug("evt.data  is other : ")}}}}}console.debug("Call.onDataChannelOnMessage() message(length: "+y.data.length+"): "+y.data);if(y.data instanceof String||typeof y.data==="string"){console.log("Received data chan message is String.. doing callback directly");u.callback.onMessage(y.data)}else{console.log("Received data chan message is NOT string .. converting it to binary string");function z(C,D,B){var A=new FileReader();A.onload=function(E){D(E.target.result)};A.onerror=function(E){onFail(E.target.error)};A.readAsBinaryString(new Blob([C],{type:"application/octet-stream"}))}z(y.data,function(A){console.log("converted binary string (length: "+A.length+"), type '"+typeof A+"' "+A);u.callback.onMessage(A)},function(A){console.error("converting to binary string failed"+A)})}};this.createOfferSuccess=function(z){console.log("createOffer worked with new constraint style");console.debug("unmodified local SDP from createOffer:\n"+z.sdp);sdpOffer=u.updateSDPOfferMediaDirection(z,{audio:u.audioMediaDirection,video:u.videoMediaDirection});sdpOffer=u.updateSDPForTempWorkarounds(sdpOffer,"offer");sdpOffer=u.updateSDPCrypto(sdpOffer,"offer");sdpOffer=u.updateSDPssrc(sdpOffer,"offer");sdpOffer=u.updateSDPcodecs(sdpOffer,"offer","audio",u.session.config.providerConfig.audioCodecs);sdpOffer=u.updateSDPcodecs(sdpOffer,"offer","video",u.session.config.providerConfig.videoCodecs);sdpOffer=u.updateSDPOfferMediaBundle(sdpOffer,"offer");sdpOffer=u.updateSDPBandwidth(sdpOffer,"offer");if(u.bodilessReInvite){console.log("Making offer after Offerless Invite received.");u.bodilessReInvite=false}if((u.videoIceUfrag!="")&&(u.videoIcePwd!="")){var y=u.getSDPattrValue(sdpOffer.sdp,"video","ice-ufrag:");var B=u.getSDPattrValue(sdpOffer.sdp,"video","ice-pwd:");if((y!="")&&(B!="")&&(u.videoIceUfrag!=y)&&(u.videoIcePwd!=B)){console.log("sdpOffer.sdp Before ICE params replaced = \n"+sdpOffer.sdp+"\n\n");sdpOffer.sdp=u.replaceSDPattr(sdpOffer.sdp,"video","ice-ufrag:",u.videoIceUfrag);sdpOffer.sdp=u.replaceSDPattr(sdpOffer.sdp,"video","ice-pwd:",u.videoIcePwd);console.log("sdpOffer.sdp After ICE params replaced = \n"+sdpOffer.sdp+"\n\n")}}if(sdpOffer.sdp!==u.sdpOffer){console.debug("createOffer: "+u.oldMediaTypes+","+u.mediaTypes);if((u.oldMediaTypes&&u.oldMediaTypes.indexOf("video")!==-1)&&(u.mediaTypes.indexOf("video")===-1)){var A=sdpOffer.sdp.indexOf("m=video");if(A!==-1){console.debug("local SDP has m=video line but video is not needed now... adding m=video 0 line and removing existing m=video line");sdpOffer.sdp=sdpOffer.sdp.substring(0,A)}sdpOffer.sdp+="m=video 0 RTP/SAVPF 0\nc=IN IP4 0.0.0.0\n"}if(u.oldMediaTypes&&u.oldMediaTypes.indexOf("video")===-1&&(u.holdPending||u.resumePending)&&(u.mediaTypes.indexOf("video")===-1)){var A=sdpOffer.sdp.indexOf("m=video");if(A!==-1){console.debug("local SDP has m=video line but video is not needed now... removing existing m=video line");sdpOffer.sdp=sdpOffer.sdp.substring(0,A);sdpOffer.sdp+="m=video 0 RTP/SAVPF 0\nc=IN IP4 0.0.0.0\n"}else{console.debug("local SDP has not m=video line")}}u.determineWaitingIce(sdpOffer);if(u.restoredCall){sdpOffer=u.updateSDPForCallRecovery(sdpOffer,"offer")}console.trace("createSDPOffer() setLocalDescription sdp = "+sdpOffer.sdp);u.pc.setLocalDescription(sdpOffer,u.setLDsuccessOnCreateOfferSuccess,u.setLDfailure);return}console.debug("createSDPOffer() Not sending a new offer")};this.createOfferFailure=function(y){console.error("createOffer failure: "+y);u.errorCallback(y)};this.createSDPOffer=function(){console.debug("Call.createSDPOffer()");if(this.pc===null||this.restoredCall){console.log("Creating new peer connection");if(this.pc){pc_streams=this.pc.getLocalStreams();this.pc.close();this.pc=null}this.createPeerConnection();if(this.restoredCall){this.pc.addStream(pc_streams[0])}}var B,F,D,z=false,y=false,E;if(this.mediaTypes.indexOf("audio")!==-1){z=true}if(this.mediaTypes.indexOf("video")!==-1){y=true}F={audio:z,video:y};D={mandatory:{OfferToReceiveAudio:z,OfferToReceiveVideo:y}};console.debug("createSDPOffer(): oldMediaTypes="+this.oldMediaTypes+"; current mediaTypes="+this.mediaTypes);if(this.holdPending===false&&this.resumePending===false){if(this.mediaTypes.indexOf("audio")!==-1){this.audioMediaDirection=this.MediaDirection.SENDRECV}if(this.mediaTypes.indexOf("video")!==-1){this.videoMediaDirection=this.MediaDirection.SENDRECV}}try{this.pc.createOffer(this.createOfferSuccess,this.createOfferFailure,F)}catch(C){try{this.pc.createOffer(this.createOfferSuccess,this.createOfferFailure,D)}catch(A){console.error("Call.createSDPOffer() webkitRTCPeerConnection can not create a SDP offer, exception = "+A)}}};this.updateSDPCandidate=function(P,R){console.debug("updateSDPCandidate()");var z,M,Q,O,N,L,I,y,K,H,A,J,B=false,G=/^(audio|video|application) ([0-9]+)([^\r\n]*)/,F=/(\r\nc=[^\s]* )([^\s]*) ([^\s]*)/,E=/\r\na=candidate:[^\s]* [^\s]* UDP [^\s]* ([^\s]*) ([^\s]*)/gi,D=/\r\na=candidate:[^\r\n]*/g,C=/(\r\na=rtcp:)([^\s]*) ([^\s]*) ([^\s]*) ([^\s]*)/;if(RTCSessionDescription&&P instanceof RTCSessionDescription){z=P.sdp}else{if(window.SessionDescription&&P instanceof SessionDescription){z=P.toSdp()}else{z=P}}M=z.split("\r\nm=");A=M[0].match(F);for(Q=1;Q<M.length;Q+=1){if(this.session.config.providerConfig.removeIPV6Candidates){y=M[Q].match(D);if(y){for(O=0;O<y.length;O+=1){K=y[O].split(" ");if(K[4]&&K[4].indexOf(":")>-1){M[Q]=M[Q].replace(y[O],"");B=true}}if(B){L=C.exec(M[Q]);y=M[Q].match(E);if(L&&L[5].indexOf(":")>-1&&y&&y[1]){y=E.exec(y[1]);M[Q]=M[Q].replace(C,"$1"+y[2]+" $3 IP4 "+y[1])}}}}I=M[Q].match(G);if(I){I=I[2];L=M[Q].match(F);if(L){L=L[3];J=false}else{if(A){L=A[3];J=true}}if(L){H=false;y=M[Q].match(E);if(y){for(O=0;O<y.length;O+=1){K=y[O].split(" ");if(L===K[4]&&I===K[5]){H=true;break}}}if(!H){K=E.exec(M[Q]);if(K){L=K[1];I=K[2];N=(K[1].indexOf(":")>-1)?"IP6":"IP4";if(J){M[Q]=M[Q].replace(G,"$1 "+I+"$3"+(L===A[3]?"":A[0].replace(F,"$1"+N+" "+L)))}else{M[Q]=M[Q].replace(G,"$1 "+I+"$3").replace(F,"$1"+N+" "+L)}B=true}}}}}if(B){z=M.join("\r\nm=");console.debug("updateSDPCandidate() SDP has been updated:"+z);if(RTCSessionDescription&&P instanceof RTCSessionDescription){return new RTCSessionDescription({type:R,sdp:z})}else{if(window.SessionDescription&&P instanceof SessionDescription){return new SessionDescription(z)}}return z}console.debug("updateSDPCandidate() SDP has not been updated");return P};this.updateSDPOfferMediaDirection=function(D,z){var A,C,B,y,E;if(RTCSessionDescription&&D instanceof RTCSessionDescription){A=D.sdp}else{if(window.SessionDescription&&D instanceof SessionDescription){A=D.toSdp()}else{A=D}}C=A;y=-1;E=false;if(z.audio!==undefined){y=A.indexOf("a=sendrecv");if(y===-1){y=A.indexOf("a=sendonly");if(y===-1){y=A.indexOf("a=recvonly");if(y===-1){y=A.indexOf("a=inactive")}}}if(y!==-1){C=A.substring(0,y);C=C+"a="+z.audio;C=C+A.substring(y+10);E=true}}if(z.video!==undefined){y=A.lastIndexOf("a=sendrecv");if(y===-1){y=A.lastIndexOf("a=sendonly");if(y===-1){y=A.lastIndexOf("a=recvonly");if(y===-1){y=A.indexOf("a=inactive")}}}if(y!==-1){B=C.substring(0,y);B=B+"a="+z.video;B=B+C.substring(y+10);E=true}}else{B=C}if(E===true){if(RTCSessionDescription&&D instanceof RTCSessionDescription){return new RTCSessionDescription({type:"offer",sdp:B})}else{if(window.SessionDescription&&D instanceof SessionDescription){return new SessionDescription(B)}}return B}console.debug("Call.updateSDPOfferMediaDirection() medias = "+z,", SDP has not been updated)");return D};this.updateSDPOfferMediaBundle=function(A,C){var z,B,y;if(u.session.config.providerConfig.bundle==true){console.debug("updateSDPOfferMediaBundle() no change, bundle is true.\n");return A}else{console.debug("updateSDPOfferMediaBundle() entry.\n")}if(RTCSessionDescription&&A instanceof RTCSessionDescription){z=A.sdp}else{if(window.SessionDescription&&A instanceof SessionDescription){z=A.toSdp()}else{z=A}}B=false;y=z.indexOf("a=group:BUNDLE audio video");if(y!==-1){B=true;z=z.replace("a=group:BUNDLE audio video\r\n","")}else{y=z.indexOf("a=group:BUNDLE audio");if(y!==-1){B=true;z=z.replace("a=group:BUNDLE audio\r\n","")}else{y=z.indexOf("a=group:BUNDLE video");if(y!==-1){B=true;z=z.replace("a=group:BUNDLE video\r\n","")}}}if(B===true){if(RTCSessionDescription&&A instanceof RTCSessionDescription){return new RTCSessionDescription({type:C,sdp:z})}else{if(window.SessionDescription&&A instanceof SessionDescription){return new SessionDescription(z)}}return z}console.debug("updateSDPOfferMediaBundle() SDP has not been updated)");return A};this.updateSDPCrypto=function(A,C){console.debug("updateSDPCrypto()");var z,B,y;if(RTCSessionDescription&&A instanceof RTCSessionDescription){z=A.sdp}else{if(window.SessionDescription&&A instanceof SessionDescription){z=A.toSdp()}else{z=A}}B=false;if(this.session.config.providerConfig.crypto.toLowerCase()!=="dtls-srtp"){y=z.indexOf("a=crypto:0 ");if(y!==-1){B=true;if(z.indexOf("a=crypto:1")===-1){z=z.replace(/a=crypto:0/g,"a=crypto:1")}else{z=z.replace(/a=crypto:0.*\r\n/g,"")}}if(C==="offer"){z=z.replace(/a=fingerprint.*\r\n/g,"");z=z.replace(/a=setup:actpass\r\n/g,"");B=true}}if(B===true){if(RTCSessionDescription&&A instanceof RTCSessionDescription){return new RTCSessionDescription({type:C,sdp:z})}else{if(window.SessionDescription&&A instanceof SessionDescription){return new SessionDescription(z)}}return z}console.debug("updateSDPCrypto() SDP has not been updated)");return A};this.updateSDPssrc=function(z,D){var y;var A;var C=false;if(u.session.config.providerConfig.stripExtraSSRC==false){console.debug("updateSDPssrc() no change, stripExtraSSRC is false.\n");return z}else{console.debug("updateSDPssrc() entry.\n")}if(RTCSessionDescription&&z instanceof RTCSessionDescription){A=z.sdp}else{if(window.SessionDescription&&z instanceof SessionDescription){A=z.toSdp()}else{A=z}}if((A.search("m=video")!=-1)&&(A.search("a=ssrc-group:FID")!=-1)){console.debug("Removing a=fmtp:96 apt=100, a=ssrc-group and 1st set of ssrc for video\n");A=A.replace("a=rtpmap:96 rtx/90000\r\na=fmtp:96 apt=100\r\n","");A=A.replace("100 116 117 96\r\n","100 116 117\r\n");A=A.replace(/a=ssrc-group:FID.*\r\n/,"");A=this.removeSDPattr(A,"video","ssrc:",1,4);C=true}if((A.search("m=video")!=-1)&&(A.search("a=rtpmap:96 rtx/90000")!=-1)){console.debug("rtx found. Removing a=fmtp:96 apt=100\n");A=A.replace("a=rtpmap:96 rtx/90000\r\na=fmtp:96 apt=100\r\n","");A=A.replace("100 116 117 96\r\n","100 116 117\r\n");C=true}A=A.split("\r\nm=");for(y=0;y<A.length;y++){if(A[y].indexOf("audio")==0){var B=A[y].split("a=ssrc:");if(B.length>5){B.splice(1,B.length-5);A[y]=B.join("a=ssrc:");C=true}break}}A=A.join("\r\nm=");if(C===true){console.debug("updateSDPssrc(), SDP has been updated.");if(RTCSessionDescription&&z instanceof RTCSessionDescription){return new RTCSessionDescription({type:D,sdp:A})}else{if(window.SessionDescription&&z instanceof SessionDescription){return new SessionDescription(A)}}return A}console.debug("updateSDPssrc(), SDP has not been updated.");return z};this.removeSDPattr=function(y,G,E,F,D){var C,B,A,z;if(D<=0){D=1000}y=y.split("\r\nm=");if(G=="session"){A=0}else{A=y.length;for(C=1;C<y.length;++C){if(y[C].indexOf(G+" ")==0){A=C;break}}if(A==y.length){console.debug("removeSDPattr() no "+G+" stream found.\n");y=y.join("\r\nm=");return y}}z=y[A];z=z.split("\r\n");for(C=0;C<z.length;++C){if(z[C].indexOf("a="+E)==0){if(F>1){--F;continue}z.splice(C,1);--C;--D;if(D==0){break}}}y[A]=z.join("\r\n");y=y.join("\r\nm=");return y};this.getSDPattrValues=function(y,H,F,G,D){var C,B,A,z;var E;var I=[];if(D<=0){D=1000}y=y.split("\r\nm=");if(H=="session"){A=0}else{A=y.length;for(C=1;C<y.length;++C){if(y[C].indexOf(H+" ")==0){A=C;break}}if(A==y.length){console.debug("getSDPattrValues() no "+H+" stream found.\n");y=y.join("\r\nm=");return I}}z=y[A];z=z.split("\r\n");for(C=0;C<z.length;++C){if(z[C].indexOf("a="+F)==0){if(G>1){--G;continue}E=z[C].substr(z[C].indexOf(":")+1);I.push(E);--D;if(D==0){break}}}y[A]=z.join("\r\n");y=y.join("\r\nm=");return I};this.getSDPattrValue=function(B,z,y){var A=this.getSDPattrValues(B,z,y,1,1);if(A.length!=0){return A[0]}else{return""}};this.replaceSDPattr=function(y,G,F,z){var E,D,B,C;y=y.split("\r\nm=");if(G=="session"){B=0}else{B=y.length;for(E=1;E<y.length;++E){if(y[E].indexOf(G+" ")==0){B=E;break}}if(B==y.length){console.debug("replaceSDPattr() no "+G+" stream found.\n");y=y.join("\r\nm=");return y}}C=y[B];C=C.split("\r\n");for(E=0;E<C.length;++E){if(C[E].indexOf("a="+F)==0){var A=C[E].substring(0,C[E].indexOf(":")+1);C[E]=A+z}}y[B]=C.join("\r\n");y=y.join("\r\nm=");return y};this.getCodecsFromSDP=function(z,G){var D,C,B;var A=[];var E=new RegExp("\r\n$");console.debug("getCodecsFromSDP():\n\tmediaType = "+G+"\n");z=z.split("\r\nm=");for(D=0;D<z.length;D++){if(z[D].indexOf(G)==0){var I=z[D].split("\r\n");var H=I[0].split(" ");for(C=3;C<H.length;C++){if(isNaN(H[C])==false){var F="";var y="a=rtpmap:"+H[C]+" ";for(B=0;B<I.length;++B){if(I[B].indexOf(y)==0){break}}if(B<I.length){F=I[B].substring(y.length);if(E.test(F)){F=F.substr(0,F.length-2)}}else{F=u.getCodecFromStaticPayloadType(H[C])}if(F!=""){console.debug("PT("+H[C]+"): "+F+" FOUND in availableCodecSet.\n");A.push({payloadType:H[C],codec:F})}}}break}}for(D=0;D<A.length;D++){console.debug("codecArray["+D+"] = "+A[D].payloadType+":"+A[D].codec+"\n")}return A};this.getCodecsFromArray=function(z){var y;var A="";for(y=0;y<z.length;++y){if(y>0){A=A+","}A=A+z[y].codec}return A};this.getCodecFromStaticPayloadType=function(z){var y;switch(z){case (0):y="PCMU/8000";break;case (8):y="PCMA/8000";break;case (9):y="G722/8000";break;case (13):y="CN/8000";break;case (18):y="G729/8000";break;default:y="";break}return y};this.updateSDPForCallRecovery=function(z,A){var y;console.debug("updateSDPForCallRecovery():\n\tsdpType = "+A+"\n\tlocalAudioCodecs count = "+u.localAudioCodecs.length+"\n\tlocalVideoCodecs count = "+u.localVideoCodecs.length);if((u.localAudioCodecs.length==0)&&(u.localVideoCodecs.length==0)){return z}y=u.getCodecsFromArray(u.localAudioCodecs);z=u.updateSDPcodecs(z,A,"audio",y);z=u.updateSDPpayloadTypes(z,A,"audio",u.localAudioCodecs);y=u.getCodecsFromArray(u.localVideoCodecs);z=u.updateSDPcodecs(z,A,"video",y);z=u.updateSDPpayloadTypes(z,A,"video",u.localVideoCodecs);console.debug("updateSDPForCallRecovery() completed. SDP :\n"+z.sdp+"\n");return z};this.updateSDPpayloadTypes=function(H,B,J,M){var F,D;var z;var E=false;var I=[];var y=[];var A=[];var G;console.debug("updateSDPpayloadTypes():\n\tsdpType = "+B+"\n\tmediaType = "+J+"\n\tnewPTArray count = "+M.length+"\n");if(M.length==0){return H}if(RTCSessionDescription&&H instanceof RTCSessionDescription){z=H.sdp}else{if(window.SessionDescription&&H instanceof SessionDescription){z=H.toSdp()}else{z=H}}I=u.getCodecsFromSDP(z,J);y.length=0;for(F=0;F<I.length;++F){for(D=0;M.length;++D){if(I[F].codec==M[D].codec){if(I[F].payloadType!=M[D].payloadType){y.push({codec:I[F].codec,oldPT:I[F].payloadType,newPT:M[D].payloadType})}break}}}if(y.length==0){console.debug("updateSDPpayloadTypes(): No change in "+J+" payloadTypes.\n");return H}else{for(F=0;F<128;++F){A.push({substitutionNeeded:false,newPT:F.toString()})}for(F=0;F<y.length;F++){console.debug("codecPTmap["+F+"] = "+y[F].codec+":"+y[F].oldPT+":"+y[F].newPT+"\n");A[parseInt(y[F].oldPT)].substitutionNeeded=true;A[parseInt(y[F].oldPT)].newPT=y[F].newPT}}z=z.split("\r\nm=");for(F=0;F<z.length;F++){if(z[F].indexOf(J)==0){var L=z[F].split("\r\n");var K=L[0].split(" ");for(D=3;D<K.length;D++){if((isNaN(K[D])==false)&&(A[parseInt(K[D])].substitutionNeeded)){K[D]=A[parseInt(K[D])].newPT;E=true}}L[0]=K.join(" ");for(D=1;D<L.length;D++){if(L[D].indexOf("a=rtpmap:")==0){G=parseInt(L[D].substring(9));if(A[G].substitutionNeeded){L[D]=L[D].replace(new RegExp("a=rtpmap:"+G+" ",""),"a=rtpmap:"+A[G].newPT+" ");E=true}}else{if(L[D].indexOf("a=fmtp:")==0){var C;G=parseInt(L[D].substring(7));if(A[G].substitutionNeeded){L[D]=L[D].replace(new RegExp("a=fmtp:"+G+" ",""),"a=fmtp:"+A[G].newPT+" ");E=true}C=L[D].indexOf("apt=");if(C!=-1){G=parseInt(L[D].substring(C+4));if(A[G].substitutionNeeded){L[D]=L[D].replace(new RegExp(" apt="+G,"")," apt="+A[G].newPT);E=true}}}else{if(L[D].indexOf("a=rtcp-fb:")==0){G=parseInt(L[D].substring(10));if(A[G].substitutionNeeded){L[D]=L[D].replace(new RegExp("a=rtcp-fb:"+G+" ",""),"a=rtcp-fb:"+A[G].newPT+" ");E=true}}}}}z[F]=L.join("\r\n");break}}z=z.join("\r\nm=");if(E===true){console.debug("updateSDPpayloadTypes(), SDP has been updated.");if(RTCSessionDescription&&H instanceof RTCSessionDescription){return new RTCSessionDescription({type:B,sdp:z})}else{if(window.SessionDescription&&H instanceof SessionDescription){return new SessionDescription(z)}}return z}console.debug("updateSDPpayloadTypes(), SDP has not been updated.");return H};this.updateSDPcodecs=function(P,S,z,D){var Q,N;var E;var G=false;var K;var W=new RegExp("\r\n$");var I=false;console.debug("updateSDPcodecs():\n\tsdpType = "+S+"\n\tmediaType = "+z+"\n\tavailableCodecSet = "+D+"\n");if(D==""){return P}if(RTCSessionDescription&&P instanceof RTCSessionDescription){E=P.sdp}else{if(window.SessionDescription&&P instanceof SessionDescription){E=P.toSdp()}else{E=P}}E=E.split("\r\nm=");if(W.test(E[E.length-2])===false){E[E.length-2]=E[E.length-2]+"\r\n";I=true}for(Q=0;Q<E.length;Q++){if(E[Q].indexOf(z)==0){var y=E[Q].split("\r\n");var V=y[0].split(" ");for(N=3;N<V.length;N++){K=true;if(isNaN(V[N])==false){var F="";var L="a=rtpmap:"+V[N]+" ";var R;var H;R=E[Q].indexOf(L);if(R!=-1){H=E[Q].indexOf("\r\n",R)}switch(V[N]){case (0):F="PCMU/8000";break;case (8):F="PCMA/8000";break;case (9):F="G722/8000";break;case (13):F="CN/8000";break;case (18):F="G729/8000";break;default:if(R!=-1){F=E[Q].substring(R+L.length,H)}else{F=""}break}if((F!="")&&(D.indexOf(F)!=-1)){console.debug("PT("+V[N]+"): "+F+" FOUND in availableCodecSet.\n")}else{K=false;console.debug("PT("+V[N]+"): "+F+" NOT FOUND in availableCodecSet.\n")}if(!K){var J=L+".*\r\n";var T="a=fmtp:"+V[N]+" .*\r\n";var B=" "+V[N]+" ";var A=" "+V[N]+"\r";var M;var U;E[Q]=E[Q].replace(new RegExp(J,"g"),"");E[Q]=E[Q].replace(new RegExp(T,"g"),"");M=E[Q].split("\n");U=M[0].split("RTP");U[1]=U[1].replace(B," ");U[1]=U[1].replace(A,"\r");M[0]=U.join("RTP");E[Q]=M.join("\n");if(z=="video"){var C="a=rtcp-fb:"+V[N]+" .*\r\n";E[Q]=E[Q].replace(new RegExp(C,"g"),"");if((F!="")&&(F.substr(0,4)=="rtx/")){var O="a=ssrc-group:FID .*\r\n";E[Q]=E[Q].replace(new RegExp(O,"g"),"");M=E[Q].split("\r\na=");M.splice(M.length-8,4);E[Q]=M.join("\r\na=")}}G=true}}}break}}if(I){E[E.length-2]=E[E.length-2].substr(0,E[E.length-2].length-2)}E=E.join("\r\nm=");if(G===true){console.debug("updateSDPcodecs(), SDP has been updated.");if(RTCSessionDescription&&P instanceof RTCSessionDescription){return new RTCSessionDescription({type:S,sdp:E})}else{if(window.SessionDescription&&P instanceof SessionDescription){return new SessionDescription(E)}}return E}console.debug("updateSDPcodecs(), SDP has not been updated.");return P};this.updateSDPForDTLS=function(z,B){console.debug("updateSDPForDTLS(). direction="+B+" config.crypto="+this.session.config.providerConfig.crypto);var y,A=z;if(this.session.config.providerConfig.crypto.toLowerCase()==="dtls-srtp"){if(B=="incoming"){y=A.indexOf(" UDP/TLS/RTP/SAVPF ");if(y!==-1){console.debug("Convert UDP/TLS/RTP/SAVPF to RTP/SAVPF");A=A.replace(/ UDP\/TLS\/RTP\/SAVPF /g," RTP/SAVPF ")}}else{y=A.indexOf(" RTP/SAVPF ");if(y!==-1){console.debug("Convert RTP/SAVPF to UDP/TLS/RTP/SAVPF");A=A.replace(/ RTP\/SAVPF /g," UDP/TLS/RTP/SAVPF ");console.debug("crypto is dtls-srtp. removing a=crypto lines");A=A.replace(/a=crypto.*\r\n/g,"")}}}else{console.debug("crypto is not dtls-srtp. removing fingerprint lines");A=A.replace(/a=fingerprint.*\r\n/g,"")}return A};this.updateSDPAddCodecs=function(C){console.debug("updateSDPAddCodecs()");var z,E,y;var D;var B;if(RTCSessionDescription&&C instanceof RTCSessionDescription){z=C.sdp}else{if(window.SessionDescription&&C instanceof SessionDescription){z=C.toSdp()}else{z=C}}y=z.split("\r\nm=");D=y[0].indexOf("a=inactive");if(D==-1){D=y[0].indexOf("a=sendonly")}E=false;if((/m=video .* RTP\/SAVPF/).test(z)&&!(/a=rtpmap:.* VP8\//).test(z)){y=z.split("\r\nm=");for(var A=0;A<y.length;A++){if(y[A].indexOf("video")==0){B=parseInt(y[A].slice(6));if((y[A].indexOf("a=inactive")>=0)||(y[A].indexOf("a=sendonly")>=0)||((y[A].indexOf("a=sendrecv")==-1)&&(y[A].indexOf("a=recvonly")==-1)&&(D>=0))||(B==0)){E=true;y[A]=y[A].replace(/\r\na=rtpmap:.*/g,"").replace(/\r\na=fmtp:.*/g,"").replace(/(video .* RTP\/SAVPF)(.*)/,"$1 100\r\na=rtpmap:100 VP8/90000");z=y.join("\r\nm=")}break}}}if((/m=audio .* RTP\/SAVPF/).test(z)&&!(/a=rtpmap:.* opus\//).test(z)){y=z.split("\r\nm=");for(var A=0;A<y.length;A++){if(y[A].indexOf("audio")==0){B=parseInt(y[A].slice(6));if((y[A].indexOf("a=inactive")>=0)||(y[A].indexOf("a=sendonly")>=0)||((y[A].indexOf("a=sendrecv")==-1)&&(y[A].indexOf("a=recvonly")==-1)&&(D>=0))||(B==0)){E=true;y[A]=y[A].replace(/(audio .*)/,"$1 111\r\na=rtpmap:111 opus/48000/2\r\na=fmtp:111 minptime=10");console.debug("adding opus");z=y.join("\r\nm=")}break}}}if(E===true){console.debug("updateSDPAddCodecs() SDP has been updated:"+z);if(RTCSessionDescription&&C instanceof RTCSessionDescription){return new RTCSessionDescription({type:"offer",sdp:z})}else{if(window.SessionDescription&&C instanceof SessionDescription){return new SessionDescription(z)}}return z}console.debug("updateSDPAddCodecs() SDP has not been updated)");return C};this.updateSDPForTempWorkarounds=function(z,C){console.debug("updateSDPForTempWorkarounds(). type="+C);var B,y,D;if(RTCSessionDescription&&z instanceof RTCSessionDescription){B=z.sdp}else{if(window.SessionDescription&&z instanceof SessionDescription){B=z.toSdp()}else{B=z}}D=false;y=B.indexOf("acap:");if(y!==-1){D=true;console.debug("Removed acap from crypto lines");B=B.replace(/acap.*crypto/g,"crypto")}y=B.indexOf(" RTP/AVP ");if(y!==-1&&D===true){D=true;console.debug("Convert RTP/AVP to RTP/SAVPF");B=B.replace(/ RTP\/AVP /g," RTP/SAVPF ")}y=B.indexOf("SAVP ");if(y!==-1){D=true;console.debug("Convert SAVP to SAVPF");B=B.replace(/SAVP /g,"SAVPF ")}if(C==="offer"){var A=B.match(/a=rtpmap:(\d+) telephone-event/);console.debug("this.telephoneEvent="+this.telephoneEvent);if(A&&A.length>1){if(this.telephoneEvent){console.debug("this.telephone-event: "+this.telephoneEvent+" and rtpmap in SDP is: "+A);if(this.telephoneEvent!==A[1]){if(B.indexOf("a=rtpmap:"+this.telephoneEvent)!==-1){B=B.replace(" "+this.telephoneEvent,"");B=B.replace(new RegExp("a=rtpmap:"+this.telephoneEvent+".*\r\n"),"")}B=B.replace(" "+A[1]," "+this.telephoneEvent);B=B.replace("a=rtpmap:"+A[1],"a=rtpmap:"+this.telephoneEvent);B=B.replace("a=fmtp:"+A[1],"a=fmtp:"+this.telephoneEvent);D=true}}else{console.debug("set this.telephone-event to: "+A[1]);this.telephoneEvent=A[1]}}}if(B.indexOf("a=fingerprint:dummyFunc")!==-1){B=B.replace(/a=fingerprint:dummyFunc.*\r\n/,"");console.log("Removing dummy fingerprint line");D=true}y=B.indexOf("webrtc-DataChannel");if(y!==-1){console.log("Mapping webrtc-DataChannel to webrtc-datachannel 16");B=B.replace(/webrtc-DataChannel/g,"webrtc-datachannel 16");D=true}if(D){console.debug("updateSDPForTempWorkarounds() SDP has been updated:"+B);if(RTCSessionDescription&&z instanceof RTCSessionDescription){return new RTCSessionDescription({type:C,sdp:B})}else{if(window.SessionDescription&&z instanceof SessionDescription){return new SessionDescription(B)}}return B}return z};this.updateSDPMediaIceOption=function(z,B,C){console.debug("updateSDPMediaIceOption()");var A,y;if(RTCSessionDescription&&z instanceof RTCSessionDescription){A=z.sdp}else{if(window.SessionDescription&&z instanceof SessionDescription){A=z.toSdp()}else{A=z}}y=A.indexOf("a=ice-options:google-ice");if(y===-1){A=A.replace(/\r\na=ice-ufrag/g,"\x0d\x0aa=ice-options:"+C+"\x0d\x0aa=ice-ufrag")}if(RTCSessionDescription&&z instanceof RTCSessionDescription){return new RTCSessionDescription({type:B,sdp:A})}else{if(window.SessionDescription&&z instanceof SessionDescription){return new SessionDescription(A)}}return A};this.updateSDPBandwidth=function(z,D){var F,E,C,B,y,A;F=this.getIntOrZero(this.session.config.providerConfig.audioBandwidth);E=this.getIntOrZero(this.session.config.providerConfig.videoBandwidth);C=this.getIntOrZero(this.session.config.providerConfig.dataBandwidth);if(F<=0&&E<=0&&C<=0){console.debug("updateSDPBandwidth() no change, no bandwidth values given");return z}console.debug("updateSDPBandwidth() audioB="+F+" videoB="+E+" dataB="+C);if(RTCSessionDescription&&z instanceof RTCSessionDescription){B=z.sdp}else{if(window.SessionDescription&&z instanceof SessionDescription){B=z.toSdp()}else{B=z}}changed=false;y=B.split("\r\nm=");for(A=0;A<y.length;A+=1){if(F>0&&y[A].indexOf("audio")==0){changed=true;y[A]=this.updateMediaBandwidth(y[A],F)}if(E>0&&y[A].indexOf("video")==0){changed=true;y[A]=this.updateMediaBandwidth(y[A],E)}if(C>0&&y[A].indexOf("application")==0){changed=true;y[A]=this.updateMediaBandwidth(y[A],C)}}if(changed){B=y.join("\r\nm=");console.debug("updateSDPBandwidth() SDP has been updated:"+B);if(RTCSessionDescription&&z instanceof RTCSessionDescription){return new RTCSessionDescription({type:D,sdp:B})}else{if(window.SessionDescription&&z instanceof SessionDescription){return new SessionDescription(B)}}return B}console.debug("updateSDPBandwidth() SDP not changed");return z};this.updateSDPDataChannel=function(D,K){var J,M,F,B,G,E,I,C,A,H,z,y,L;J=this.getMediaTypes();if(J!=="chat"&&J!=="filetransfer"&&J!=="imageshare"){return D}if(RTCSessionDescription&&D instanceof RTCSessionDescription){M=D.sdp}else{if(window.SessionDescription&&D instanceof SessionDescription){M=D.toSdp()}else{M=D}}F=false;B=M.split("\r\nm=");for(G=0;G<B.length;G+=1){A=(/^application ([^\s]*) [^\s]* ([^\s]*)/).exec(B[G]);if(A){H=A[2];A=A[1];I="";if(B[G].indexOf("a=data-channel:")<0){I+="a=data-channel:"+H+' stream=0;label="orca";subprotocol="MSRP"\r\n'}if(!(/a=dcsa:[^\s]* accept-types:/).test(B[G])){I+="a=dcsa:"+H+":0 accept-types:";switch(J){case"chat":I+="text/plain message/CPIM\r\n";break;case"imageshare":I+="message/CPIM application/octet-stream image/*\r\n";break;case"filetransfer":I+="message/CPIM application/octet-stream\r\n";break;default:I+="*\r\n"}}if(!(/a=dcsa:[^\s]* path:/).test(B[G])){C=(/\r\nc=[^\s]* [^\s]* ([^\s]*)/).exec(B[G]);if(C){C=C[1];if(!this.msrpFromPath){this.msrpSessionId=Math.random().toString(36).substr(2,16);this.msrpFromPath="msrps://"+C+":"+A+"/"+this.msrpSessionId+";dc"}I+="a=dcsa:"+H+":0 path:"+this.msrpFromPath+"\r\n"}}if(this.msrpFile&&!(/a=dcsa:[^\s]* file-selector:/).test(B[G])){z=this.msrpFile.name||"file";y=this.msrpFile.size||0;L=this.msrpFile.type||"application/octet-stream";I+="a=dcsa:"+H+':0 file-selector:name:"'+z+'" type:'+L+" size:"+y+"\r\n"}if(B[G].indexOf("a=connection:new")<0){I+="a=connection:new\r\n"}if(B[G].indexOf("a=sendrecv")<0&&B[G].indexOf("a=sendonly")<0&&B[G].indexOf("a=recvonly")<0&&B[G].indexOf("a=inactive")<0){I+="a=sendrecv\r\n"}if(I.length>0){F=true;B[G]=B[G].replace(/^(.*\r\n)/,"$1"+I)}}}if(F){M=B.join("\r\nm=");console.debug("updateSDPDataChannel() SDP has been updated:"+M);if(RTCSessionDescription&&D instanceof RTCSessionDescription){return new RTCSessionDescription({type:K,sdp:M})}else{if(window.SessionDescription&&D instanceof SessionDescription){return new SessionDescription(M)}}return M}return D};this.updateMediaBandwidth=function(y,z){if(y.indexOf("\r\nb=AS:")>-1){return y.replace(/\r\nb=AS:.*/,"\r\nb=AS:"+z)}return y.replace(/(.*)/,"$1\r\nb=AS:"+z)};this.getIntOrZero=function(y){if(y&&!isNaN(parseInt(y))){return parseInt(y)}return 0};this.isHoldRequest=function(y,z){if((this.audioMediaDirection=="sendonly"||this.audioMediaDirection=="inactive")&&(y=="sendrecv")){return true}if((this.videoMediaDirection=="sendonly"||this.videoMediaDirection=="inactive")&&(z=="sendrecv")){return true}return false};this.parseSDP=function(){var A,D,B,y;this.sdpOffer=this.updateSDPForDTLS(this.sdpOffer,"incoming");if(this.sdpOffer.search("m=message")!==-1){if((this.sdpOffer.search("TCP/MSRP")!==-1)||(this.sdpOffer.search("TCP/TLS/MSRP")!==-1)){return false}}this.mediaTypes=this.mediaTypeFromSdp(this.sdpOffer);A=this.sdpOffer;D=this.sdpOffer;y=-1;audio_start=A.indexOf("audio");video_start=A.indexOf("video");if(audio_start<video_start){audio_end=video_start;video_end=A.length}else{video_end=audio_start;audio_end=A.length}var z=A.slice(audio_start,audio_end);var C=A.slice(video_start,video_end);if(this.mediaTypes.indexOf("audio")!==-1){y=z.indexOf("a=sendrecv");if(y===-1){y=z.indexOf("a=sendonly");if(y===-1){y=z.indexOf("a=recvonly");if(y===-1){y=z.indexOf("a=inactive")}}}if(y!==-1){this.audioMediaDirection=z.substr(y+2,8)}}if(this.mediaTypes.indexOf("video")!==-1){y=C.indexOf("a=sendrecv");if(y===-1){y=C.indexOf("a=sendonly");if(y===-1){y=C.indexOf("a=recvonly");if(y===-1){y=C.indexOf("a=inactive")}}}if(y!==-1){this.videoMediaDirection=C.substr(y+2,8)}}return true};this.accept=function(){console.debug("Call.accept()");this.callStatus=this.CallStatus.ACCEPTED;this.markActionNeeded()};this.clean=function(){console.debug("Call.clean() calls.length: "+this.session.calls.length);this.session.adapter.cleanCallSession(this);var y;for(y=0;y<this.session.calls.length;y+=1){if(this.session.calls[y].callId===this.callId){console.debug("remove call "+this.session.calls[y]+"("+this.callId+")");this.session.calls.splice(y,1);break}}console.debug("Call.clean() calls.length: "+this.session.calls.length);if(this.dataChannel){this.dataChannel.close();this.dataChannel=null}if(this.pc){this.pc.close();this.pc=null}if(this.msrpFile){this.msrpFile=null}};this.setCallStatus=function(z){this.callStatus=z;var y={name:this.callStatus};this.callback.onStatus(this.callStatus,y)};this.incomingCallSessionEvent=function(G){var y,C,z,B;console.debug("Call.incomingCallSessionEvent() event: "+G.name+" status: "+this.callStatus);if(G.name==="confirmed"){if(this.callStatus===this.CallStatus.REFUSED){this.callback.onDisconnected({name:CallStatus.REJECTED});this.clean();return}else{if(this.callStatus===this.CallStatus.CANCELED){this.callback.onDisconnected({name:CallStatus.CANCELED});this.clean();return}}if(this.holdPending){this.holdPending=false;this.callStatusExternal=CallStatus.REMOTE_HOLD;this.callStatus=this.CallStatus.REMOTE_HOLD;y={name:CallStatus.REMOTE_HOLD};this.callback.onStatus(CallStatus.REMOTE_HOLD,y)}else{this.activeCall=true;this.callStatus=this.CallStatus.CONFIRMED;if(this.callStatusExternal===CallStatus.HOLD||this.callStatusExternal===CallStatus.REMOTE_HOLD){this.callStatusExternal=CallStatus.UNHOLD;y={name:CallStatus.UNHOLD};this.callback.onStatus(CallStatus.UNHOLD,y)}else{this.callStatusExternal=CallStatus.CONNECTED;y={name:CallStatus.CONNECTED};this.callback.onConnected(y)}}if(G.sdp){console.debug("received sdp in ACK: "+G.sdp);z=G.sdp;z=this.updateSDPForTempWorkarounds(z,"answer");if(this.session.config.providerConfig.addCodecs){z=this.updateSDPAddCodecs(z)}z=this.updateSDPForDTLS(z,"incoming");z=this.updateMSID(z);console.trace("receivedAck() setRemoteDescription sdp = "+z);this.pc.setRemoteDescription(new RTCSessionDescription({type:"answer",sdp:z}),this.setRDsuccess,this.setRDfailure2);this.setMediaTypeFromSdp(z)}return}else{if(G.name==="canceled"){console.debug("incomingCallSessionEvent: canceled: "+this.callStatus);if(this.callStatus===this.CallStatus.RINGING&&this.callDirection===this.CallDirection.INCOMING){this.callStatus=this.CallStatus.CANCELED;this.callStatusExternal=CallStatus.CANCELED}else{console.warn("invalid call status when receiving cancelled event "+this.callStatus)}return}}if(this.session.config.providerConfig.confWorkaroundChrome){this.inviteCount=this.inviteCount+1;console.log("doing inviteCounting.inviteCount ="+this.inviteCount)}this.callDirection=this.CallDirection.INCOMING;if((this.callStatus===this.CallStatus.IDLE)||((this.activeCall===true)&&(this.callStatus===this.CallStatus.CONFIRMED||this.callStatus===this.CallStatus.REMOTE_HOLD||this.callStatus===this.CallStatus.HOLD))){z=G.sdp;if(G.callId){this.callId=G.callId}if(G.uaCall){this.uaCall=G.uaCall}if(G.from){this.targetAOR=[G.from];this.remotePeerIds=[{id:this.targetAOR[0]}]}if(z){this.sdpOffer=z;old_audioMediaDirection=this.audioMediaDirection;old_videoMediaDirection=this.videoMediaDirection;if(this.session.config.providerConfig.confWorkaroundChrome){if(this.inviteCount==1){this.initialHoldOffer=this.sdpOffer.indexOf("a=sendonly")==-1?false:true;console.debug("this.initialHoldOffer = "+this.initialHoldOffer)}}C=this.parseSDP();if(C===false){console.warn("Call.receivedInvite() received a SDP offer with unsupported media");this.session.sendResponse(this,488,"Not Acceptable Here");return}if(this.session.config.providerConfig.addCodecs){this.sdpOffer=this.updateSDPAddCodecs(this.sdpOffer)}}else{console.debug("receivedInvite() received bodiless INVITE:\n\tset media type to "+this.session.config.mediatypes+"\tUnsetting previous SDP offer, so that a new offer is created.\tcallStatus = "+this.callStatus);this.mediaTypes=this.session.config.mediatypes;this.audioMediaDirection="sendrecv";this.videoMediaDirection="sendrecv";if(this.sdpOffer!=undefined){this.sdpOffer=undefined;this.bodilessReInvite=true;console.log("bodilessReInvite = true\n")}this.sdpOffer=undefined}if(this.activeCall===true){if(this.session.config.providerConfig.confWorkaroundChrome){console.debug("this.initialHoldOffer = "+this.initialHoldOffer);var A=this.sdpOffer.split("\r\nm=").length;console.debug("offerMLineCount = "+A);var D=this.pc.localDescription.sdp.split("\r\nm=").length;console.debug("answerMLineCount = "+D);var F=this.sdpOffer.indexOf("m=video 0 ")!=-1?true:false;console.debug("offerHasRemovedVideo = "+F);var E=this.pc.localDescription.sdp.indexOf("m=video 0 ")!=-1?true:false;console.debug("answerHasRemovedVideo = "+E);if(this.inviteCount>=1&&this.initialHoldOffer&&D==A&&F==E){console.log("doing inviteCounting. Not doing setRemote/createAnswer, instead sending 200OK with p earlier answer as this seems like a conf scenario");z=this.updateSDPForDTLS(this.pc.localDescription.sdp,"outgoing");this.session.adapter.sendResponse(this,200,"OK",z);this.initialHoldOffer=0;return}}if(this.oldMediaTypes){if(this.oldMediaTypes.indexOf("video")===-1&&this.mediaTypes.indexOf("video")!==-1){console.debug("receivedInvite(): upgrade");this.callStatus=this.CallStatus.UPGRADING;this.callStatusExternal=CallStatus.UPGRADING;y={name:CallStatus.UPGRADING};this.callback.onStatus(CallStatus.UPGRADING,y)}else{if(this.oldMediaTypes.indexOf("video")!==-1&&this.mediaTypes.indexOf("video")===-1){console.debug("receivedInvite(): downgrade");this.callStatus=this.CallStatus.DOWNGRADING;this.callStatusExternal=CallStatus.DOWNGRADING;y={name:CallStatus.DOWNGRADING};this.callback.onStatus(CallStatus.DOWNGRADING,y)}else{if(this.isHoldRequest(old_audioMediaDirection,old_videoMediaDirection)){this.holdPending=true;this.accept()}else{this.accept()}}}}}else{this.isTiledVideo=this.mediaTypes.indexOf("video")>-1&&(/Alcatel-Lucent-HPSS/).test(G.uaString);switch(this.mediaTypes.toLowerCase()){case"filetransfer":B=this.session.callback.createFileTransfer(this.targetAOR[0]);B.getImp().setWrappedCall(this.callback);y={name:SessionStatus.INCOMINGFILE};if(this.msrpFileProperties){y.fileProperties=this.msrpFileProperties}this.session.callback.onIncomingFileTransfer(B,y);break;case"imageshare":B=this.session.callback.createImageShare(this.targetAOR[0]);B.getImp().setWrappedCall(this.callback);y={name:SessionStatus.INCOMINGIMAGE};if(this.msrpFileProperties){y.fileProperties=this.msrpFileProperties}this.session.callback.onIncomingImageShare(B,y);break;case"chat":B=this.session.callback.createChat(this.targetAOR[0]);B.getImp().setWrappedCall(this.callback);y={name:SessionStatus.INCOMINGCHAT};this.session.callback.onIncomingChat(B,y);break;default:if(this.session.autoAnswerMode){this.restoredCall=true;this.session.wsRestoreInProgress=false;y={name:SessionStatus.INCOMINGAUTOANSWER}}else{if(this.session.autoAnswerTimer){y={name:SessionStatus.INCOMINGAUTOANSWER};clearTimeout(this.session.autoAnswerTimer);this.session.autoAnswerTimer=false;this.session.needAuthOnReRegister=true}else{y={name:SessionStatus.INCOMINGCALL}}}console.debug("Sending event = "+y.name);this.session.callback.onIncoming(this.callback,y)}this.session.adapter.sendResponse(this,180,"Ringing");this.callStatus=this.CallStatus.RINGING;this.callStatusExternal=CallStatus.CONNECTING;y={name:CallStatus.CONNECTING};this.callback.onStatus(CallStatus.CONNECTING,y)}}else{console.debug("receivedInvite() received INVITE in state "+this.callStatus);this.session.adapter.sendResponse(this,486,"Busy Here")}};this.terminatedCallSessionEvent=function(y){console.debug("Call.terminatedCallSessionEvent() event: "+y.name+", status: "+this.callStatus);this.clean();if(y.name===CallStatus.CANCELED||this.callStatus===this.CallStatus.CANCELING){this.callback.onDisconnected({name:CallStatus.CANCELED});return}if(this.callStatus===this.CallStatus.REFUSED){this.callback.onDisconnected({name:CallStatus.REJECTED});return}this.callStatusExternal=CallStatus.DISCONNECTED;this.callStatus=this.CallStatus.CLOSED;var z={name:CallStatus.DISCONNECTED};this.callback.onDisconnected(z);if(this.session.ws_only){this.session.ws_only=false;this.session.needAuthOnReRegister=false;this.session.adapter.createSession()}};this.ringingCallSessionEvent=function(y){console.debug("Call.ringingCallSessionEvent() event: "+y.name);if(this.callStatus===this.CallStatus.IDLE){console.warn("no active call");return}this.callStatus=this.CallStatus.RINGING;this.callStatusExternal=CallStatus.CONNECTING};this.acceptedCallSessionEvent=function(z){var B;console.debug("Call.acceptedCallSessionEvent() event: "+z.name+", status: "+this.callStatus);if(this.callStatus===this.CallStatus.IDLE){console.warn("no active call");return}if(!this.pc){console.warn("Call.receivedInviteResponse() no peer connection found.");this.callStatus=this.CallStatus.IDLE;this.callStatusExternal=CallStatus.DISCONNECTED;this.bye();return}if((this.callDirection===this.CallDirection.OUTGOING)&&((this.callStatus===this.CallStatus.CALLING)||(this.callStatus===this.CallStatus.RINGING))){if(this.holdPending){this.callStatus=this.CallStatus.HOLD;this.callStatusExternal=CallStatus.HOLD}else{this.callStatus=this.CallStatus.ACCEPTED}var y=z.sdp;if(this.pc.remoteStreams!==undefined){remoteStream=this.pc.remoteStreams[0];if(remoteStream!==undefined){console.debug("Call.receivedInviteResponse() remove remote stream (label=)"+remoteStream.label+")")}}y=this.updateSDPForDTLS(y,"incoming");y=this.updateSDPForTempWorkarounds(y,"answer");y=this.updateMSID(y);console.trace("receivedInviteResponse() setRemoteDescription sdp = "+y);this.pc.setRemoteDescription(new RTCSessionDescription({type:"answer",sdp:y}),this.setRDsuccess,this.setRDfailure2);this.setMediaTypeFromSdp(y);if(this.holdPending){B={name:CallStatus.HOLD};this.callStatus=this.CallStatus.HOLD;this.callStatusExternal=CallStatus.HOLD;this.holdPending=false;this.callback.onStatus(CallStatus.HOLD,B)}else{if(this.resumePending){this.resumePending=false}this.activeCall=true;this.callStatus=this.CallStatus.CONFIRMED;if(this.callStatusExternal===CallStatus.HOLD||this.callStatusExternal===CallStatus.REMOTE_HOLD){this.callStatusExternal=CallStatus.CONNECTED;B={name:CallStatus.UNHOLD};this.callback.onStatus(CallStatus.UNHOLD,B)}else{this.callStatusExternal=CallStatus.CONNECTED;B={name:CallStatus.CONNECTED};this.callback.onConnected(B)}}if(this.session.ws_only){this.session.needAuthOnReRegister=true;this.session.ws_only=false;var A=this;setTimeout(function(){A.session.adapter.createSession()},1000)}}else{if((this.callDirection===this.CallDirection.OUTGOING)&&(this.callStatus===this.CallStatus.CANCELING)){this.callStatus=this.CallStatus.CANCELED}else{console.warn("Unknown state. Stopped! status: "+this.callStatus+" direction: "+this.callDirection)}}};this.rejectedCallSessionEvent=function(y){console.debug("Call.rejectedCallSessionEvent() event: "+y.name+", status: "+this.callStatus);if(this.callStatus===this.CallStatus.IDLE){console.warn("no active call");return}if(this.callStatus===this.CallStatus.CANCELED){this.callStatusExternal=CallStatus.CANCELED;this.callback.onDisconnected({name:CallStatus.CANCELED})}else{this.callStatusExternal=CallStatus.REJECTED;this.callback.onDisconnected({name:CallStatus.REJECTED})}if(this.session.ws_only){this.session.ws_only=false;this.session.adapter.createSession()}this.clean()};this.errorCallback=function(y){console.trace(y);this.callback.onError(y)};this.createPeerConnection=function(){var A=null;if(webkitRTCPeerConnection===undefined){console.error("webkitRTCPeerConnection is undefined!");return}try{if(v.config.providerConfig){var z=v.config.providerConfig.stun.replace(/^\s+|\s+$/g,"");if(z!==""){this.iceServers={iceServers:[{url:"stun:"+z}]}}if(v.config.providerConfig.crypto.toLowerCase()==="dtls-srtp"){console.debug("Using DTLS-SRTP...");A={optional:[{DtlsSrtpKeyAgreement:true}]}}else{A={optional:[{DtlsSrtpKeyAgreement:false}]}}}this.pc=new webkitRTCPeerConnection(this.iceServers,A);this.pc.onaddstream=this.onRTCPeerConnectionOnAddStream;this.pc.onconnecting=this.onRTCPeerConnectionOnConnecting;this.pc.onicecandidate=this.onRTCPeerConnectionOnIceCandidate;this.pc.onnegotiationneeded=this.onRTCPeerConnectionOnNegotiationNeeded;this.pc.onopen=this.onRTCPeerConnectionOnOpen;this.pc.onremovestream=this.onRTCPeerConnectionOnRemoveStream;this.pc.onstatechange=this.onRTCPeerConnectionOnStatusChange;console.debug("createPeerConnection() create a RTCPeerConnection instance "+this.pc)}catch(y){console.error("Call() Can not create a RTCPeerConnection instance, exception = "+y)}};this.createDataChannel=function(){var A={};if(webkitRTCPeerConnection===undefined){console.error("webkitRTCPeerConnection is undefined!");return}try{if(v.config.providerConfig){var z=v.config.providerConfig.stun.replace(/^\s+|\s+$/g,"");if(z!==""){this.iceServers={iceServers:[{url:"stun:"+z}]}}if(v.config.providerConfig.crypto.toLowerCase()==="dtls-srtp"){console.debug("Using DTLS-SRTP...");A={optional:[{DtlsSrtpKeyAgreement:true}]}}else{A={optional:[{DtlsSrtpKeyAgreement:false}]}}}this.pc=new webkitRTCPeerConnection(this.iceServers,A);console.debug("createDataChannel: "+this.callDirection);if(false&&this.callDirection&&this.callDirection===this.CallDirection.INCOMING){console.debug("createDataChannel ondatachannel: "+this.callDirection);this.pc.ondatachannel=this.gotReceiveChannel}else{console.debug("pc.createDataChannel: "+this.callDirection);this.dataChannel=this.pc.createDataChannel("",{reliable:false,negotiated:true});this.dataChannel.onopen=this.onDataChannelOnOpen;this.dataChannel.onclose=this.onDataChannelOnClose;this.dataChannel.onmessage=this.onDataChannelOnMessage}this.pc.onconnecting=this.onRTCPeerConnectionOnConnecting;this.pc.onicecandidate=this.onRTCPeerConnectionOnIceCandidate;this.pc.onnegotiationneeded=this.onRTCPeerConnectionOnNegotiationNeeded;this.pc.onopen=this.onRTCPeerConnectionOnOpen;this.pc.onstatechange=this.onRTCPeerConnectionOnStatusChange;console.debug("createDataChannel() create a RTCPeerConnection data channel "+this.pc+" - "+this.dataChannel)}catch(y){console.error("Call() Can not create a RTCPeerConnection instance or data channel, exception = "+y)}};this.gotReceiveChannel=function(y){console.debug("Receive Channel Callback");this.dataChannel=y.channel;this.dataChannel.onmessage=this.onDataChannelOnMessage;this.dataChannel.onopen=this.onDataChannelOnOpen;this.dataChannel.onclose=this.onDataChannelOnClose};this.sendMessage=function(y){if(!this.dataChannel){console.warn("data channel not exist!");return}this.dataChannel.send(y);console.debug("sendMessage(): "+y)}}function q(w,t,u,v){this.to=w;this.file=t;this.session=u;this.callback=v;this.type="Unknown";this.status=CommStatus.DISCONNECTED;this.wasConnected=false;this.msrp=null;if(this.session&&this.session.adapter.Msrp){this.msrp=new this.session.adapter.Msrp(this)}this.wrappedCall=null;this.setWrappedCall=function(x){this.wrappedCall=x;if(this.file){this.wrappedCall.getCallImp().msrpFile=this.file}if(this.msrp&&typeof this.msrp.setWrappedCall==="function"){this.msrp.setWrappedCall(x)}};this.remoteIdentities=function(){return[{id:this.to}]};this.getStatus=function(){if(this.wrappedCall){var x=this.wrappedCall.getStatus();switch(x){case CallStatus.DISCONNECTED:return CommStatus.DISCONNECTED;case CallStatus.CONNECTING:return CommStatus.CONNECTING;case CallStatus.CONNECTED:return CommStatus.CONNECTED}}return this.status};this.connect=function(){if(this.session.adapter.Msrp){if(!this.wasConnected&&this.msrp){this.wasConnected=true;this.msrp.connect()}}else{this.callback.onError(CommError.NOT_SUPPORTED,{name:CommError.NOT_SUPPORTED});this.callback.onDisconnected({name:CommStatus.DISCONNECTED})}};this.disconnect=function(){if(this.msrp&&typeof this.msrp.disconnect==="function"){this.msrp.disconnect()}else{if(this.wrappedCall){this.wrappedCall.disconnect()}}};this.reject=function(){if(this.msrp&&typeof this.msrp.reject==="function"){this.msrp.reject()}else{if(this.wrappedCall){this.wrappedCall.disconnect()}}}}function r(v,u,t){this.to=v;this.session=u;this.message=t;this.callId=null;this.targetAOR=(typeof v=="string"?[v]:v);this.sendMessage=function(){console.log("sending message: "+this.message+", targetAOR: "+this.targetAOR);this.session.adapter.sendPageModeChatMessage(this,this.targetAOR,this.message)}}function e(v,t,u){q.call(this,v,undefined,t,u);this.type="Chat";this.sendMessage=function(w){if(this.msrp){this.msrp.sendMessage(w)}}}e.prototype=new q();function p(w,t,u,v){q.call(this,w,t,u,v);this.type="FileTransfer"}p.prototype=new q();function d(w,t,u,v){q.call(this,w,t,u,v);this.type="ImageShare"}d.prototype=new q();function s(u){if(u.substr(0,5)!=="<?xml"){return false}var y,x;if(x=document.implementation.createDocument){var A=new DOMParser();x=A.parseFromString(u,"application/xml");var t=x.firstChild;if(t==x.lastChild&&t.nodeName==="isComposing"){var w,z,v;w=t.getElementsByTagName("state");z=t.getElementsByTagName("contenttype");v=t.getElementsByTagName("refresh");if(w&&z&&v){return true}}}else{console.log("Cannot parse xml.");return false}return false}function o(v,u,t,w){this.callback=w;this.userId=v;this.token=u;this.abConfig=t;this.AddressBookAPI={};this.AddressBookAPI.GETLISTIDS="0";this.AddressBookAPI.GETLISTS="1";this.AddressBookAPI.GETMEMBERS="2";this.AddressBookAPI.GETCONTACTS="3";this.AddressBookAPI.ADDMEMBER="4";this.AddressBookAPI.ADDCONTACT="5";this.AddressBookAPI.UPDATEMEMBER="6";this.AddressBookAPI.UPDATECONTACT="7";this.AddressBookAPI.DELETELIST="8";this.AddressBookAPI.DELETEMEMBER="9";this.AddressBookAPI.DELETECONTACT="10";this.AddressBookAPI.TRANSFERMEMBER="11";this.checkConfig=function(){if(!t.contactServerURI){console.warn("contactServerURI is null");return false}if(!t.baseResourcePath){console.warn("baseResourcePath is null");return false}return true};this.request=function(y,x,E,A,B,z,C){var F=this;try{F.xmlHttpReq=false;if(window.XMLHttpRequest){F.xmlHttpReq=new XMLHttpRequest()}else{if(window.ActiveXObject){F.xmlHttpReq=new ActiveXObject("Microsoft.XMLHTTP")}else{try{xmlhttp=new ActiveXObject("Msxml2.XMLHTTP")}catch(D){console.warn("catch the exception: "+D.toString())}}}if(!F.xmlHttpReq){console.warn("Ajax not supported!");return}console.debug("the method is: "+x+",url is: "+y);F.xmlHttpReq.open(x,y,true);F.xmlHttpReq.onreadystatechange=function(){if(!F){return}if(!F.xmlHttpReq){return}if(!F.xmlHttpReq.readyState){return}if(F.xmlHttpReq.readyState==4){var G=F.xmlHttpReq.status;console.debug("xmlHttpReq.status is: "+G);if(G==1223){G=204}F.onResponse(G,C,z)}};if(z){F.xmlHttpReq.setRequestHeader("Accept",z)}if(E){F.xmlHttpReq.setRequestHeader("Content-Type",B);F.xmlHttpReq.send(A)}else{F.xmlHttpReq.send(null)}}catch(D){console.warn("catch the exception: "+D.toString())}};this.onResponse=function(y,B,A){console.debug("status is: "+y+", api is: "+B+", accept is: "+A);var z="Response "+y;z+="\n"+this.xmlHttpReq.getAllResponseHeaders();z+="\n"+this.xmlHttpReq.responseText;console.debug("the response is: "+z);var D=this.xmlHttpReq.responseText;var C;if(B===this.AddressBookAPI.GETLISTIDS){if(y>=200&&y<=300){var x;if(A==="application/xml"){console.debug("parse the response for xml format");x=this.parseGetListsForXml(D,true)}else{if(A==="application/json"){console.debug("parse the response for json format")}else{console.warn("accept error")}}C={name:AddressBookStatus.GETLISTS_SUCCESSFUL};this.callback.onGetLists(x,C)}else{C={name:AddressBookStatus.GETLISTS_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,C)}}else{if(B===this.AddressBookAPI.GETLISTS){if(y>=200&&y<=300){var x;if(A==="application/xml"){console.debug("parse the response for xml format");x=this.parseGetListsForXml(D,false)}else{if(A==="application/json"){console.debug("parse the response for json format")}else{console.warn("accept error")}}C={name:AddressBookStatus.GETLISTS_SUCCESSFUL};this.callback.onGetLists(x,C)}else{C={name:AddressBookStatus.GETLISTS_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,C)}}else{if(B===this.AddressBookAPI.GETMEMBERS){if(y>=200&&y<=300){var E;if(A==="application/xml"){console.debug("parse the response for xml format");E=this.parseGetMembersForXml(D)}else{if(A==="application/json"){console.debug("parse the response for json format")}else{console.warn("accept error")}}C={name:AddressBookStatus.GETMEMBERS_SUCCESSFUL};this.callback.onGetMembers(E,C)}else{C={name:AddressBookStatus.GETMEMBERS_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,C)}}else{if(B===this.AddressBookAPI.GETCONTACTS){}else{if(B===this.AddressBookAPI.ADDMEMBER){if(y>=200&&y<=300){C={name:AddressBookStatus.ADDMEMBER_SUCCESSFUL};this.callback.onAddMember(C)}else{C={name:AddressBookStatus.ADDMEMBER_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,C)}}else{if(B===this.AddressBookAPI.ADDCONTACT){}else{if(B===this.AddressBookAPI.UPDATEMEMBER){if(y>=200&&y<=300){C={name:AddressBookStatus.UPDATEMEMBER_SUCCESSFUL};this.callback.onUpdateMember(C)}else{C={name:AddressBookStatus.UPDATEMEMBER_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,C)}}else{if(B===this.AddressBookAPI.UPDATECONTACT){}else{if(B===this.AddressBookAPI.DELETELIST){if(y>=200&&y<=300){C={name:AddressBookStatus.DELETELIST_SUCCESSFUL};this.callback.onDeleteList(C)}else{C={name:AddressBookStatus.DELETELIST_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,C)}}else{if(B===this.AddressBookAPI.DELETEMEMBER){if(y>=200&&y<=300){C={name:AddressBookStatus.DELETEMEMBER_SUCCESSFUL};this.callback.onDeleteMember(C)}else{C={name:AddressBookStatus.DELETEMEMBER_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,C)}}else{if(B===this.AddressBookAPI.DELETECONTACT){}else{if(B===this.AddressBookAPI.TRANSFERMEMBER){if(y>=200&&y<=300){C={name:AddressBookStatus.TRANSFERMEMBER_SUCCESSFUL};this.callback.onTransferMember(C)}else{C={name:AddressBookStatus.TRANSFERMEMBER_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,C)}}else{console.debug("the api type error")}}}}}}}}}}}}};this.parseGetListsForXml=function(B,L){if(!B){return}console.debug("messageString is: "+B);if(B.substr(0,5)!=="<?xml"){return}var J,E;var y=new DOMParser();E=y.parseFromString(B,"application/xml");var O=new Array();if(L){console.debug("only return the list Ids");var K=E.getElementsByTagNameNS(a.ab,"listId");for(i=0;i<K.length;i++){var M=new Object();M.id=K[i].textContent;O[i]=M;console.debug("lists["+i+"].id is:"+O[i].id)}}else{console.debug("return list Ids and list members");var I=E.getElementsByTagNameNS(a.ab,"list");for(g=0;g<I.length;g++){var C=I[g].childNodes;var M=new Object();for(h=0;h<C.length;h++){if(C[h].nodeName==="ab:listId"){M.id=C[h].textContent;console.debug("list.id is:"+M.id)}if(C[h].nodeName==="ab:memberCollection"){var N=new Array();var G=C[h].getElementsByTagNameNS(a.ab,"member");for(i=0;i<G.length;i++){var F=G[i].childNodes;var x=new Object();for(j=0;j<F.length;j++){if(F[j].nodeName==="ab:memberId"){x.id=F[j].textContent;console.debug("member.id is:"+x.id)}if(F[j].nodeName==="ab:attributeList"){var D=new Array();var A=F[j].getElementsByTagNameNS(a.ab,"attribute");for(k=0;k<A.length;k++){var H=new Object();var z=A[k].childNodes;for(l=0;l<z.length;l++){if(z[l].nodeName==="name"){H.name=z[l].textContent;console.debug("attribute.name is:"+H.name)}if(z[l].nodeName==="value"){H.value=z[l].textContent;console.debug("attribute.name is:"+H.value)}}if(H.name=="display-name"){x.displayName=H.value}D[k]=H}x.attributes=D}}N[i]=x}M.members=N}}O[g]=M}}return O};this.parseGetMembersForXml=function(J){if(!J){return}console.debug("messageString is: "+J);if(J.substr(0,5)!=="<?xml"){return}var C,K;var y=new DOMParser();K=y.parseFromString(J,"application/xml");var x=K.getElementsByTagNameNS(a.ab,"listId");var G=new Object();G.id=x[0].textContent;console.debug("list.id is:"+G.id);var E=new Array();var I=K.getElementsByTagNameNS(a.ab,"member");for(i=0;i<I.length;i++){var H=I[i].childNodes;var F=new Object();for(j=0;j<H.length;j++){if(H[j].nodeName==="ab:memberId"){F.id=H[j].textContent;console.debug("member.id is:"+F.id)}if(H[j].nodeName==="ab:attributeList"){var D=new Array();var A=H[j].getElementsByTagNameNS(a.ab,"attribute");for(k=0;k<A.length;k++){var z=new Object();var B=A[k].childNodes;for(l=0;l<B.length;l++){if(B[l].nodeName==="name"){z.name=B[l].textContent;console.debug("attribute.name is:"+z.name)}if(B[l].nodeName==="value"){z.value=B[l].textContent;console.debug("attribute.name is:"+z.value)}}if(z.name=="display-name"){F.displayName=z.value}D[k]=z}F.attributes=D}}E[i]=F}G.members=E;return G};this.getLists=function(z){if(this.checkConfig()===false){var y={name:AddressBookStatus.GETLISTS_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,y);return}var A=encodeURIComponent(v);var x=t.contactServerURI+"/"+t.baseResourcePath+"/addressbook/v1/"+A+"/lists";console.debug("requestURL is: "+x);console.debug("getMembersInList is: "+z);if(z){this.request(x,"GET",false,null,"application/xml","application/xml",this.AddressBookAPI.GETLISTS)}else{this.request(x,"GET",false,null,"application/xml","application/xml",this.AddressBookAPI.GETLISTIDS)}};this.getMembers=function(x){if(this.checkConfig()===false){var A={name:AddressBookStatus.GETMEMBERS_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,A);return}if(!x){var A={name:AddressBookStatus.GETMEMBERS_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,A);return}var B=encodeURIComponent(v);var y=encodeURIComponent(x);var z=t.contactServerURI+"/"+t.baseResourcePath+"/addressbook/v1/"+B+"/lists/"+y;console.debug("requestURL is: "+z);this.request(z,"GET",false,null,"application/xml","application/xml",this.AddressBookAPI.GETMEMBERS)};this.getContacts=function(){};this.addMember=function(D,B){if(this.checkConfig()===false){var y={name:AddressBookStatus.ADDMEMBER_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,y);return}if(!D){var y={name:AddressBookStatus.ADDMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,y);return}var H=encodeURIComponent(v);var F=encodeURIComponent(D);var C,z;if(!B){console.debug("member is null, to create list");z=t.contactServerURI+"/"+t.baseResourcePath+"/addressbook/v1/"+H+"/lists/"+F;C='<?xml version="1.0" encoding="UTF-8"?><ab:list xmlns:ab="urn:oma:xml:rest:netapi:addressbook:1"><listId>'+D+"</listId></ab:list>"}else{console.debug("member is not null, to add member in the list");if(!B||!B.id){var y={name:AddressBookStatus.ADDMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,y)}var x=encodeURIComponent(B.id);z=t.contactServerURI+"/"+t.baseResourcePath+"/addressbook/v1/"+H+"/lists/"+F+"/members/"+x;var A=B.attributes;if(!A){console.debug("no attributes");C='<?xml version="1.0" encoding="UTF-8"?><ab:member xmlns:ab="urn:oma:xml:rest:netapi:addressbook:1"><memberId>'+B.id+"</memberId></ab:member>"}else{var G="";for(i=0;i<A.length;i++){G+="<attribute><name>"+A[i].name+"</name><value>"+A[i].value+"</value></attribute>"}var E="<attributeList>"+G.trim()+"<resourceURL>"+z+"/attributes</resourceURL></attributeList>";C='<?xml version="1.0" encoding="UTF-8"?><ab:member xmlns:ab="urn:oma:xml:rest:netapi:addressbook:1"><memberId>'+B.id+"</memberId>"+E+"</ab:member>"}}console.debug("requestURL is: "+z);console.debug("data is: "+C);this.request(z,"PUT",true,C,"application/xml","application/xml",this.AddressBookAPI.ADDMEMBER)};this.addContact=function(x){};this.updateMember=function(D,C){if(this.checkConfig()===false){var y={name:AddressBookStatus.UPDATEMEMBER_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,y);return}if(!D||!C||!C.id||!C.attributes){var y={name:AddressBookStatus.UPDATEMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,y);return}var H=encodeURIComponent(v);var F=encodeURIComponent(D);var x=encodeURIComponent(C.id);var z=t.contactServerURI+"/"+t.baseResourcePath+"/addressbook/v1/"+H+"/lists/"+F+"/members/"+x;console.debug("requestURL is: "+z);var A=C.attributes;var G="";for(i=0;i<A.length;i++){G+="<attribute><name>"+A[i].name+"</name><value>"+A[i].value+"</value></attribute>"}var E="<attributeList>"+G.trim()+"<resourceURL>"+z+"/attributes</resourceURL></attributeList>";var B='<?xml version="1.0" encoding="UTF-8"?><ab:member xmlns:ab="urn:oma:xml:rest:netapi:addressbook:1"><memberId>'+C.id+"</memberId>"+E+"</ab:member>";console.debug("data is: "+B);this.request(z,"PUT",true,B,"application/xml","application/xml",this.AddressBookAPI.UPDATEMEMBER)};this.updateContact=function(x){};this.deleteList=function(x){if(this.checkConfig()===false){var A={name:AddressBookStatus.DELETELIST_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,A);return}if(!x){var A={name:AddressBookStatus.DELETELIST_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,A);return}var B=encodeURIComponent(v);var y=encodeURIComponent(x);var z=t.contactServerURI+"/"+t.baseResourcePath+"/addressbook/v1/"+B+"/lists/"+y;console.debug("requestURL is: "+z);this.request(z,"DELETE",false,null,"application/xml","application/xml",this.AddressBookAPI.DELETELIST)};this.deleteMember=function(x,D){if(this.checkConfig()===false){var A={name:AddressBookStatus.DELETEMEMBER_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,A);return}if(!x){var A={name:AddressBookStatus.DELETEMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,A);return}if(!D||!D.id){var A={name:AddressBookStatus.DELETEMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,A);return}var B=encodeURIComponent(v);var y=encodeURIComponent(x);var C=encodeURIComponent(D.id);var z=t.contactServerURI+"/"+t.baseResourcePath+"/addressbook/v1/"+B+"/lists/"+y+"/members/"+C;console.debug("requestURL is: "+z);this.request(z,"DELETE",false,null,"application/xml","application/xml",this.AddressBookAPI.DELETEMEMBER)};this.deleteContact=function(x){};this.trnsferMember=function(D,C,E){if(this.checkConfig()===false){var y={name:AddressBookStatus.TRANSFERMEMBER_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,y);return}if(!D||!C||!C.id||!E){var y={name:AddressBookStatus.TRANSFERMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,y);return}var G=encodeURIComponent(v);var F=encodeURIComponent(D);var x=encodeURIComponent(C.id);var A=t.contactServerURI+"/"+t.baseResourcePath+"/addressbook/v1/"+G+"/lists/"+F+"/members/"+x+"/transfer";console.debug("requestURL is: "+A);var z=t.contactServerURI+"/"+t.baseResourcePath+"/addressbook/v1/"+v+"/lists/"+E;console.debug("destinationStr is: "+z);var B='<?xml version="1.0" encoding="UTF-8"?><ab:memberTransferParameters xmlns:ab="urn:oma:xml:rest:netapi:addressbook:1"><destination>'+z+"</destination></ab:memberTransferParameters>";console.debug("data is: "+B);this.request(A,"POST",true,B,"application/xml","application/xml",this.AddressBookAPI.TRANSFERMEMBER)}}var b={createSession:function(v,y,z,A){var w={uri:z.uri,mediatypes:z.mediatypes,providerConfig:{}};var t=["interfaceType","stun","bundle","crypto","conferenceFactoryURI","expires","addCodecs","dtmf","dtmfDuration","dtmfGap","audioBandwidth","videoBandwidth","dataBandwidth","audioCodecs","videoCodecs","persistentPC","breaker","stripExtraSSRC","confWorkaroundChrome","useFirstCandidate","removeIPV6Candidates","autoAnswerTime","maxRecoveryAttempts","networkRetryInterval","sendRegisterOnRecovery","registerResponseTime","registerRefreshTime","msidHandling","crlfKeepAliveInterval","enableMDSPsupport","secondaryDeviceId"];var u=["SIP-WS","",false,"dtls-srtp","","600",true,"inband","100","70","","","","","",true,false,true,false,false,true,0,5,5,false,0,0,true,0,false,'mobility="fixed"'];for(var x=0;x<t.length;x++){if(z.providerConfig&&z.providerConfig[t[x]]!==undefined){w.providerConfig[t[x]]=z.providerConfig[t[x]]}else{w.providerConfig[t[x]]=u[x]}}return new m(v,y,w,A)},createAddressBook:function(u,v,t,w){return new o(u,v,t,w)}};this.orcaALU=b})();
+console.trace=function(a){if(navigator.userAgent.match(/Chrome/i)){console.debug("["+new Date().toUTCString()+"] "+a+(new Error).stack.replace(/Error|http.*\//g,""))}else{console.debug(a)}};(function(){var a={ab:"urn:oma:xml:rest:netapi:addressbook:1"};var d=true;console.debug("ORCA/$Rev: 421 $; "+navigator.userAgent);if(typeof orcaVersion!=="undefined"){console.debug("ecms: "+orcaVersion)}if(navigator.mozGetUserMedia){console.debug("Firefox adapting");webkitRTCPeerConnection=mozRTCPeerConnection;RTCSessionDescription=mozRTCSessionDescription;RTCIceCandidate=mozRTCIceCandidate;navigator.getUserMedia=navigator.mozGetUserMedia;attachMediaStream=function(x,y){console.log("Attaching media stream");x.mozSrcObject=y;x.play()};reattachMediaStream=function(y,x){console.log("Reattaching media stream");y.mozSrcObject=x.mozSrcObject;y.play()}}else{if(navigator.webkitGetUserMedia){console.debug("chrome adapting");navigator.getUserMedia=navigator.webkitGetUserMedia}else{console.warn("Browser does not appear to be WebRTC-capable")}}function n(A,z,y,B){this.callback=B;this.WebSocketStatus={};this.WebSocketStatus.DISCONNECTED="0";this.WebSocketStatus.CONNECTING="1";this.WebSocketStatus.CONNECTED="2";this.RegisterStatus={};this.RegisterStatus.UNREGISTERED="0";this.RegisterStatus.WAITING="1";this.RegisterStatus.REGISTERING="2";this.RegisterStatus.REGISTERED="3";this.userId=A;this.token=z;this.config=y;this.sessionStatus=SessionStatus.DISCONNECTED;this.socketStatus=this.WebSocketStatus.DISCONNECTED;this.ws=undefined;this.localAOR=A;this.calls=[];this.presenceSubscriptions=[];this.adapter=null;var x=this;this.recoveryAttemptsRemaining=y.providerConfig.maxRecoveryAttempts;this.wsRestoreInProgress=false;this.ws_only=false;this.autoAnswerMode=false;this.needAuthOnReRegister=false;this.closePending=false;this.autoAnswerTimer=false;this.isReceivePong=false;this.updateToken=function(C){console.debug("orcaALU.updateToken");this.token=z;this.adapter.updateToken(C);this.adapter.createSession()};this.sendPingFrame=function(){var D=isNaN(y.providerConfig.crlfKeepAliveInterval)?0:parseInt(y.providerConfig.crlfKeepAliveInterval);console.log("crlfKeepAliveInterval is "+D);if(D>0){var C;if(D>10){C=10}else{C=D}this.SendPingMessage(C);this.sendPingMessageInterval=setInterval(function(){x.SendPingMessage(C)},D*1000)}};this.SendPingMessage=function(C){console.debug("Send CRLF Keep Alive request, timeOut:"+C);this.isReceivePong=false;this.sendPingMessageTimer=setTimeout(function(){x.sendPingMessageTimeout()},C*1000);this.ws.send("\r\n\r\n")};this.sendPingMessageTimeout=function(){console.debug("Enter sendPingMessageTimeout, isReceivePong:"+this.isReceivePong);if(!this.isReceivePong){console.debug("Can't receive the pong meesage, disconnect the session and close the WebSocket");this.setSessionStatus(SessionStatus.DISCONNECTED,SessionError.NETWORK_ERROR);this.ws.close(1000,"CRLF heartbeat failure")}};this.mdsp={myOwnGruu:"",gruuSupported:false,isGRUUsupported:function(){return this.gruuSupported},setGRUUsupport:function(C){this.gruuSupported=C},contacts:[],onContactsUpdate:function(){if(typeof B.onMDSPinfoUpdate==="function"){B.onMDSPinfoUpdate()}},isFeatureEnabled:function(){return x.config.providerConfig.enableMDSPsupport},getSecDeviceId:function(){return x.config.providerConfig.secondaryDeviceId},getContacts:function(){return this.contacts},addContact:function(C,F,D,G){var E;if(C==this.myOwnGruu){return false}for(E=0;E<this.contacts.length;++E){if(this.contacts[E].gruu==C){return false}}this.contacts.push({gruu:C,sipUri:F,displayName:D,isSecondaryDevice:G,dialog:[]});return true},addDialog:function(C){var D;for(D=0;D<this.contacts.length;++D){if(this.contacts[D].displayName==C.localDisplayName){this.contacts[D].dialog.push({dialogId:C.dialogId,callId:C.callId,remoteId:C.remoteId,state:C.state,exclusive:C.exclusive,direction:C.direction,localTag:C.localTag,remoteTag:C.remoteTag,mediaAttr:C.mediaAttr});return true}}console.log("Unable to add dialog, displayName not found:\n\tdisplayName = "+C.localDisplayName+"\n\tdialogId = "+C.dialogId+"\n\tcallId   = "+C.callId+"\n\tremoteId = "+C.remoteId+"\n\tstate    = "+C.state+"\n\texclusive= "+C.exclusive+"\n\tdirection= "+C.direction+"\n\tlocalTag = "+C.localTag+"\n\tremoteTag= "+C.remoteTag);for(D=0;D<C.mediaAttr.length;++D){console.log("\tmediaAttr["+D+"].mediaType      = "+C.mediaAttr[D].mediaType+"\n\tmediaAttr["+D+"].mediaDirection = "+C.mediaAttr[D].mediaDirection)}return false},logContacts:function(F,G){var E,D,C;console.log("MDSP Contacts: "+((F)?F:"")+":\n");for(E=0;E<this.contacts.length;++E){console.log("contacts["+E+"].displayName = "+this.contacts[E].displayName);console.log("contacts["+E+"].gruu   = "+this.contacts[E].gruu);console.log("contacts["+E+"].sipUri = "+this.contacts[E].sipUri);console.log("contacts["+E+"].isSecondaryDevice = "+this.contacts[E].isSecondaryDevice);console.log("\tDialogs:\n");for(D=0;D<this.contacts[E].dialog.length;++D){console.log("\t\tdialog["+D+"].dialogId = "+this.contacts[E].dialog[D].dialogId+"\n\t\tdialog["+D+"].callId   = "+this.contacts[E].dialog[D].callId+"\n\t\tdialog["+D+"].state    = "+this.contacts[E].dialog[D].state+"\n\t\tdialog["+D+"].remoteId = "+this.contacts[E].dialog[D].remoteId+"\n\t\tdialog["+D+"].exclusive= "+this.contacts[E].dialog[D].exclusive+"\n\t\tdialog["+D+"].direction= "+this.contacts[E].dialog[D].direction+"\n\t\tdialog["+D+"].localTag = "+this.contacts[E].dialog[D].localTag+"\n\t\tdialog["+D+"].remoteTag= "+this.contacts[E].dialog[D].remoteTag);for(C=0;C<this.contacts[E].dialog[D].mediaAttr.length;++C){console.log("\t\t\tmediaAttr["+C+"].mediaType = "+this.contacts[E].dialog[D].mediaAttr[C].mediaType+"\n\t\t\tmediaAttr["+C+"].mediaDirection = "+this.contacts[E].dialog[D].mediaAttr[C].mediaDirection)}}if(this.contacts[E].dialog.length==0){console.log("\t\tNone\n")}}if(E==0){console.log("None\n");return}if(G){console.log("My own GRUU = "+this.myOwnGruu)}},subscribeDialog:function(C){x.adapter.sendSubscribeDialog(C)},dialogSubscriptions:[],subscribeToMDSPContactDialogs:function(){var C;for(C=0;C<this.contacts.length;C++){if(this.getDialogSubscriptionIndex(this.contacts[C].sipUri)==(-1)){this.subscribeDialog(this.contacts[C].sipUri);this.addDialogSubscription(this.contacts[C].sipUri)}}},subscribeDialogTimerExp:function(E){var D;var C=this.getDialogSubscriptionIndex(E);for(D=0;D<this.contacts.length;++D){if(this.contacts[D].sipUri==E){this.subscribeDialog(E);if(C>=0){var F=setTimeout(this.subscribeDialogTimerExp.bind(this),60*60*1000,E);this.dialogSubscriptions[C].expTimerId=F}else{this.addDialogSubscription(E)}return}}if(C>=0){dialogSubscriptions.splice(C,1)}},addDialogSubscription:function(C){var D=setTimeout(this.subscribeDialogTimerExp.bind(this),60*60*1000,C);this.dialogSubscriptions.push({sipUri:C,expTimerId:D})},getDialogSubscriptionIndex:function(D){var C;for(C=0;C<this.dialogSubscriptions.length;C++){if(this.dialogSubscriptions[C].sipUri==D){return C}}return -1},clearDialogSubscriptions:function(){var C;for(C=0;C<this.dialogSubscriptions.length;C++){clearTimeout(this.dialogSubscriptions[C].expTimerId)}},clearMDSPcontacts:function(){this.contacts=[];this.clearDialogSubscriptions();this.onContactsUpdate()},onDialogNotify:function(F){var J;var E;var I="application/xml";var G=[];var H;var D;var C;console.debug("mdsp.onDialogNotify():");if(window.DOMParser){J=new DOMParser();E=J.parseFromString(F,I)}else{E=new ActiveXObject("Microsoft.XMLDOM");E.async=false;E.loadXML(F)}C=E.getElementsByTagName("dialog");console.log("dialogArray.length = "+C.length);for(D=0;D<C.length;++D){H=this.getDialogInfoElemFromNotifyDialog(C[D]);G.push(H)}this.reconcileMDSPDialogs(G)},getDialogInfoElemFromNotifyDialog:function(H){var F,E,D;console.log("getDialogInfoElemFromNotifyDialog()");var G={localDisplayName:"Unavailable",dialogId:"0000",callId:"",remoteId:"",state:"",exclusive:false,direction:"",localTag:"",remoteTag:"",mediaAttr:[]};if((H.attributes!=undefined)&&(H.attributes.length>0)){for(F=0;F<H.attributes.length;++F){if(H.attributes[F].localName=="id"){G.dialogId=H.attributes[F].textContent}else{if(H.attributes[F].localName=="call-id"){G.callId=H.attributes[F].textContent}else{if(H.attributes[F].localName=="local-tag"){G.localTag=H.attributes[F].textContent}else{if(H.attributes[F].localName=="remote-tag"){G.remoteTag=H.attributes[F].textContent}else{if(H.attributes[F].localName=="direction"){G.direction=H.attributes[F].textContent}}}}}}}for(F=0;F<H.childNodes.length;++F){if(H.childNodes[F].localName=="exclusive"){G.exclusive=((H.childNodes[F].textContent=="true")?true:false)}else{if(H.childNodes[F].localName=="state"){G.state=H.childNodes[F].textContent}else{if(H.childNodes[F].localName=="remote"){for(E=0;E<H.childNodes[F].childNodes.length;++E){if(H.childNodes[F].childNodes[E].localName=="identity"){G.remoteId=H.childNodes[F].childNodes[E].textContent}else{if(H.childNodes[F].childNodes[E].localName=="mediaAttributes"){var C={};for(D=0;D<H.childNodes[F].childNodes[E].childNodes.length;++D){if(H.childNodes[F].childNodes[E].childNodes[D].localName=="mediaType"){C.mediaType=H.childNodes[F].childNodes[E].childNodes[D].textContent}else{if(H.childNodes[F].childNodes[E].childNodes[D].localName=="mediaDirection"){C.mediaDirection=H.childNodes[F].childNodes[E].childNodes[D].textContent}}}G.mediaAttr.push(C)}}}}else{if(H.childNodes[F].localName=="local"){for(E=0;E<H.childNodes[F].childNodes.length;++E){if(H.childNodes[F].childNodes[E].localName=="identity"){for(D=0;D<H.childNodes[F].childNodes[E].attributes.length;++D){if(H.childNodes[F].childNodes[E].attributes[D].localName=="display-name"){G.localDisplayName=H.childNodes[F].childNodes[E].attributes[D].textContent}}}}}}}}}return G},reconcileMDSPDialogs:function(E){var D,C;console.log("reconcileMDSPDialogs(), newDialogInfo.length = "+E.length);for(D=0;D<this.contacts.length;++D){this.contacts[D].dialog.splice(0,this.contacts[D].dialog.length)}for(D=0;D<E.length;++D){this.addDialog(E[D])}for(D=0;D<E.length;++D){console.log("newDialogInfo["+D+"].localDisplayName = "+E[D].localDisplayName);console.log("newDialogInfo["+D+"].dialogId         = "+E[D].dialogId);console.log("newDialogInfo["+D+"].callId           = "+E[D].callId);console.log("newDialogInfo["+D+"].remoteId         = "+E[D].remoteId);console.log("newDialogInfo["+D+"].state            = "+E[D].state);console.log("newDialogInfo["+D+"].exclusive        = "+E[D].exclusive);console.log("newDialogInfo["+D+"].direction        = "+E[D].direction);console.log("newDialogInfo["+D+"].localTag         = "+E[D].localTag);console.log("newDialogInfo["+D+"].remoteTag        = "+E[D].remoteTag);for(C=0;C<E[D].mediaAttr.length;++C){console.log("newDialogInfo["+D+"].mediaAttr["+C+"].mediaType = "+E[D].mediaAttr[C].mediaType);console.log("newDialogInfo["+D+"].mediaAttr["+C+"].mediaDirection = "+E[D].mediaAttr[C].mediaDirection)}}this.onContactsUpdate()},getContactFromGruu:function(C){var D;for(D=0;D<this.contacts.length;++D){if(this.contacts[D].gruu==C){return this.contacts[D]}}return null},pushCallToContact:function(D,E){var C;C=this.getContactFromGruu(E);if(C==null){console.error("Unable to locate MDSP contact for GRUU = "+gruu);return}x.adapter.doPush(D,C.sipUri,E)},pullCallFromMDSPdialog:function(D,C){D.getCallImp().pullCallInfo=C},getReplacesUriForPull:function(C){return(C.dialogElem.callId+";to-tag="+C.dialogElem.localTag+";from-tag="+C.dialogElem.remoteTag)},getToUriForPull:function(G){var H;var F;var I="VoLTE-";var E="active";var D=x.userId.slice(A.indexOf("@")+1);var C=this.getContactFromGruu(G.gruu);if(C==null){console.debug("Unable to find MDSP contact for GRUU = "+G.gruu)}else{if(C.isSecondaryDevice){I="SP-"}}for(H=0;H<G.dialogElem.mediaAttr.length;++H){if(((G.dialogElem.mediaAttr[H].mediaType=="audio")||(G.dialogElem.mediaAttr[H].mediaType=="video"))&&(G.dialogElem.mediaAttr[H].mediaDirection!="sendrecv")){E="hold"}}F="sip:pull-"+I+E+"@"+D;return F},getRequestUriUserForPull:function(){return"pull-VoLTE-active"}};this.updateToken=function(C){console.debug("orcaALU.updateToken");this.token=C;this.adapter.updateToken(C);this.adapter.createSession()};this.printConfig=function(){console.debug("Config Parameters Start:\n");console.debug("userId: "+this.userId);console.debug("token.id: "+this.token.id);console.debug("token.key: "+this.token.key);console.debug("token.displayName: "+this.token.displayName);console.debug("token.authtype: "+this.token.authtype);console.debug("uri: "+this.config.uri);console.debug("mediatypes: "+this.config.mediatypes);var D=JSON.stringify(this.config.providerConfig);var C=D.split(",");for(i in C){console.debug(C[i])}console.debug("Config Parameters End:\n")};this.connect=function(){console.debug("["+new Date().toUTCString()+"] Session.connect()");this.printConfig();if(!this.config.providerConfig.addCodecs&&this.config.providerConfig.addCodecs!==false){this.config.providerConfig.addCodecs=true;console.debug("use default value 'Enabled' for the addCodecs")}if(d){d=false;if(this.config.providerConfig.autoAnswerTime>0){this.autoAnswerTimer=setTimeout(function(){x.autoAnswerTimer=false},this.config.providerConfig.autoAnswerTime*1000)}}if(this.socketStatus===this.WebSocketStatus.DISCONNECTED){this.createWebSocket()}else{console.error("your session is already connecting or connected to the gateway")}};this.createWebSocket=function(){console.debug("["+new Date().toUTCString()+"] Session.createWebSocket()");var C=this.config.uri;if((C.substr(0,2)!=="ws")&&(C.substr(0,3)!=="wss")){console.error("URI of the gateway is malformed.");return}console.debug("connect to "+C+" interfaceType: "+this.config.providerConfig.interfaceType);if(this.config.providerConfig.interfaceType==="REST-WS"){this.ws=new WebSocket(C,["ALURest"]);this.adapter=new b.RestAdapter(this.ws,A,z,y,this)}else{this.ws=new WebSocket(C,["sip"]);this.adapter=new b.SipAdapter(this.ws,A,z,y,this)}this.ws.binaryType="arraybuffer";this.socketStatus=this.WebSocketStatus.CONNECTING;this.ws.onopen=function(D){x.onWebSocketOpen(D)};this.ws.onclose=function(D){x.onWebSocketClose(D)};this.ws.onerror=function(D){x.onWebSocketError(D)};this.ws.onmessage=function(D){x.onWebSocketMessage(D)}};this.createCall=function(G,C,E,F){console.debug("Session.createCall()");var D=new m(G,C,E,F);this.calls.push(D);return D};this.createChat=function(E,C,D){return new f(E,C,D)};this.sendPageModeChatMessage=function(E,D){var C=new v(E,this,D);this.calls.push(C);C.sendMessage()};this.sendSmsMessage=function(H,F,C){var E=o(9);var G=u(new Date());console.info("generate imdnMessageID:"+E);console.info("ISO dateTime:"+G);var D=new c(H,this,E,G,F);this.calls.push(D);D.sendMessage();C.setSmsIMDNMessageID(E);C.setDateTime(G)};this.sendSmsIMDNMessage=function(G,E,D,F){var C=new p(G,this,E,D,F);this.calls.push(C);C.sendMessage()};this.createFileTransfer=function(F,C,D,E){return new s(F,C,D,E)};this.createImageShare=function(F,C,D,E){return new e(F,C,D,E)};this.subscribePresence=function(C){this.adapter.sendSubscribePresence(C)};this.test=function(D){var C={data:D};this.onWebSocketMessage(C)};this.getPresence=function(C){this.adapter.sendSubscribePresence(C,0)};this.updatePresence=function(C){this.adapter.sendUpdatePresence(C)};this.disconnect=function(){console.debug("Session.disconnect()");if(this.socketStatus!==this.WebSocketStatus.DISCONNECTED){this.adapter.terminateSession()}else{console.warn("Session.disconnect() Ignoring in this state : "+this.socketStatus)}};this.getStatus=function(){return this.sessionStatus};this.onWebSocketOpen=function(C){console.debug("["+new Date().toUTCString()+"] Session.onWebSocketOpen()");this.socketStatus=this.WebSocketStatus.CONNECTED;if((this.wsRestoreInProgress==true)&&(!this.config.providerConfig.sendRegisterOnRecovery)){this.ws_only=true;this.needAuthOnReRegister=true;console.debug("Setting up to create ws only session")}this.adapter.createSession()};this.onWebSocketClose=function(C){console.debug("["+new Date().toUTCString()+"] Session.onWebSocketClose(), evt = "+C);var D={name:C.data};if((this.closePending==true)&&(this.socketStatus==this.WebSocketStatus.CONNECTED)){console.log("Ignoring register refresh timeout late close");this.closePending=false;return}clearTimeout(this.adapter.refresh_timer);clearTimeout(this.adapter.registerResponseTimer);clearTimeout(this.sendPingMessageTimer);clearInterval(this.sendPingMessageInterval);if(this.mdsp.isFeatureEnabled()){this.mdsp.clearMDSPcontacts()}if((this.socketStatus==this.WebSocketStatus.CONNECTED)&&(this.recoveryAttemptsRemaining!=0)&&(this.config.providerConfig.networkRetryInterval!=0)&&(this.calls[0])){console.log("Getting timer to retry ws connection");setTimeout(function(){x.connect()},(y.providerConfig.networkRetryInterval*1000));this.recoveryAttemptsRemaining--;this.wsRestoreInProgress=true;this.socketStatus=this.WebSocketStatus.DISCONNECTED;return}if(this.socketStatus!==this.WebSocketStatus.CONNECTED){console.error("Network failure")}else{D={name:this.sessionStatus};this.callback.onStatus(this.sessionStatus,D);this.callback.onDisconnected(D)}this.socketStatus=this.WebSocketStatus.DISCONNECTED};this.onWebSocketError=function(C){console.error("Network failure");console.debug("Session.onWebSocketError() network failure, evt = "+C);clearTimeout(this.adapter.refresh_timer);this.socketStatus=this.WebSocketStatus.DISCONNECTED;if((this.recoveryAttemptsRemaining!=0)&&(this.config.providerConfig.networkRetryInterval!=0)&&(this.calls[0])){console.log("Getting timer to retry ws connection");setTimeout(function(){x.connect()},(y.providerConfig.networkRetryInterval*1000));this.recoveryAttemptsRemaining--;this.wsRestoreInProgress=true}else{var D={name:SessionError.NETWORK_ERROR};this.callback.onError(SessionError.NETWORK_ERROR,D);this.wsRestoreInProgress=false}};this.onWebSocketMessage=function(C){var D=C.data;if(D==="\r\n"){console.debug("received WebSocket message with CRLF Keep Alive response");this.isReceivePong=true;clearTimeout(this.sendPingMessageTimer);return}else{if(typeof D!=="string"){try{D=String.fromCharCode.apply(null,new Uint8Array(D))}catch(C){console.warn("received WebSocket binary message failed to be converted into string, message discarded");return}}else{}}D=D.replace(/^l:/gm,"Content-Length:");D=D.replace(/^v:/gm,"Via:");D=D.replace(/^t:/gm,"To:");D=D.replace(/^f:/gm,"From:");D=D.replace(/^i:/gm,"Call-ID:");D=D.replace(/^e:/gm,"Content-Encoding:");D=D.replace(/^m:/gm,"Contact:");console.debug("["+new Date().toUTCString()+"] Session.onWebSocketMessage() message:\n"+D);this.adapter.received(D)};this.onPageModeChatMessageFailed=function(C){var E=this.getCall(C.callId);if(E===null){console.warn("Session received a SIP response for a unknow page mode chat message. Ignore it.");return}var F={to:E.to};this.callback.onPageModeChatMessageFailed(E.message,F);for(var D=0;D<this.calls.length;D++){if(this.calls[D].callId===E.callId){this.calls.splice(D,1);break}}};this.onPageModeChatMessageSent=function(C){var E=this.getCall(C.callId);if(E===null){console.warn("Session received a SIP response for a unknow page mode chat message. Ignore it.");return}for(var D=0;D<this.calls.length;D++){if(this.calls[D].callId===E.callId){this.calls.splice(D,1);break}}};this.onSmsMessageSent=function(C){console.info("call onSmsMessageSent");var E=this.getCall(C.callId);if(E===null){console.warn("Session received a SIP response for an unknown sms message. Ignore it.");return}var F={to:E.to,from:C.from,imdnMessageID:C.imdnMessageID,dateTime:C.dateTime,status:C.status};console.info("call.to: "+E.to);console.info("evt.from: "+C.from);console.info("call.message: "+E.message);this.callback.onSmsMessageSent(E.message,F);for(var D=0;D<this.calls.length;D++){if(this.calls[D].callId===E.callId){this.calls.splice(D,1);break}}};this.onSmsMessageFailed=function(C){var E=this.getCall(C.callId);var G=C.imdnMessageID;if(E===null){console.warn("Session received a SIP response for an unknown sms message. Ignore it.");return}var F={to:E.to,imdnMessageID:G};console.info("call.message: "+E.message);this.callback.onSmsMessageFailed(E.message,F);for(var D=0;D<this.calls.length;D++){if(this.calls[D].callId===E.callId){this.calls.splice(D,1);break}}};this.onSmsIMDNMessageSent=function(C){var E=this.getCall(C.callId);if(E===null){console.warn("Session received a SIP response for an unknown sms imdn message. Ignore it.");return}var F={from:C.from,imdnMessageID:C.imdnMessageID,dateTime:C.dateTime,status:C.status};console.info("call.to: "+E.to);console.info("evt.from: "+C.from);this.callback.onSmsIMDNMessageSent(F);for(var D=0;D<this.calls.length;D++){if(this.calls[D].callId===E.callId){this.calls.splice(D,1);break}}};this.onSmsIMDNMessageFailed=function(C){console.info("call onSmsIMDNMessageFailed");var E=this.getCall(C.callId);var G=C.imdnMessageID;if(E===null){console.warn("Session received a SIP response for an unknown sms imdn message. Ignore it.");return}var F={from:C.from,imdnMessageID:C.imdnMessageID,dateTime:C.dateTime,status:C.status};console.info("call.to: "+E.to);console.info("evt.from: "+C.from);this.callback.onSmsIMDNMessageFailed(F);for(var D=0;D<this.calls.length;D++){if(this.calls[D].callId===E.callId){this.calls.splice(D,1);break}}};this.onPresenceNotify=function(C,D){this.callback.onPresenceNotify(C,D)};this.onSubscribePresenceSuccess=function(D){var C=new q(D.from,D.to,D.callId,D.cSeq,D.expires);this.presenceSubscriptions.push(C);if(typeof this.callback.onSubscribePresenceSuccess==="function"){this.callback.onSubscribePresenceSuccess(D)}};this.onSubscribePresenceFailed=function(C){if(typeof this.callback.onSubscribePresenceFailed==="function"){this.callback.onSubscribePresenceFailed(C)}};this.onGetPresenceSuccess=function(D){var C=new q(D.from,D.to,D.callId,D.cSeq,D.expires);this.presenceSubscriptions.push(C);if(typeof this.callback.onGetPresenceSuccess==="function"){this.callback.onGetPresenceSuccess(D)}};this.onGetPresenceFailed=function(C){if(typeof this.callback.onGetPresenceFailed==="function"){this.callback.onGetPresenceFailed(C)}};this.onUpdatePresenceSuccess=function(C){if(typeof this.callback.onUpdatePresenceSuccess==="function"){this.callback.onUpdatePresenceSuccess(C)}};this.onUpdatePresenceFail=function(C){if(typeof this.callback.onUpdatePresenceFail==="function"){this.callback.onUpdatePresenceFail(C)}};this.getPresenceSubscription=function(G,D,F){var E=null,C;for(C=0;C<this.presenceSubscriptions.length;C++){if(this.presenceSubscriptions[C].presentity.indexOf(G)!=-1&&this.presenceSubscriptions[C].callId.match(D)){E=this.presenceSubscriptions[C];if(E.expires===0){this.presenceSubscriptions.splice(C,1)}break}}return E};this.getCall=function(E){var D=null,C;for(C=0;C<this.calls.length;C+=1){if(this.calls[C].callId===E){D=this.calls[C];break}}return D};this.setSessionStatus=function(D,E){this.sessionStatus=D;var C={name:this.sessionStatus};if(E){this.callback.onError(E,C)}else{if(D===SessionStatus.CONNECTED){this.callback.onStatus(this.sessionStatus,C);this.callback.onConnected();if((this.calls[0])&&(this.wsRestoreInProgress)){if(this.config.providerConfig.sendRegisterOnRecovery){console.log("Going to auto answer mode ");this.wsRestoreInProgress=false;this.autoAnswerMode=true;setTimeout(function(){x.autoAnswerMode=false},this.config.providerConfig.autoAnswerTime*1000)}else{console.log("Service Continuity: Call exists... create a new offer");this.calls[0].callDirection=this.calls[0].CallDirection.OUTGOING;console.log("setting restoredCall to true");this.calls[0].restoredCall=true;this.wsRestoreInProgress=false;this.calls[0].createSDPOffer()}}}else{if(D===SessionStatus.DISCONNECTED){this.callback.onStatus(this.sessionStatus,C);this.callback.onDisconnected()}else{this.callback.onStatus(this.sessionStatus,C)}}}};this.incomingSessionEvent=function(C){var D=this.getCall(C.callId);if(!D){if(C.name==="invitation"){D=this.callback.createCall(null,null,this);D.getCallImp().incomingCallSessionEvent(C)}else{if(C.name==="message"){if(C.contentType==="message/cpim"){if(C.bodyContentType==="message/imdn+xml"){this.adapter.sendSmsIMDNMessageResponse(C.uaCall,200);var E={callId:C.callId,from:C.from,message:C.message,imdnMessageID:C.imdnMessageID,dateTime:C.dateTime,status:C.status};this.callback.onIncomingSmsIMDNMessage(E)}else{this.adapter.sendSmsMessageResponse(C.uaCall,200);this.callback.onIncomingSmsMessage(C)}return}this.adapter.sendPageModeChatMessageResponse(C.uaCall,200);if(C.contentType==="application/im-iscomposing+xml"&&w(C.message)){return}this.callback.onIncomingPageModeChat(C)}else{console.warn("no call found for "+C.name);return}}}else{if(C.name==="invitation"){D.incomingCallSessionEvent(C)}else{console.warn("unknown event")}}}}function q(B,A,y,z,x){this.watcher=B;this.presentity=A;this.callId=y;this.cSeq=z;this.expires=x}function m(B,x,z,A){this.callback=A;this.CallStatus={};this.CallStatus.IDLE="idle";this.CallStatus.PREPARING_OFFER="prep-offer";this.CallStatus.CALLING="calling";this.CallStatus.RINGING="ringing";this.CallStatus.PREPARING_ANSWER="prep-answer";this.CallStatus.ACCEPTED="accepted";this.CallStatus.CONFIRMED="confirmed";this.CallStatus.CANCELING="canceling";this.CallStatus.CANCELED="canceled";this.CallStatus.FAILED="failed";this.CallStatus.REFUSED="refused";this.CallStatus.TERMINATING="terminating";this.CallStatus.HOLD="hold";this.CallStatus.REMOTE_HOLD="remote hold";this.CallStatus.UPGRADING="upgrading";this.CallStatus.DOWNGRADING="downgrading";this.CallDirection={};this.CallDirection.INCOMING="i";this.CallDirection.OUTGOING="o";this.MediaDirection={};this.MediaDirection.SENDRECV="sendrecv";this.MediaDirection.SENDONLY="sendonly";this.MediaDirection.RECVONLY="recvonly";this.MediaDirection.INACTIVE="inactive";this.managedStreams=[];this.iceServers=null;this.pc=null;this.session=z;this.callStatus=this.CallStatus.IDLE;this.callStatusExternal=this.CallStatus.DISCONNECTED;this.callDirection=undefined;this.sdpOffer=undefined;this.callId=undefined;this.activeCall=false;this.uaCall=null;this.targetAOR=(typeof B=="string"?[B]:B);this.mediaTypes=x;this.oldMediaTypes=x;this.audioMediaDirection=undefined;this.videoMediaDirection=undefined;this.waitingIce=false;this.remotePeerIds=[];this.isTiledVideo=false;this.dtmfSipBuffer="";this.dtmfSip=(this.session.config.providerConfig.dtmf!=="inband");this.dtmfInband=(this.session.config.providerConfig.dtmf!=="sip");this.holdPending=false;this.resumePending=false;this.telephoneEvent=null;this.crypto=null;this.inviteCount=0;this.initialHoldOffer=false;this.currNonZeroPortCount=0;this.MSID="undefined";this.restoredCall=false;this.localAudioCodecs=[];this.localVideoCodecs=[];this.pullCallInfo=undefined;this.bodilessReInvite=false;this.videoIceUfrag="";this.videoIcePwd="";this.dataChannel=null;var y=this;this.remoteIdentities=function(){return this.remotePeerIds};this.getpc=function(){return this.pc};this.dumpCallInfo=function(){var F=this.getpc();var C,G;C=F.getRemoteStreams();console.log("Number of remote streams: "+C.length);for(G=0;G<C.length;G++){console.log("Stream #"+G);console.log(C[G]);var E,D;E=C[G].getAudioTracks();console.log("# of audio tracks: "+E.length);for(D=0;D<E.length;D++){console.log("track #"+D+", info:");console.log(E[D])}E=C[G].getVideoTracks();console.log("# of video tracks: "+E.length);for(D=0;D<E.length;D++){console.log("track #"+D+", info:");console.log(E[D])}console.log("\n-- End of output for Stream #"+G)}};this.addStream=function(C){var F,E;if(this.callStatus===this.CallStatus.HOLD||this.callStatus===this.CallStatus.REMOTE_HOLD){console.debug("addStream() impossible during call hold");return false}if((this.callStatus===this.CallStatus.CONFIRMED)||(this.callStatus===this.CallStatus.ACCEPTED)){this.callDirection=this.CallDirection.OUTGOING}if(this.pc){F=this.pc.getLocalStreams();if(F.length>0){this.pc.removeStream(F[0]);console.debug("addStream() removeStream: "+F[0].id+"/"+F.length)}}if(this.session.config.providerConfig.persistentPC===false){console.debug("addStream() close peerconnection");if(this.pc){this.pc.close();this.pc=null}}if(!this.pc){console.debug("addStream() create new PeerConnection");this.createPeerConnection()}this.pc.addStream(C.stream());this.mediaTypes=C.type();this.dtmfSender=null;if(this.dtmfInband){E=C.stream().getAudioTracks();if(E.length>0){try{this.dtmfSender=this.pc.createDTMFSender(E[0])}catch(D){this.dtmfSender=null;console.warn("Call.connect() inband DTMF not supported by browser")}}}return true};this.connect=function(){if(this.callStatus===this.CallStatus.HOLD||this.callStatus===this.CallStatus.REMOTE_HOLD){console.debug("Call.connect() impossible during call hold");return false}console.debug("Call.connect()");console.debug("---------- The Call Connect parameters begin ----------");for(var C=0;C<this.targetAOR.length;C++){console.debug("targetAOR: "+this.targetAOR[C])}console.debug("oldMediaTypes: "+this.oldMediaTypes);console.debug("mediaTypes: "+this.mediaTypes);console.debug("---------- The Call Connect parameters end ----------");if(this.pc){if(this.callDirection===this.CallDirection.INCOMING){this.accept()}else{this.sendCallOffer()}}else{console.warn("Call.connect() Peer connection is not created")}return true};this.disconnect=function(){console.debug("Call.disconnect() status: "+this.callStatus);this.session.needAuthOnReRegister=false;if((this.callStatus===this.CallStatus.IDLE)||this.callStatus===this.CallStatus.RINGING||this.callStatus==this.CallStatus.PREPARING_OFFER){if(this.callDirection===this.CallDirection.OUTGOING){this.session.adapter.cancelCallSession(this);this.callStatus=this.CallStatus.CANCELING}else{if(this.callDirection===this.CallDirection.INCOMING){this.session.adapter.rejectCallSession(this);this.callStatus=this.CallStatus.REFUSED;this.callStatusExternal=CallStatus.REJECTED}}}else{console.debug("Call.disconnect() [activeCall = "+this.activeCall+", callStatus = "+this.callStatus+", callDirection = "+this.callDirection+"]");if(this.callDirection===this.CallDirection.INCOMING&&!this.activeCall){this.session.adapter.rejectCallSession(this);this.callStatus=this.CallStatus.REFUSED;this.callStatusExternal=CallStatus.REJECTED}else{this.callStatus=this.CallStatus.FAILED;this.callStatusExternal=CallStatus.DISCONNECTED;this.session.adapter.terminateCallSession(this)}}};this.reject=function(){console.debug("Call.reject()");if(this.activeCall===true){this.callStatus=this.CallStatus.PREPARING_ANSWER;this.markActionNeeded();return}this.callStatus=this.CallStatus.REFUSED;this.callStatusExternal=CallStatus.REJECTED;this.session.adapter.rejectCallSession(this)};this.remoteStreams=function(){return this.managedStreams};this.getStatus=function(){return this.callStatusExternal};this.getMediaTypes=function(){return this.mediaTypes};this.addParticipant=function(C){this.session.adapter.doRefer(this,C,true)};this.removeParticipant=function(C){this.session.adapter.doRefer(this,C,false)};this.sendDTMF=function(C){var E=this.session.config.providerConfig.dtmfDuration;var F=this.session.config.providerConfig.dtmfGap;console.debug("sendDTMF dtmfDuration: "+E);console.debug("sendDTMF dtmfGap: "+F);console.debug("sendDTMF "+C);if(this.activeCall===true){if(this.dtmfInband){if(this.dtmfSender){try{this.dtmfSender.insertDTMF(C,E,F)}catch(D){console.error("Error from insertDTMF: "+D.message)}}else{console.error("Could not send inband DTMF")}}if(this.dtmfSip){if(this.dtmfSipBuffer.length>0){this.dtmfSipBuffer+=","+C}else{this.dtmfSipBuffer=C;this.sendDTMFBuffer()}}}};this.sendDTMFBuffer=function(){var D=y.session.config.providerConfig.dtmfGap;console.debug("sendDTMFBuffer dtmfGap: "+D);var C;if(y.dtmfSipBuffer.length>0){C=y.dtmfSipBuffer[0];y.dtmfSipBuffer=y.dtmfSipBuffer.substring(1);if(C===","){D=2000}else{y.session.adapter.sendDTMFSip(y,C)}if(y.dtmfSipBuffer.length>0){setTimeout(y.sendDTMFBuffer,D)}}};this.transfer=function(C){this.session.adapter.doRefer(this,C,true)};this.startVideo=function(){this.updateCall({audio:undefined,video:"sendrecv"})};this.stopVideo=function(){this.updateCall({audio:undefined,video:"none"})};this.updateCall=function(D){var C=false;var F=false;var E=false;if(D.audio!==this.audioMediaDirection){console.debug("updateCall() audio: "+this.audioMediaDirection+" => "+D.audio);C=true;this.audioMediaDirection=D.audio}if(D.video!==this.videoMediaDirection){console.debug("updateCall() video: "+this.videoMediaDirection+" => "+D.video);C=true;this.videoMediaDirection=D.video}if(D.audio===undefined){F=false}else{F=true}if(D.video===undefined){E=false}else{E=true}if(F===true){if(E===true){this.mediaTypes="audio,video"}else{this.mediaTypes="audio"}}else{if(E===true){this.mediaTypes="video"}else{this.mediaTypes=""}}if(C){this.sendCallOffer()}};this.sendCallOffer=function(){var C;console.debug("Call.invite(): oldMediaTypes="+this.oldMediaTypes+"; current mediaTypes="+this.mediaTypes);this.callDirection=this.CallDirection.OUTGOING;if(this.targetAOR.length>1){this.isTiledVideo=this.mediaTypes.indexOf("video")>-1}for(C=0;C<this.targetAOR.length;C+=1){this.remotePeerIds.push({id:this.targetAOR[C]})}this.markActionNeeded()};this.hold=function(C){if(this.callStatus===this.CallStatus.HOLD||this.callStatus===this.CallStatus.REMOTE_HOLD){console.debug("Call.hold() impossible, already on hold");return false}console.debug("Call.hold() type = "+C);if(C===undefined){C="inactive"}if(C!="sendonly"&&C!="inactive"){console.debug("Call.hold invalid type = ",+C);return false}var D={};if(this.mediaTypes.indexOf("audio")!==-1){D.audio=C}if(this.mediaTypes.indexOf("video")!==-1){D.video=C}this.holdPending=true;this.updateCall(D);return true};this.resume=function(){if(this.callStatus!==this.CallStatus.HOLD){console.debug("Call.resume() impossible, no local hold");return false}console.debug("Call.resume()");if((this.mediaTypes.indexOf("video")===-1)&&(this.mediaTypes.indexOf("audio")===-1)){console.debug("Call.hold invalid mediaTypes=",+this.mediaTypes);return false}this.resumePending=true;var C={};if(this.mediaTypes.indexOf("audio")!==-1){C.audio="sendrecv"}if(this.mediaTypes.indexOf("video")!==-1){C.video="sendrecv"}this.updateCall(C);return true};this.markActionNeeded=function(){this.actionNeeded=true;var C=this;this.doLater(function(){C.onStableStatus();C.dumpCallInfo()})};this.doLater=function(C){setTimeout(C,1)};this.determineWaitingIce=function(C){var E=C.sdp.split("\r\nm=");var D;if(E.length>=2){for(D=1;D<E.length;D++){if(E[D].indexOf(" 0 RTP/")===-1&&E[D].indexOf("\r\na=candidate:")===-1){console.trace("m= line "+D+" does not have ice-candidates.. setting self.waitingIce to true");y.waitingIce=true;break}else{console.trace("m= line "+D+" already has ice-candidates or m= line has port zero")}}}else{console.trace("ERROR: local SDP does not have any m= lines. mLines.length="+E.length)}};this.mediaTypeFromSdp=function(D){var I=undefined,H,G;var C=(/a=dcsa:[0-9]*:[0-9]* accept-types:(.*)\r\n/).exec(D);var E=null;var K=null;if(C){C=C[1]}console.log("parsed accept-types: "+C+", type: "+typeof C);var J=(/a=dcsa:[0-9]*:[0-9]* file-selector:name:"(.*)" type:(.*)\r\n/).exec(D);if(J){E=decodeURIComponent(J[1]);K=J[2];console.log("parsed file-selector name: "+E+", type: "+K)}if(D.search("m=audio")!==-1){if((D.search("m=video")!==-1)&&(D.search("m=video 0")===-1)){I="audio,video"}else{I="audio"}}else{if(D.search("m=video")!==-1){I="video"}else{if(D.search("m=application")!==-1){if(E===null){I="chat"}else{if(C.search("image")!==-1){I="imageshare"}else{var F=(/\.(.*)/).exec(E)[1].toLowerCase();console.log("fileExtension: "+F);if(F.match(/jpg|bmp|gif|png/)){I="imageshare"}else{I="filetransfer"}}}console.log("parsed mediatypes: "+I);if(!this.msrpToPath&&(this.callStatus===this.CallStatus.IDLE||this.callStatus===this.CallStatus.ACCEPTED)){this.msrpToPath=(/a=dcsa:[0-9]*:[0-9]* path:([^\s]*)\r\n/).exec(D);if(this.msrpToPath){this.msrpToPath=this.msrpToPath[1]}else{this.msrpToPath=undefined}}H=(/a=dcsa:[0-9]*:[0-9]* file-selector:(.*)\r\n/).exec(D);if(H){H=H[1].split(" ");this.msrpFileProperties={};for(G=0;G<H.length;G++){if(H[G].indexOf(":")>-1){this.msrpFileProperties[H[G].split(":")[0]]=H[G].split(":")[1]}}if(this.msrpFileProperties.name){this.msrpFileProperties.name=E}}}else{I=undefined}}}return I};this.setMediaTypeFromSdp=function(D){var C=this.mediaTypeFromSdp(D);this.mediaTypes=C;this.oldMediaTypes=C};this.setLDsuccessOnCreateOfferSuccess=function(){console.debug("setLDsuccessOnCreateOfferSuccess(): setLocalDescription success: restoredCall = "+y.restoredCall);y.callStatus=y.CallStatus.PREPARING_OFFER;y.callStatusExternal=CallStatus.CONNECTING;y.sdpOffer=sdpOffer.sdp;y.localAudioCodecs=y.getCodecsFromSDP(y.sdpOffer,"audio");y.localVideoCodecs=y.getCodecsFromSDP(y.sdpOffer,"video");y.markActionNeeded()};this.setLDsuccessOnCreateAnswerSuccess=function(){console.debug("setLDsuccessOnCreateAnswerSuccess(): setLocalDescription success: restoredCall = "+y.restoredCall);y.callStatus=y.CallStatus.PREPARING_ANSWER;y.markActionNeeded()};this.setLDfailure=function(C){console.error("setLocalDescription failure: "+C);y.errorCallback(C)};this.createAnswerSuccess=function(E){var C;var D;console.debug("unmodified local SDP from createAnswer:\n"+E.sdp);E=y.updateSDPCrypto(E,"answer");E=y.updateSDPssrc(E,"answer");E=y.updateSDPcodecs(E,"answer","audio",y.session.config.providerConfig.audioCodecs);E=y.updateSDPcodecs(E,"answer","video",y.session.config.providerConfig.videoCodecs);E=y.updateSDPOfferMediaBundle(E,"answer");E=y.updateSDPBandwidth(E,"answer");y.pc.setLocalDescription(E,y.setLDsuccessOnCreateAnswerSuccess,y.setLDfailure);y.localAudioCodecs=y.getCodecsFromSDP(E.sdp,"audio");y.localVideoCodecs=y.getCodecsFromSDP(E.sdp,"video");C=y.getSDPattrValue(E.sdp,"video","ice-ufrag:");D=y.getSDPattrValue(E.sdp,"video","ice-pwd:");if((C!=y.videoIceUfrag)||(D!=y.videoIcePwd)){console.log("new ICE Params on createAnswer:\n\tprior videoIceUfrag = "+y.videoIceUfrag+"\t  New videoIceUfrag = "+C+"\tprior videoIcePwd   = "+y.videoIcePwd+"\t  New videoIcePwd   = "+D);y.videoIceUfrag=C;y.videoIcePwd=D}console.trace("createAnswerSuccess() setLocalDescription sdp = "+E.sdp);y.determineWaitingIce(E)};this.createAnswerFailure=function(C){console.error("createAnswer failure: "+C);y.callStatus=y.CallStatus.FAILED;y.callStatusExternal=CallStatus.DISCONNECTED;y.errorCallback(C);y.markActionNeeded()};this.setRDsuccess=function(){console.debug("setRemoteDescription success");y.dumpCallInfo()};this.setRDfailure1=function(C){console.error("setRemoteDescription failure: "+C);y.callStatus=y.CallStatus.FAILED;y.callStatusExternal=CallStatus.DISCONNECTED;y.errorCallback(C)};this.setRDfailure2=function(C){console.error("setRemoteDescription failure: "+C);y.errorCallback(C)};this.getNonZeroPortCount=function(E){var D,F,C;D=E.split("\r\nm=");C=0;for(F=1;F<D.length;F++){port=D[F].match(/ \d* /);if(port!=0){C=C+1}}return C};this.updateMSID=function(F){var D,H;var C;var J;switch(y.session.config.providerConfig.msidHandling){case"0":console.debug("updateMSID(), msidHandling is 'Strip Incoming MSID (default)'.\n");F=F.replace(/a=msid-semantic.*\r\n/g,"");F=F.replace(/a=ssrc:.* label:.*\r\n/g,"");console.debug("a=ssrc.* label:.* -removed");F=F.replace(/a=ssrc:.* mslabel:.*\r\n/g,"");console.debug("a=ssrc.* mslabel:.* -removed");return F;case"1":break;case"2":console.debug("updateMSID() no change, msidHandling is 'None, no applicable handling'.\n");return F;default:console.debug("updateMSID() no change, msidHandling is 'Undefined'  ("+y.session.config.providerConfig.msidHandling+")");return F}console.debug("updateMSID(), msidHandling is 'Generate/Replace Incoming MSID'.\n");if(!F.match(/ssrc:\d* /)){console.log("No ssrc lines... so not adding msid");return F}F=F.replace(/a=msid-semantic.*\r\n/g,"");console.debug("a=msid-semantic removed");F=F.replace(/a=ssrc:.* label:.*\r\n/g,"");console.debug("a=ssrc.* label:.* -removed");F=F.replace(/a=ssrc:.* mslabel:.*\r\n/g,"");console.debug("a=ssrc.* mslabel:.* -removed");F=F.replace(/a=msid:.*\r\n/g,"");console.debug("a=msid.* -removed");F=F.replace(/a=ssrc:.* msid:.*\r\n/g,"");console.debug("a=ssrc.* msid:.* -removed");D=F.split("\r\nm=");C=this.getNonZeroPortCount(F);if(this.currNonZeroPortCount!=C){console.debug("currNonZeroPortCount="+this.currNonZeroPortCount+"!= newPortCount="+C+". Generating new MSID");this.currNonZeroPortCount=C;J="orca-wms-id-"+Math.round(Math.random()*100000000000);this.MSID=J;console.debug("Using new MSID generated '"+J+"'")}else{J=this.MSID;console.debug("Using previous MSID '"+J+"'")}D[0]=D[0]+"\r\na=msid-semantic: WMS "+J;for(H=1;H<D.length;H++){var E,L,I;var K=new RegExp("\r\n$");E=D[H];I=E.match(/ssrc:\d* /);if(I){console.log("a=ssrc found.'"+I+"'");L=E.split("a=");msidline=I+"msid:"+J+" ";msidline=msidline+H+"\r\n";mslabelline=I+"mslabel:"+J+"\r\n";labelline=I+"label:"+H;var G;for(G=0;G<L.length;G++){if(L[G].match(/^ssrc:/)){if(K.test(L[G])==true){labelline=labelline+"\r\n"}else{L[G]=L[G]+"\r\n"}L.splice(G+1,0,msidline,mslabelline,labelline);console.debug("Adding msid at position "+G);break}}D[H]=L.join("a=")}}F=D.join("\r\nm=");return F};this.sdpHasDirection=function(E,J,C){var D,F,G,H=["\r\na=sendrecv","\r\na=sendonly","\r\na=recvonly","\r\na=inactive"];if(typeof E==="string"){for(F=0;F<H.length;F+=1){if(H[F].slice(4)===J){H.splice(F,1);break}}if(H.length===4){console.warn("sdpHasDirection() Invalid direction "+J);return false}function K(L){return(L.indexOf("\r\na="+J)>-1)}function I(L){return(L.indexOf(H[0])>-1||L.indexOf(H[1])>-1||L.indexOf(H[2])>-1)}D=E.split("\r\nm=");G=K(D[0])||(J==="sendrecv"&&!I(D[0]));if(D.length===1){if(C){return undefined}return G}if(!C&&!G&&I(D[0])){return false}for(F=1;F<D.length;F+=1){if(C){if(D[F].indexOf(C)===0){return(G?!I(D[F]):K(D[F]))}}else{if(G?I(D[F]):!K(D[F])){return false}}}if(C){return undefined}return true}return false};this.onStableStatus=function(){console.debug("Call.onStableStatus() [actionNeeded = "+this.actionNeeded+", waitingIce = "+this.waitingIce+", status = "+this.callStatus+", callDirection = "+this.callDirection+", activeCall = "+this.activeCall+"]");var F,D,E;if(this.actionNeeded){switch(this.callStatus){case this.CallStatus.IDLE:this.createSDPOffer();break;case this.CallStatus.PREPARING_OFFER:if(this.waitingIce){return}D=this.pc.localDescription.sdp;if(this.callDirection===this.CallDirection.INCOMING){D=this.updateSDPForDTLS(D,"outgoing");D=this.updateSDPCandidate(D,"answer");this.session.adapter.sendResponse(this,200,"OK",D)}else{D=this.updateSDPForDTLS(D,"outgoing");D=this.updateSDPCandidate(D,"offer");D=this.updateSDPDataChannel(D,"offer");this.session.adapter.createCallSession(this,this.targetAOR,D);this.callStatus=this.CallStatus.CALLING}break;case this.CallStatus.ACCEPTED:if(this.sdpOffer!==undefined){this.sdpOffer=this.updateSDPForTempWorkarounds(this.sdpOffer,"offer");var G=this.sdpOffer;G=G.replace(/\r\na=setup:passive/g,"");var C=this.sdpOffer.indexOf("m=video");if(C!==-1&&this.sdpOffer.indexOf("VP8")===-1){G=G.substring(0,C)}G=this.updateMSID(G);console.trace("onStableStatus() setRemoteDescription sdp = "+G);this.pc.setRemoteDescription(new RTCSessionDescription({type:"offer",sdp:G}),this.setRDsuccess,this.setRDfailure1);try{E=this;this.pc.createAnswer(this.createAnswerSuccess,this.createAnswerFailure)}catch(H){console.error("Call.onStableStatus() webkitRTCPeerConnection can not create a SDP answer, exception = "+H);E.callStatus=E.CallStatus.FAILED;E.callStatusExternal=CallStatus.DISCONNECTED;E.markActionNeeded()}}else{this.createSDPOffer()}break;case this.CallStatus.PREPARING_ANSWER:if(this.waitingIce){return}D=this.pc.localDescription.sdp;var C=D.indexOf("m=video");if(C===-1&&this.sdpOffer.indexOf("m=video")!==-1){D=D+"m=video 0 RTP/SAVPF 0\nc=IN IP4 0.0.0.0\n"}D=this.updateSDPForDTLS(D,"outgoing");D=this.updateSDPCandidate(D,"answer");D=this.updateSDPDataChannel(D,"answer");this.session.adapter.sendResponse(this,200,"OK",D);this.setMediaTypeFromSdp(D);break;case this.CallStatus.CONFIRMED:case this.CallStatus.HOLD:if(this.activeCall===false){this.activeCall=true}else{if((this.activeCall===true)&&(this.callDirection===this.CallDirection.OUTGOING)){this.createSDPOffer()}}break;case this.CallStatus.FAILED:if(this.activeCall===true){this.callStatus=this.CallStatus.CONFIRMED;this.callStatusExternal=CallStatus.CONNECTED}else{console.warn("call FAILED");if(this.callDirection===this.CallDirection.INCOMING){this.reject();this.errorCallback("call failed")}}break;case this.CallStatus.CALLING:case this.CallStatus.CANCELED:break;default:console.warn("Call.onStableStatus() Dazed and confused in state "+this.callStatus+", stopping here");break}}};this.onRTCPeerConnectionOnAddStream=function(C){console.debug("Call.onRTCPeerConnectionOnAddStream()");var D,E;D=orca.createManagedStream(C.stream);C.stream.onaddtrack=function(F){console.log("onaddtrack ",C.stream.getVideoTracks());var G,H;G=orca.createManagedStream(C.stream);y.managedStreams.push(G);H={name:CallStatus.ADDSTREAM}};y.managedStreams.push(D);this.callStatusExternal=CallStatus.ADDSTREAM;E={name:CallStatus.ADDSTREAM};y.callback.onAddStream(D,E)};this.onRTCPeerConnectionOnConnecting=function(C){console.debug("Call.onRTCPeerConnectionConnecting()")};this.onRTCPeerConnectionOnGatheringChange=function(C){console.debug("onRTCPeerConnectionOnGatheringChange()");if(C.currentTarget!==undefined){console.debug("onRTCPeerConnectionOnGatheringChange() evt.currentTarget.iceGatheringState = "+C.currentTarget.iceGatheringState);if(C.currentTarget.iceGatheringState==="complete"){if((y.callStatus===y.CallStatus.PREPARING_OFFER)||(y.callStatus===y.CallStatus.PREPARING_ANSWER)){y.waitingIce=false;y.markActionNeeded()}else{console.debug("onRTCPeerConnectionOnGatheringChange() Event reveived event is dropped")}}}};this.onRTCPeerConnectionOnIceCandidate=function(C){var D;if(C.candidate===null){console.debug("Call.onRTCPeerConnectionIceCandidate() end of candidates [status = "+y.callStatus+", callDirection = "+y.callDirection+", activeCall = "+y.activeCall+"]");if((y.callStatus===y.CallStatus.PREPARING_OFFER||y.callStatus===y.CallStatus.PREPARING_ANSWER)&&(!y.session.config.providerConfig.useFirstCandidate||!y.gotFirstCandidate)){y.gotFirstCandidate=true;y.waitingIce=false;y.markActionNeeded()}else{console.debug("Call.onRTCPeerConnectionOnIceCandidate() RTCPeerConnectionIceEvent received event is dropped")}}else{console.debug("Call.onRTCPeerConnectionIceCandidate() received candidate = "+C.candidate.candidate+" [status = "+y.callStatus+", callDirection = "+y.callDirection+", activeCall = "+y.activeCall+"]");if(y.session.config.providerConfig.useFirstCandidate&&!y.gotFirstCandidate&&(y.callStatus===y.CallStatus.PREPARING_OFFER||y.callStatus===y.CallStatus.PREPARING_ANSWER)){if(y.session.config.providerConfig.removeIPV6Candidates){D=C.candidate.candidate.split(" ");if(D[4]&&D[4].indexOf(":")<0){y.gotFirstCandidate=true;y.waitingIce=false;y.markActionNeeded()}}else{y.gotFirstCandidate=true;y.waitingIce=false;y.markActionNeeded()}}}};this.onRTCPeerConnectionOnNegotiationNeeded=function(C){console.debug("Call.onRTCPeerConnectionNegotiationNeeded()")};this.onRTCPeerConnectionOnOpen=function(C){console.debug("Call.onRTCPeerConnectionOnOpen()")};this.onRTCPeerConnectionOnRemoveStream=function(C){console.debug("Call.onRTCPeerConnectionRemoveStream()")};this.onRTCPeerConnectionOnStatusChange=function(C){console.debug("Call.onRTCPeerConnectionStatusChange() [readyStatus="+C.currentTarget.readyStatus+", iceStatus="+C.currentTarget.iceStatus+"]")};this.onDataChannelOnOpen=function(C){console.debug("Call.onDataChannelOnOpen()")};this.onDataChannelOnClose=function(C){console.debug("Call.onDataChannelOnClose()")};this.onDataChannelOnMessage=function(C){if(C.data instanceof File){console.debug("evt.data  is File")}else{if(C.data instanceof Blob){console.debug("evt.data  is Blob")}else{if(C.data instanceof ArrayBuffer){console.debug("evt.data  is ArrayBuffer")}else{if(C.data instanceof String){console.debug("evt.data  is String")}else{if(typeof C.data==="string"){console.debug("evt.data  is string")}else{console.debug("evt.data  is other : ")}}}}}console.debug("Call.onDataChannelOnMessage() message(length: "+C.data.length+"): "+C.data);if(C.data instanceof String||typeof C.data==="string"){console.log("Received data chan message is String.. doing callback directly");y.callback.onMessage(C.data)}else{console.log("Received data chan message is NOT string .. converting it to binary string");function D(G,H,F){var E=new FileReader();E.onload=function(I){H(I.target.result)};E.onerror=function(I){onFail(I.target.error)};E.readAsBinaryString(new Blob([G],{type:"application/octet-stream"}))}D(C.data,function(E){console.log("converted binary string (length: "+E.length+"), type '"+typeof E+"' "+E);y.callback.onMessage(E)},function(E){console.error("converting to binary string failed"+E)})}};this.createOfferSuccess=function(D){console.log("createOffer worked with new constraint style");console.debug("unmodified local SDP from createOffer:\n"+D.sdp);sdpOffer=y.updateSDPOfferMediaDirection(D,{audio:y.audioMediaDirection,video:y.videoMediaDirection});sdpOffer=y.updateSDPForTempWorkarounds(sdpOffer,"offer");sdpOffer=y.updateSDPCrypto(sdpOffer,"offer");sdpOffer=y.updateSDPssrc(sdpOffer,"offer");sdpOffer=y.updateSDPcodecs(sdpOffer,"offer","audio",y.session.config.providerConfig.audioCodecs);sdpOffer=y.updateSDPcodecs(sdpOffer,"offer","video",y.session.config.providerConfig.videoCodecs);sdpOffer=y.updateSDPOfferMediaBundle(sdpOffer,"offer");sdpOffer=y.updateSDPBandwidth(sdpOffer,"offer");if(y.bodilessReInvite){console.log("Making offer after Offerless Invite received.");y.bodilessReInvite=false}if((y.videoIceUfrag!="")&&(y.videoIcePwd!="")){var C=y.getSDPattrValue(sdpOffer.sdp,"video","ice-ufrag:");var F=y.getSDPattrValue(sdpOffer.sdp,"video","ice-pwd:");if((C!="")&&(F!="")&&(y.videoIceUfrag!=C)&&(y.videoIcePwd!=F)){console.log("sdpOffer.sdp Before ICE params replaced = \n"+sdpOffer.sdp+"\n\n");sdpOffer.sdp=y.replaceSDPattr(sdpOffer.sdp,"video","ice-ufrag:",y.videoIceUfrag);sdpOffer.sdp=y.replaceSDPattr(sdpOffer.sdp,"video","ice-pwd:",y.videoIcePwd);console.log("sdpOffer.sdp After ICE params replaced = \n"+sdpOffer.sdp+"\n\n")}}if(sdpOffer.sdp!==y.sdpOffer){console.debug("createOffer: "+y.oldMediaTypes+","+y.mediaTypes);if((y.oldMediaTypes&&y.oldMediaTypes.indexOf("video")!==-1)&&(y.mediaTypes.indexOf("video")===-1)){var E=sdpOffer.sdp.indexOf("m=video");if(E!==-1){console.debug("local SDP has m=video line but video is not needed now... adding m=video 0 line and removing existing m=video line");sdpOffer.sdp=sdpOffer.sdp.substring(0,E)}sdpOffer.sdp+="m=video 0 RTP/SAVPF 0\nc=IN IP4 0.0.0.0\n"}if(y.oldMediaTypes&&y.oldMediaTypes.indexOf("video")===-1&&(y.holdPending||y.resumePending)&&(y.mediaTypes.indexOf("video")===-1)){var E=sdpOffer.sdp.indexOf("m=video");if(E!==-1){console.debug("local SDP has m=video line but video is not needed now... removing existing m=video line");sdpOffer.sdp=sdpOffer.sdp.substring(0,E);sdpOffer.sdp+="m=video 0 RTP/SAVPF 0\nc=IN IP4 0.0.0.0\n"}else{console.debug("local SDP has not m=video line")}}y.determineWaitingIce(sdpOffer);if(y.restoredCall){sdpOffer=y.updateSDPForCallRecovery(sdpOffer,"offer")}console.trace("createSDPOffer() setLocalDescription sdp = "+sdpOffer.sdp);y.pc.setLocalDescription(sdpOffer,y.setLDsuccessOnCreateOfferSuccess,y.setLDfailure);return}console.debug("createSDPOffer() Not sending a new offer")};this.createOfferFailure=function(C){console.error("createOffer failure: "+C);y.errorCallback(C)};this.createSDPOffer=function(){console.debug("Call.createSDPOffer()");if(this.pc===null||this.restoredCall){console.log("Creating new peer connection");if(this.pc){pc_streams=this.pc.getLocalStreams();this.pc.close();this.pc=null}this.createPeerConnection();if(this.restoredCall){this.pc.addStream(pc_streams[0])}}var F,J,H,D=false,C=false,I;if(this.mediaTypes.indexOf("audio")!==-1){D=true}if(this.mediaTypes.indexOf("video")!==-1){C=true}J={audio:D,video:C};H={mandatory:{OfferToReceiveAudio:D,OfferToReceiveVideo:C}};console.debug("createSDPOffer(): oldMediaTypes="+this.oldMediaTypes+"; current mediaTypes="+this.mediaTypes);if(this.holdPending===false&&this.resumePending===false){if(this.mediaTypes.indexOf("audio")!==-1){this.audioMediaDirection=this.MediaDirection.SENDRECV}if(this.mediaTypes.indexOf("video")!==-1){this.videoMediaDirection=this.MediaDirection.SENDRECV}}try{this.pc.createOffer(this.createOfferSuccess,this.createOfferFailure,J)}catch(G){try{this.pc.createOffer(this.createOfferSuccess,this.createOfferFailure,H)}catch(E){console.error("Call.createSDPOffer() webkitRTCPeerConnection can not create a SDP offer, exception = "+E)}}};this.updateSDPCandidate=function(T,V){console.debug("updateSDPCandidate()");var D,Q,U,S,R,P,M,C,O,L,E,N,F=false,K=/^(audio|video|application) ([0-9]+)([^\r\n]*)/,J=/(\r\nc=[^\s]* )([^\s]*) ([^\s]*)/,I=/\r\na=candidate:[^\s]* [^\s]* UDP [^\s]* ([^\s]*) ([^\s]*)/gi,H=/\r\na=candidate:[^\r\n]*/g,G=/(\r\na=rtcp:)([^\s]*) ([^\s]*) ([^\s]*) ([^\s]*)/;if(RTCSessionDescription&&T instanceof RTCSessionDescription){D=T.sdp}else{if(window.SessionDescription&&T instanceof SessionDescription){D=T.toSdp()}else{D=T}}Q=D.split("\r\nm=");E=Q[0].match(J);for(U=1;U<Q.length;U+=1){if(this.session.config.providerConfig.removeIPV6Candidates){C=Q[U].match(H);if(C){for(S=0;S<C.length;S+=1){O=C[S].split(" ");if(O[4]&&O[4].indexOf(":")>-1){Q[U]=Q[U].replace(C[S],"");F=true}}if(F){P=G.exec(Q[U]);C=Q[U].match(I);if(P&&P[5].indexOf(":")>-1&&C&&C[1]){C=I.exec(C[1]);Q[U]=Q[U].replace(G,"$1"+C[2]+" $3 IP4 "+C[1])}}}}M=Q[U].match(K);if(M){M=M[2];P=Q[U].match(J);if(P){P=P[3];N=false}else{if(E){P=E[3];N=true}}if(P){L=false;C=Q[U].match(I);if(C){for(S=0;S<C.length;S+=1){O=C[S].split(" ");if(P===O[4]&&M===O[5]){L=true;break}}}if(!L){O=I.exec(Q[U]);if(O){P=O[1];M=O[2];R=(O[1].indexOf(":")>-1)?"IP6":"IP4";if(N){Q[U]=Q[U].replace(K,"$1 "+M+"$3"+(P===E[3]?"":E[0].replace(J,"$1"+R+" "+P)))}else{Q[U]=Q[U].replace(K,"$1 "+M+"$3").replace(J,"$1"+R+" "+P)}F=true}}}}}if(F){D=Q.join("\r\nm=");console.debug("updateSDPCandidate() SDP has been updated:"+D);if(RTCSessionDescription&&T instanceof RTCSessionDescription){return new RTCSessionDescription({type:V,sdp:D})}else{if(window.SessionDescription&&T instanceof SessionDescription){return new SessionDescription(D)}}return D}console.debug("updateSDPCandidate() SDP has not been updated");return T};this.updateSDPOfferMediaDirection=function(H,D){var E,G,F,C,I;if(RTCSessionDescription&&H instanceof RTCSessionDescription){E=H.sdp}else{if(window.SessionDescription&&H instanceof SessionDescription){E=H.toSdp()}else{E=H}}G=E;C=-1;I=false;if(D.audio!==undefined){C=E.indexOf("a=sendrecv");if(C===-1){C=E.indexOf("a=sendonly");if(C===-1){C=E.indexOf("a=recvonly");if(C===-1){C=E.indexOf("a=inactive")}}}if(C!==-1){G=E.substring(0,C);G=G+"a="+D.audio;G=G+E.substring(C+10);I=true}}if(D.video!==undefined){C=E.lastIndexOf("a=sendrecv");if(C===-1){C=E.lastIndexOf("a=sendonly");if(C===-1){C=E.lastIndexOf("a=recvonly");if(C===-1){C=E.indexOf("a=inactive")}}}if(C!==-1){F=G.substring(0,C);F=F+"a="+D.video;F=F+G.substring(C+10);I=true}}else{F=G}if(I===true){if(RTCSessionDescription&&H instanceof RTCSessionDescription){return new RTCSessionDescription({type:"offer",sdp:F})}else{if(window.SessionDescription&&H instanceof SessionDescription){return new SessionDescription(F)}}return F}console.debug("Call.updateSDPOfferMediaDirection() medias = "+D,", SDP has not been updated)");return H};this.updateSDPOfferMediaBundle=function(E,G){var D,F,C;if(y.session.config.providerConfig.bundle==true){console.debug("updateSDPOfferMediaBundle() no change, bundle is true.\n");return E}else{console.debug("updateSDPOfferMediaBundle() entry.\n")}if(RTCSessionDescription&&E instanceof RTCSessionDescription){D=E.sdp}else{if(window.SessionDescription&&E instanceof SessionDescription){D=E.toSdp()}else{D=E}}F=false;C=D.indexOf("a=group:BUNDLE audio video");if(C!==-1){F=true;D=D.replace("a=group:BUNDLE audio video\r\n","")}else{C=D.indexOf("a=group:BUNDLE audio");if(C!==-1){F=true;D=D.replace("a=group:BUNDLE audio\r\n","")}else{C=D.indexOf("a=group:BUNDLE video");if(C!==-1){F=true;D=D.replace("a=group:BUNDLE video\r\n","")}}}if(F===true){if(RTCSessionDescription&&E instanceof RTCSessionDescription){return new RTCSessionDescription({type:G,sdp:D})}else{if(window.SessionDescription&&E instanceof SessionDescription){return new SessionDescription(D)}}return D}console.debug("updateSDPOfferMediaBundle() SDP has not been updated)");return E};this.updateSDPCrypto=function(E,G){console.debug("updateSDPCrypto()");var D,F,C;if(RTCSessionDescription&&E instanceof RTCSessionDescription){D=E.sdp}else{if(window.SessionDescription&&E instanceof SessionDescription){D=E.toSdp()}else{D=E}}F=false;if(this.session.config.providerConfig.crypto.toLowerCase()!=="dtls-srtp"){C=D.indexOf("a=crypto:0 ");if(C!==-1){F=true;if(D.indexOf("a=crypto:1")===-1){D=D.replace(/a=crypto:0/g,"a=crypto:1")}else{D=D.replace(/a=crypto:0.*\r\n/g,"")}}if(G==="offer"){D=D.replace(/a=fingerprint.*\r\n/g,"");D=D.replace(/a=setup:actpass\r\n/g,"");F=true}}if(F===true){if(RTCSessionDescription&&E instanceof RTCSessionDescription){return new RTCSessionDescription({type:G,sdp:D})}else{if(window.SessionDescription&&E instanceof SessionDescription){return new SessionDescription(D)}}return D}console.debug("updateSDPCrypto() SDP has not been updated)");return E};this.updateSDPssrc=function(D,H){var C;var E;var G=false;if(y.session.config.providerConfig.stripExtraSSRC==false){console.debug("updateSDPssrc() no change, stripExtraSSRC is false.\n");return D}else{console.debug("updateSDPssrc() entry.\n")}if(RTCSessionDescription&&D instanceof RTCSessionDescription){E=D.sdp}else{if(window.SessionDescription&&D instanceof SessionDescription){E=D.toSdp()}else{E=D}}if((E.search("m=video")!=-1)&&(E.search("a=ssrc-group:FID")!=-1)){console.debug("Removing a=fmtp:96 apt=100, a=ssrc-group and 1st set of ssrc for video\n");E=E.replace("a=rtpmap:96 rtx/90000\r\na=fmtp:96 apt=100\r\n","");E=E.replace("100 116 117 96\r\n","100 116 117\r\n");E=E.replace(/a=ssrc-group:FID.*\r\n/,"");E=this.removeSDPattr(E,"video","ssrc:",1,4);G=true}if((E.search("m=video")!=-1)&&(E.search("a=rtpmap:96 rtx/90000")!=-1)){console.debug("rtx found. Removing a=fmtp:96 apt=100\n");E=E.replace("a=rtpmap:96 rtx/90000\r\na=fmtp:96 apt=100\r\n","");E=E.replace("100 116 117 96\r\n","100 116 117\r\n");G=true}E=E.split("\r\nm=");for(C=0;C<E.length;C++){if(E[C].indexOf("audio")==0){var F=E[C].split("a=ssrc:");if(F.length>5){F.splice(1,F.length-5);E[C]=F.join("a=ssrc:");G=true}break}}E=E.join("\r\nm=");if(G===true){console.debug("updateSDPssrc(), SDP has been updated.");if(RTCSessionDescription&&D instanceof RTCSessionDescription){return new RTCSessionDescription({type:H,sdp:E})}else{if(window.SessionDescription&&D instanceof SessionDescription){return new SessionDescription(E)}}return E}console.debug("updateSDPssrc(), SDP has not been updated.");return D};this.removeSDPattr=function(C,K,I,J,H){var G,F,E,D;if(H<=0){H=1000}C=C.split("\r\nm=");if(K=="session"){E=0}else{E=C.length;for(G=1;G<C.length;++G){if(C[G].indexOf(K+" ")==0){E=G;break}}if(E==C.length){console.debug("removeSDPattr() no "+K+" stream found.\n");C=C.join("\r\nm=");return C}}D=C[E];D=D.split("\r\n");for(G=0;G<D.length;++G){if(D[G].indexOf("a="+I)==0){if(J>1){--J;continue}D.splice(G,1);--G;--H;if(H==0){break}}}C[E]=D.join("\r\n");C=C.join("\r\nm=");return C};this.getSDPattrValues=function(C,L,J,K,H){var G,F,E,D;var I;var M=[];if(H<=0){H=1000}C=C.split("\r\nm=");if(L=="session"){E=0}else{E=C.length;for(G=1;G<C.length;++G){if(C[G].indexOf(L+" ")==0){E=G;break}}if(E==C.length){console.debug("getSDPattrValues() no "+L+" stream found.\n");C=C.join("\r\nm=");return M}}D=C[E];D=D.split("\r\n");for(G=0;G<D.length;++G){if(D[G].indexOf("a="+J)==0){if(K>1){--K;continue}I=D[G].substr(D[G].indexOf(":")+1);M.push(I);--H;if(H==0){break}}}C[E]=D.join("\r\n");C=C.join("\r\nm=");return M};this.getSDPattrValue=function(F,D,C){var E=this.getSDPattrValues(F,D,C,1,1);if(E.length!=0){return E[0]}else{return""}};this.replaceSDPattr=function(C,K,J,D){var I,H,F,G;C=C.split("\r\nm=");if(K=="session"){F=0}else{F=C.length;for(I=1;I<C.length;++I){if(C[I].indexOf(K+" ")==0){F=I;break}}if(F==C.length){console.debug("replaceSDPattr() no "+K+" stream found.\n");C=C.join("\r\nm=");return C}}G=C[F];G=G.split("\r\n");for(I=0;I<G.length;++I){if(G[I].indexOf("a="+J)==0){var E=G[I].substring(0,G[I].indexOf(":")+1);G[I]=E+D}}C[F]=G.join("\r\n");C=C.join("\r\nm=");return C};this.getCodecsFromSDP=function(D,K){var H,G,F;var E=[];var I=new RegExp("\r\n$");console.debug("getCodecsFromSDP():\n\tmediaType = "+K+"\n");D=D.split("\r\nm=");for(H=0;H<D.length;H++){if(D[H].indexOf(K)==0){var M=D[H].split("\r\n");var L=M[0].split(" ");for(G=3;G<L.length;G++){if(isNaN(L[G])==false){var J="";var C="a=rtpmap:"+L[G]+" ";for(F=0;F<M.length;++F){if(M[F].indexOf(C)==0){break}}if(F<M.length){J=M[F].substring(C.length);if(I.test(J)){J=J.substr(0,J.length-2)}}else{J=y.getCodecFromStaticPayloadType(L[G])}if(J!=""){console.debug("PT("+L[G]+"): "+J+" FOUND in availableCodecSet.\n");E.push({payloadType:L[G],codec:J})}}}break}}for(H=0;H<E.length;H++){console.debug("codecArray["+H+"] = "+E[H].payloadType+":"+E[H].codec+"\n")}return E};this.getCodecsFromArray=function(D){var C;var E="";for(C=0;C<D.length;++C){if(C>0){E=E+","}E=E+D[C].codec}return E};this.getCodecFromStaticPayloadType=function(D){var C;switch(D){case (0):C="PCMU/8000";break;case (8):C="PCMA/8000";break;case (9):C="G722/8000";break;case (13):C="CN/8000";break;case (18):C="G729/8000";break;default:C="";break}return C};this.updateSDPForCallRecovery=function(D,E){var C;console.debug("updateSDPForCallRecovery():\n\tsdpType = "+E+"\n\tlocalAudioCodecs count = "+y.localAudioCodecs.length+"\n\tlocalVideoCodecs count = "+y.localVideoCodecs.length);if((y.localAudioCodecs.length==0)&&(y.localVideoCodecs.length==0)){return D}C=y.getCodecsFromArray(y.localAudioCodecs);D=y.updateSDPcodecs(D,E,"audio",C);D=y.updateSDPpayloadTypes(D,E,"audio",y.localAudioCodecs);C=y.getCodecsFromArray(y.localVideoCodecs);D=y.updateSDPcodecs(D,E,"video",C);D=y.updateSDPpayloadTypes(D,E,"video",y.localVideoCodecs);console.debug("updateSDPForCallRecovery() completed. SDP :\n"+D.sdp+"\n");return D};this.updateSDPpayloadTypes=function(L,F,N,Q){var J,H;var D;var I=false;var M=[];var C=[];var E=[];var K;console.debug("updateSDPpayloadTypes():\n\tsdpType = "+F+"\n\tmediaType = "+N+"\n\tnewPTArray count = "+Q.length+"\n");if(Q.length==0){return L}if(RTCSessionDescription&&L instanceof RTCSessionDescription){D=L.sdp}else{if(window.SessionDescription&&L instanceof SessionDescription){D=L.toSdp()}else{D=L}}M=y.getCodecsFromSDP(D,N);C.length=0;for(J=0;J<M.length;++J){for(H=0;Q.length;++H){if(M[J].codec==Q[H].codec){if(M[J].payloadType!=Q[H].payloadType){C.push({codec:M[J].codec,oldPT:M[J].payloadType,newPT:Q[H].payloadType})}break}}}if(C.length==0){console.debug("updateSDPpayloadTypes(): No change in "+N+" payloadTypes.\n");return L}else{for(J=0;J<128;++J){E.push({substitutionNeeded:false,newPT:J.toString()})}for(J=0;J<C.length;J++){console.debug("codecPTmap["+J+"] = "+C[J].codec+":"+C[J].oldPT+":"+C[J].newPT+"\n");E[parseInt(C[J].oldPT)].substitutionNeeded=true;E[parseInt(C[J].oldPT)].newPT=C[J].newPT}}D=D.split("\r\nm=");for(J=0;J<D.length;J++){if(D[J].indexOf(N)==0){var P=D[J].split("\r\n");var O=P[0].split(" ");for(H=3;H<O.length;H++){if((isNaN(O[H])==false)&&(E[parseInt(O[H])].substitutionNeeded)){O[H]=E[parseInt(O[H])].newPT;I=true}}P[0]=O.join(" ");for(H=1;H<P.length;H++){if(P[H].indexOf("a=rtpmap:")==0){K=parseInt(P[H].substring(9));if(E[K].substitutionNeeded){P[H]=P[H].replace(new RegExp("a=rtpmap:"+K+" ",""),"a=rtpmap:"+E[K].newPT+" ");I=true}}else{if(P[H].indexOf("a=fmtp:")==0){var G;K=parseInt(P[H].substring(7));if(E[K].substitutionNeeded){P[H]=P[H].replace(new RegExp("a=fmtp:"+K+" ",""),"a=fmtp:"+E[K].newPT+" ");I=true}G=P[H].indexOf("apt=");if(G!=-1){K=parseInt(P[H].substring(G+4));if(E[K].substitutionNeeded){P[H]=P[H].replace(new RegExp(" apt="+K,"")," apt="+E[K].newPT);I=true}}}else{if(P[H].indexOf("a=rtcp-fb:")==0){K=parseInt(P[H].substring(10));if(E[K].substitutionNeeded){P[H]=P[H].replace(new RegExp("a=rtcp-fb:"+K+" ",""),"a=rtcp-fb:"+E[K].newPT+" ");I=true}}}}}D[J]=P.join("\r\n");break}}D=D.join("\r\nm=");if(I===true){console.debug("updateSDPpayloadTypes(), SDP has been updated.");if(RTCSessionDescription&&L instanceof RTCSessionDescription){return new RTCSessionDescription({type:F,sdp:D})}else{if(window.SessionDescription&&L instanceof SessionDescription){return new SessionDescription(D)}}return D}console.debug("updateSDPpayloadTypes(), SDP has not been updated.");return L};this.updateSDPcodecs=function(T,W,D,H){var U,R;var I;var K=false;var O;var aa=new RegExp("\r\n$");var M=false;console.debug("updateSDPcodecs():\n\tsdpType = "+W+"\n\tmediaType = "+D+"\n\tavailableCodecSet = "+H+"\n");if(H==""){return T}if(RTCSessionDescription&&T instanceof RTCSessionDescription){I=T.sdp}else{if(window.SessionDescription&&T instanceof SessionDescription){I=T.toSdp()}else{I=T}}I=I.split("\r\nm=");if(aa.test(I[I.length-2])===false){I[I.length-2]=I[I.length-2]+"\r\n";M=true}for(U=0;U<I.length;U++){if(I[U].indexOf(D)==0){var C=I[U].split("\r\n");var Z=C[0].split(" ");for(R=3;R<Z.length;R++){O=true;if(isNaN(Z[R])==false){var J="";var P="a=rtpmap:"+Z[R]+" ";var V;var L;V=I[U].indexOf(P);if(V!=-1){L=I[U].indexOf("\r\n",V)}switch(Z[R]){case (0):J="PCMU/8000";break;case (8):J="PCMA/8000";break;case (9):J="G722/8000";break;case (13):J="CN/8000";break;case (18):J="G729/8000";break;default:if(V!=-1){J=I[U].substring(V+P.length,L)}else{J=""}break}if((J!="")&&(H.indexOf(J)!=-1)){console.debug("PT("+Z[R]+"): "+J+" FOUND in availableCodecSet.\n")}else{O=false;console.debug("PT("+Z[R]+"): "+J+" NOT FOUND in availableCodecSet.\n")}if(!O){var N=P+".*\r\n";var X="a=fmtp:"+Z[R]+" .*\r\n";var F=" "+Z[R]+" ";var E=" "+Z[R]+"\r";var Q;var Y;I[U]=I[U].replace(new RegExp(N,"g"),"");I[U]=I[U].replace(new RegExp(X,"g"),"");Q=I[U].split("\n");Y=Q[0].split("RTP");Y[1]=Y[1].replace(F," ");Y[1]=Y[1].replace(E,"\r");Q[0]=Y.join("RTP");I[U]=Q.join("\n");if(D=="video"){var G="a=rtcp-fb:"+Z[R]+" .*\r\n";I[U]=I[U].replace(new RegExp(G,"g"),"");if((J!="")&&(J.substr(0,4)=="rtx/")){var S="a=ssrc-group:FID .*\r\n";I[U]=I[U].replace(new RegExp(S,"g"),"");Q=I[U].split("\r\na=");Q.splice(Q.length-8,4);I[U]=Q.join("\r\na=")}}K=true}}}break}}if(M){I[I.length-2]=I[I.length-2].substr(0,I[I.length-2].length-2)}I=I.join("\r\nm=");if(K===true){console.debug("updateSDPcodecs(), SDP has been updated.");if(RTCSessionDescription&&T instanceof RTCSessionDescription){return new RTCSessionDescription({type:W,sdp:I})}else{if(window.SessionDescription&&T instanceof SessionDescription){return new SessionDescription(I)}}return I}console.debug("updateSDPcodecs(), SDP has not been updated.");return T};this.updateSDPForDTLS=function(D,F){console.debug("updateSDPForDTLS(). direction="+F+" config.crypto="+this.session.config.providerConfig.crypto);var C,E=D;if(this.session.config.providerConfig.crypto.toLowerCase()==="dtls-srtp"){if(F=="incoming"){C=E.indexOf(" UDP/TLS/RTP/SAVPF ");if(C!==-1){console.debug("Convert UDP/TLS/RTP/SAVPF to RTP/SAVPF");E=E.replace(/ UDP\/TLS\/RTP\/SAVPF /g," RTP/SAVPF ")}}else{C=E.indexOf(" RTP/SAVPF ");if(C!==-1){console.debug("Convert RTP/SAVPF to UDP/TLS/RTP/SAVPF");E=E.replace(/ RTP\/SAVPF /g," UDP/TLS/RTP/SAVPF ");console.debug("crypto is dtls-srtp. removing a=crypto lines");E=E.replace(/a=crypto.*\r\n/g,"")}}}else{console.debug("crypto is not dtls-srtp. removing fingerprint lines");E=E.replace(/a=fingerprint.*\r\n/g,"")}return E};this.updateSDPAddCodecs=function(G){console.debug("updateSDPAddCodecs()");var D,I,C;var H;var F;if(RTCSessionDescription&&G instanceof RTCSessionDescription){D=G.sdp}else{if(window.SessionDescription&&G instanceof SessionDescription){D=G.toSdp()}else{D=G}}C=D.split("\r\nm=");H=C[0].indexOf("a=inactive");if(H==-1){H=C[0].indexOf("a=sendonly")}I=false;if((/m=video .* RTP\/SAVPF/).test(D)&&!(/a=rtpmap:.* VP8\//).test(D)){C=D.split("\r\nm=");for(var E=0;E<C.length;E++){if(C[E].indexOf("video")==0){F=parseInt(C[E].slice(6));if((C[E].indexOf("a=inactive")>=0)||(C[E].indexOf("a=sendonly")>=0)||((C[E].indexOf("a=sendrecv")==-1)&&(C[E].indexOf("a=recvonly")==-1)&&(H>=0))||(F==0)){I=true;C[E]=C[E].replace(/\r\na=rtpmap:.*/g,"").replace(/\r\na=fmtp:.*/g,"").replace(/(video .* RTP\/SAVPF)(.*)/,"$1 100\r\na=rtpmap:100 VP8/90000");D=C.join("\r\nm=")}break}}}if((/m=audio .* RTP\/SAVPF/).test(D)&&!(/a=rtpmap:.* opus\//).test(D)){C=D.split("\r\nm=");for(var E=0;E<C.length;E++){if(C[E].indexOf("audio")==0){F=parseInt(C[E].slice(6));if((C[E].indexOf("a=inactive")>=0)||(C[E].indexOf("a=sendonly")>=0)||((C[E].indexOf("a=sendrecv")==-1)&&(C[E].indexOf("a=recvonly")==-1)&&(H>=0))||(F==0)){I=true;C[E]=C[E].replace(/(audio .*)/,"$1 111\r\na=rtpmap:111 opus/48000/2\r\na=fmtp:111 minptime=10");console.debug("adding opus");D=C.join("\r\nm=")}break}}}if(I===true){console.debug("updateSDPAddCodecs() SDP has been updated:"+D);if(RTCSessionDescription&&G instanceof RTCSessionDescription){return new RTCSessionDescription({type:"offer",sdp:D})}else{if(window.SessionDescription&&G instanceof SessionDescription){return new SessionDescription(D)}}return D}console.debug("updateSDPAddCodecs() SDP has not been updated)");return G};this.updateSDPForTempWorkarounds=function(D,H){console.debug("updateSDPForTempWorkarounds(). type="+H);var G,C,I,F,E;if(RTCSessionDescription&&D instanceof RTCSessionDescription){G=D.sdp}else{if(window.SessionDescription&&D instanceof SessionDescription){G=D.toSdp()}else{G=D}}I=false;C=G.indexOf("acap:");if(C!==-1){I=true;console.debug("Removed acap from crypto lines");G=G.replace(/acap.*crypto/g,"crypto")}C=G.indexOf(" RTP/AVP ");if(C!==-1&&I===true){I=true;console.debug("Convert RTP/AVP to RTP/SAVPF");G=G.replace(/ RTP\/AVP /g," RTP/SAVPF ")}C=G.indexOf("SAVP ");if(C!==-1){I=true;console.debug("Convert SAVP to SAVPF");G=G.replace(/SAVP /g,"SAVPF ")}if(H==="offer"){F=G.match(/a=rtpmap:(\d+) telephone-event/);console.debug("this.telephoneEvent="+this.telephoneEvent);if(F&&F.length>1){if(this.telephoneEvent){console.debug("this.telephone-event: "+this.telephoneEvent+" and rtpmap in SDP is: "+F);if(this.telephoneEvent!==F[1]){if(G.indexOf("\r\na=rtpmap:"+this.telephoneEvent)>-1){for(C=96;C<=127;C+=1){if(G.indexOf("a=rtpmap:"+C)<0&&C!==this.telephoneEvent){E="(\r\nm=[a-zA-Z]+ [0-9]+ [/a-zA-Z]+[ 0-9]* )"+this.telephoneEvent+"( |\r\n)([ 0-9]*\r?\n?)";G=G.replace(new RegExp(E,"g"),"$1"+C+"$2$3").replace(new RegExp("\r\na=rtpmap:"+this.telephoneEvent,"g"),"\r\na=rtpmap:"+C).replace(new RegExp("\r\na=fmtp:"+this.telephoneEvent,"g"),"\r\na=fmtp:"+C);break}}}E="(\r\nm=[a-zA-Z]+ [0-9]+ [/a-zA-Z]+[ 0-9]* )"+F[1]+"( |\r\n)([ 0-9]*\r?\n?)";G=G.replace(new RegExp(E,"g"),"$1"+this.telephoneEvent+"$2$3").replace(new RegExp("\r\na=rtpmap:"+F[1],"g"),"\r\na=rtpmap:"+this.telephoneEvent).replace(new RegExp("\r\na=fmtp:"+F[1],"g"),"\r\na=fmtp:"+this.telephoneEvent);I=true}}else{console.debug("set this.telephone-event to: "+F[1]);this.telephoneEvent=F[1]}}}if(G.indexOf("a=fingerprint:dummyFunc")!==-1){G=G.replace(/a=fingerprint:dummyFunc.*\r\n/,"");console.log("Removing dummy fingerprint line");I=true}C=G.indexOf("webrtc-DataChannel");if(C!==-1){console.log("Mapping webrtc-DataChannel to webrtc-datachannel 16");G=G.replace(/webrtc-DataChannel/g,"webrtc-datachannel 16");I=true}if(I){console.debug("updateSDPForTempWorkarounds() SDP has been updated:"+G);if(RTCSessionDescription&&D instanceof RTCSessionDescription){return new RTCSessionDescription({type:H,sdp:G})}else{if(window.SessionDescription&&D instanceof SessionDescription){return new SessionDescription(G)}}return G}return D};this.updateSDPMediaIceOption=function(D,F,G){console.debug("updateSDPMediaIceOption()");var E,C;if(RTCSessionDescription&&D instanceof RTCSessionDescription){E=D.sdp}else{if(window.SessionDescription&&D instanceof SessionDescription){E=D.toSdp()}else{E=D}}C=E.indexOf("a=ice-options:google-ice");if(C===-1){E=E.replace(/\r\na=ice-ufrag/g,"\x0d\x0aa=ice-options:"+G+"\x0d\x0aa=ice-ufrag")}if(RTCSessionDescription&&D instanceof RTCSessionDescription){return new RTCSessionDescription({type:F,sdp:E})}else{if(window.SessionDescription&&D instanceof SessionDescription){return new SessionDescription(E)}}return E};this.updateSDPBandwidth=function(D,H){var J,I,G,F,C,E;J=this.getIntOrZero(this.session.config.providerConfig.audioBandwidth);I=this.getIntOrZero(this.session.config.providerConfig.videoBandwidth);G=this.getIntOrZero(this.session.config.providerConfig.dataBandwidth);if(J<=0&&I<=0&&G<=0){console.debug("updateSDPBandwidth() no change, no bandwidth values given");return D}console.debug("updateSDPBandwidth() audioB="+J+" videoB="+I+" dataB="+G);if(RTCSessionDescription&&D instanceof RTCSessionDescription){F=D.sdp}else{if(window.SessionDescription&&D instanceof SessionDescription){F=D.toSdp()}else{F=D}}changed=false;C=F.split("\r\nm=");for(E=0;E<C.length;E+=1){if(J>0&&C[E].indexOf("audio")==0){changed=true;C[E]=this.updateMediaBandwidth(C[E],J)}if(I>0&&C[E].indexOf("video")==0){changed=true;C[E]=this.updateMediaBandwidth(C[E],I)}if(G>0&&C[E].indexOf("application")==0){changed=true;C[E]=this.updateMediaBandwidth(C[E],G)}}if(changed){F=C.join("\r\nm=");console.debug("updateSDPBandwidth() SDP has been updated:"+F);if(RTCSessionDescription&&D instanceof RTCSessionDescription){return new RTCSessionDescription({type:H,sdp:F})}else{if(window.SessionDescription&&D instanceof SessionDescription){return new SessionDescription(F)}}return F}console.debug("updateSDPBandwidth() SDP not changed");return D};this.updateSDPDataChannel=function(H,O){var N,Q,J,F,K,I,M,G,E,L,D,C,P;N=this.getMediaTypes();if(N!=="chat"&&N!=="filetransfer"&&N!=="imageshare"){return H}if(RTCSessionDescription&&H instanceof RTCSessionDescription){Q=H.sdp}else{if(window.SessionDescription&&H instanceof SessionDescription){Q=H.toSdp()}else{Q=H}}J=false;F=Q.split("\r\nm=");for(K=0;K<F.length;K+=1){E=(/^application ([^\s]*) [^\s]* ([^\s]*)/).exec(F[K]);if(E){L=E[2];E=E[1];M="";if(F[K].indexOf("a=data-channel:")<0){M+="a=data-channel:"+L+' stream=0;label="orca";subprotocol="MSRP"\r\n'}if(!(/a=dcsa:[^\s]* accept-types:/).test(F[K])){M+="a=dcsa:"+L+":0 accept-types:";switch(N){case"chat":M+="text/plain message/CPIM\r\n";break;case"imageshare":M+="message/CPIM application/octet-stream image/*\r\n";break;case"filetransfer":M+="message/CPIM application/octet-stream\r\n";break;default:M+="*\r\n"}}if(!(/a=dcsa:[^\s]* path:/).test(F[K])){G=(/\r\nc=[^\s]* [^\s]* ([^\s]*)/).exec(F[K]);if(G){G=G[1];if(!this.msrpFromPath){this.msrpSessionId=Math.random().toString(36).substr(2,16);this.msrpFromPath="msrps://"+G+":"+E+"/"+this.msrpSessionId+";dc"}M+="a=dcsa:"+L+":0 path:"+this.msrpFromPath+"\r\n"}}if(this.msrpFile&&!(/a=dcsa:[^\s]* file-selector:/).test(F[K])){D=encodeURIComponent(this.msrpFile.name||"file");C=this.msrpFile.size||0;P=this.msrpFile.type||"application/octet-stream";M+="a=dcsa:"+L+':0 file-selector:name:"'+D+'" type:'+P+" size:"+C+"\r\n"}if(F[K].indexOf("a=connection:new")<0){M+="a=connection:new\r\n"}if(F[K].indexOf("a=sendrecv")<0&&F[K].indexOf("a=sendonly")<0&&F[K].indexOf("a=recvonly")<0&&F[K].indexOf("a=inactive")<0){M+="a=sendrecv\r\n"}if(M.length>0){J=true;F[K]=F[K].replace(/^(.*\r\n)/,"$1"+M)}}}if(J){Q=F.join("\r\nm=");console.debug("updateSDPDataChannel() SDP has been updated:"+Q);if(RTCSessionDescription&&H instanceof RTCSessionDescription){return new RTCSessionDescription({type:O,sdp:Q})}else{if(window.SessionDescription&&H instanceof SessionDescription){return new SessionDescription(Q)}}return Q}return H};this.updateSDPInitialHold=function(E){var C,F,D,G;C=E.split("\r\nm=");for(F=1;F<C.length;F+=1){if(C[F].indexOf("\r\na=sendonly")<0){D=C[F].indexOf("\r\na=");if(D<0){D=C[F].indexOf("\r\n")}C[F]=C[F].slice(0,D)+"\r\na=sendonly"+C[F].slice(D);G=true}}if(G){E=C.join("\r\nm=");console.debug("updateSDPInitialHold() SDP has been updated:"+E)}else{console.debug("updateSDPInitialHold() No change")}return E};this.updateMediaBandwidth=function(C,D){if(C.indexOf("\r\nb=AS:")>-1){return C.replace(/\r\nb=AS:.*/,"\r\nb=AS:"+D)}return C.replace(/(.*)/,"$1\r\nb=AS:"+D)};this.getIntOrZero=function(C){if(C&&!isNaN(parseInt(C))){return parseInt(C)}return 0};this.isHoldRequest=function(C,D){if((this.audioMediaDirection=="sendonly"||this.audioMediaDirection=="inactive")&&(C=="sendrecv")){return true}if((this.videoMediaDirection=="sendonly"||this.videoMediaDirection=="inactive")&&(D=="sendrecv")){return true}return false};this.parseSDP=function(){var E,H,F,C;this.sdpOffer=this.updateSDPForDTLS(this.sdpOffer,"incoming");if(this.sdpOffer.search("m=message")!==-1){if((this.sdpOffer.search("TCP/MSRP")!==-1)||(this.sdpOffer.search("TCP/TLS/MSRP")!==-1)){return false}}this.mediaTypes=this.mediaTypeFromSdp(this.sdpOffer);E=this.sdpOffer;H=this.sdpOffer;C=-1;audio_start=E.indexOf("audio");video_start=E.indexOf("video");if(audio_start<video_start){audio_end=video_start;video_end=E.length}else{video_end=audio_start;audio_end=E.length}var D=E.slice(audio_start,audio_end);var G=E.slice(video_start,video_end);if(this.mediaTypes.indexOf("audio")!==-1){C=D.indexOf("a=sendrecv");if(C===-1){C=D.indexOf("a=sendonly");if(C===-1){C=D.indexOf("a=recvonly");if(C===-1){C=D.indexOf("a=inactive")}}}if(C!==-1){this.audioMediaDirection=D.substr(C+2,8)}}if(this.mediaTypes.indexOf("video")!==-1){C=G.indexOf("a=sendrecv");if(C===-1){C=G.indexOf("a=sendonly");if(C===-1){C=G.indexOf("a=recvonly");if(C===-1){C=G.indexOf("a=inactive")}}}if(C!==-1){this.videoMediaDirection=G.substr(C+2,8)}}return true};this.accept=function(){console.debug("Call.accept()");this.callStatus=this.CallStatus.ACCEPTED;this.markActionNeeded()};this.clean=function(){console.debug("Call.clean() calls.length: "+this.session.calls.length);this.session.adapter.cleanCallSession(this);var C;for(C=0;C<this.session.calls.length;C+=1){if(this.session.calls[C].callId===this.callId){console.debug("remove call "+this.session.calls[C]+"("+this.callId+")");this.session.calls.splice(C,1);break}}console.debug("Call.clean() calls.length: "+this.session.calls.length);if(this.dataChannel){this.dataChannel.close();this.dataChannel=null}if(this.pc){this.pc.close();this.pc=null}if(this.msrpFile){this.msrpFile=null}};this.setCallStatus=function(D){this.callStatus=D;var C={name:this.callStatus};this.callback.onStatus(this.callStatus,C)};this.incomingCallSessionEvent=function(L){var C,H,E,G,F,I,K,J,M,D;console.debug("Call.incomingCallSessionEvent() event: "+L.name+" status: "+this.callStatus);if(L.name==="confirmed"){if(this.callStatus===this.CallStatus.REFUSED){this.callback.onDisconnected({name:CallStatus.REJECTED});this.clean();return}else{if(this.callStatus===this.CallStatus.CANCELED){this.callback.onDisconnected({name:CallStatus.CANCELED});this.clean();return}}if(this.holdPending){this.holdPending=false;this.callStatusExternal=CallStatus.REMOTE_HOLD;this.callStatus=this.CallStatus.REMOTE_HOLD;C={name:CallStatus.REMOTE_HOLD};this.callback.onStatus(CallStatus.REMOTE_HOLD,C)}else{this.activeCall=true;this.callStatus=this.CallStatus.CONFIRMED;if(this.callStatusExternal===CallStatus.HOLD||this.callStatusExternal===CallStatus.REMOTE_HOLD){this.callStatusExternal=CallStatus.UNHOLD;C={name:CallStatus.UNHOLD};this.callback.onStatus(CallStatus.UNHOLD,C)}else{this.callStatusExternal=CallStatus.CONNECTED;C={name:CallStatus.CONNECTED};this.callback.onConnected(C)}}if(L.sdp){console.debug("received sdp in ACK: "+L.sdp);E=L.sdp;E=this.updateSDPForTempWorkarounds(E,"answer");if(this.session.config.providerConfig.addCodecs){E=this.updateSDPAddCodecs(E)}E=this.updateSDPForDTLS(E,"incoming");E=this.updateMSID(E);console.trace("receivedAck() setRemoteDescription sdp = "+E);this.pc.setRemoteDescription(new RTCSessionDescription({type:"answer",sdp:E}),this.setRDsuccess,this.setRDfailure2);this.setMediaTypeFromSdp(E)}return}else{if(L.name==="canceled"){console.debug("incomingCallSessionEvent: canceled: "+this.callStatus);if(this.callStatus===this.CallStatus.RINGING&&this.callDirection===this.CallDirection.INCOMING){this.callStatus=this.CallStatus.CANCELED;this.callStatusExternal=CallStatus.CANCELED}else{console.warn("invalid call status when receiving cancelled event "+this.callStatus)}return}}if(this.session.config.providerConfig.confWorkaroundChrome){this.inviteCount+=1}this.callDirection=this.CallDirection.INCOMING;if((this.callStatus===this.CallStatus.IDLE)||((this.activeCall===true)&&(this.callStatus===this.CallStatus.CONFIRMED||this.callStatus===this.CallStatus.REMOTE_HOLD||this.callStatus===this.CallStatus.HOLD))){E=L.sdp;if(L.callId){this.callId=L.callId}if(L.uaCall){this.uaCall=L.uaCall}if(L.from){this.targetAOR=[L.from];this.remotePeerIds=[{id:this.targetAOR[0]}]}if(E){this.sdpOffer=E;old_audioMediaDirection=this.audioMediaDirection;old_videoMediaDirection=this.videoMediaDirection;H=this.parseSDP();if(H===false){console.warn("Call.receivedInvite() received a SDP offer with unsupported media");this.session.sendResponse(this,488,"Not Acceptable Here");return}if(this.session.config.providerConfig.confWorkaroundChrome&&this.inviteCount===1&&typeof this.mediaTypes==="string"&&(this.mediaTypes.indexOf("audio")>-1||this.mediaTypes.indexOf("video")>-1)){this.initialHoldOffer=this.sdpHasDirection(this.sdpOffer,"sendonly");if(this.initialHoldOffer){console.log("Conference workaround: First invte.");this.sdpOffer=this.updateSDPInitialHold(this.sdpOffer)}}if(this.session.config.providerConfig.addCodecs){this.sdpOffer=this.updateSDPAddCodecs(this.sdpOffer)}}else{console.debug("receivedInvite() received bodiless INVITE:\n\tset media type to "+this.session.config.mediatypes+"\tUnsetting previous SDP offer, so that a new offer is created.\tcallStatus = "+this.callStatus);this.mediaTypes=this.session.config.mediatypes;this.audioMediaDirection="sendrecv";this.videoMediaDirection="sendrecv";if(this.sdpOffer!=undefined){this.sdpOffer=undefined;this.bodilessReInvite=true;console.log("bodilessReInvite = true\n")}this.sdpOffer=undefined}if(this.session.config.providerConfig.dtmfWorkaround&&!this.isSendingDtmf){G=this.sdpOffer?this.sdpOffer.match(/\r\na=rtpmap:(\d+) telephone-event/):false;if(G){if(this.sdpHasDirection(this.sdpOffer,"sendonly","audio")||this.sdpHasDirection(this.sdpOffer,"inactive","audio")){this.sdpOffer=this.sdpOffer.replace(new RegExp("(\\r\\nm=[a-zA-Z]+ [0-9]+ [a-zA-Z/]+[0-9 ]*) "+G[1]+"(\\r\\n| [0-9 ]+\\r\\n)"),"$1$2").replace(new RegExp("\\r\\na=rtpmap:"+G[1]+".*"),"").replace(new RegExp("\\r\\na=fmtp:"+G[1]+".*"),"")}else{this.isSendingDtmf=true}}}if(this.activeCall===true){if(this.session.config.providerConfig.confWorkaroundChrome&&this.initialHoldOffer){F=(typeof this.sdpOffer==="string")?this.sdpOffer.split("\r\nm=").length:0;I=this.pc.localDescription.sdp.split("\r\nm=").length;K=(typeof this.sdpOffer==="string"&&this.sdpOffer.indexOf("m=video 0 ")>-1);J=this.pc.localDescription.sdp.indexOf("m=video 0 ")>-1;if(I===F&&K===J){M=this.sdpHasDirection(this.sdpOffer,"sendonly");D=this.sdpHasDirection(this.pc.localDescription.sdp,"recvonly");if(!M){this.initialHoldOffer=false}if(!D||M){console.log("Conference workaround: Not doing setRemote/createAnswer, instead sending 200OK with earlier answer. (invteCount="+this.inviteCount+", continue="+this.initialHoldOffer+")");E=this.updateSDPForDTLS(this.pc.localDescription.sdp,"outgoing");this.session.adapter.sendResponse(this,200,"OK",E);return}}else{this.initialHoldOffer=false}console.log("Conference workaround: Do setRemote/createAnswer. (invteCount="+this.inviteCount+", continue="+this.initialHoldOffer+")")}if(this.oldMediaTypes){if(this.oldMediaTypes.indexOf("video")===-1&&this.mediaTypes.indexOf("video")!==-1){console.debug("receivedInvite(): upgrade");this.callStatus=this.CallStatus.UPGRADING;this.callStatusExternal=CallStatus.UPGRADING;C={name:CallStatus.UPGRADING};this.callback.onStatus(CallStatus.UPGRADING,C)}else{if(this.oldMediaTypes.indexOf("video")!==-1&&this.mediaTypes.indexOf("video")===-1){console.debug("receivedInvite(): downgrade");this.callStatus=this.CallStatus.DOWNGRADING;this.callStatusExternal=CallStatus.DOWNGRADING;C={name:CallStatus.DOWNGRADING};this.callback.onStatus(CallStatus.DOWNGRADING,C)}else{if(this.isHoldRequest(old_audioMediaDirection,old_videoMediaDirection)){this.holdPending=true;this.accept()}else{this.accept()}}}}}else{this.isTiledVideo=this.mediaTypes.indexOf("video")>-1&&(/Alcatel-Lucent-HPSS/).test(L.uaString);switch(this.mediaTypes.toLowerCase()){case"filetransfer":G=this.session.callback.createFileTransfer(this.targetAOR[0]);G.getImp().setWrappedCall(this.callback);C={name:SessionStatus.INCOMINGFILE};if(this.msrpFileProperties){C.fileProperties=this.msrpFileProperties}this.session.callback.onIncomingFileTransfer(G,C);break;case"imageshare":G=this.session.callback.createImageShare(this.targetAOR[0]);G.getImp().setWrappedCall(this.callback);C={name:SessionStatus.INCOMINGIMAGE};if(this.msrpFileProperties){C.fileProperties=this.msrpFileProperties}this.session.callback.onIncomingImageShare(G,C);break;case"chat":G=this.session.callback.createChat(this.targetAOR[0]);G.getImp().setWrappedCall(this.callback);C={name:SessionStatus.INCOMINGCHAT};this.session.callback.onIncomingChat(G,C);break;default:if(this.session.autoAnswerMode){this.restoredCall=true;this.session.wsRestoreInProgress=false;C={name:SessionStatus.INCOMINGAUTOANSWER}}else{if(this.session.autoAnswerTimer){C={name:SessionStatus.INCOMINGAUTOANSWER};clearTimeout(this.session.autoAnswerTimer);this.session.autoAnswerTimer=false;this.session.needAuthOnReRegister=true}else{C={name:SessionStatus.INCOMINGCALL}}}console.debug("Sending event = "+C.name);this.session.callback.onIncoming(this.callback,C)}this.session.adapter.sendResponse(this,180,"Ringing");this.callStatus=this.CallStatus.RINGING;this.callStatusExternal=CallStatus.CONNECTING;C={name:CallStatus.CONNECTING};this.callback.onStatus(CallStatus.CONNECTING,C)}}else{console.debug("receivedInvite() received INVITE in state "+this.callStatus);this.session.adapter.sendResponse(this,486,"Busy Here")}};this.terminatedCallSessionEvent=function(C){console.debug("Call.terminatedCallSessionEvent() event: "+C.name+", status: "+this.callStatus);this.clean();if(C.name===CallStatus.CANCELED||this.callStatus===this.CallStatus.CANCELING){this.callback.onDisconnected({name:CallStatus.CANCELED});return}if(this.callStatus===this.CallStatus.REFUSED){this.callback.onDisconnected({name:CallStatus.REJECTED});return}this.callStatusExternal=CallStatus.DISCONNECTED;this.callStatus=this.CallStatus.CLOSED;var D={name:CallStatus.DISCONNECTED};this.callback.onDisconnected(D);if(this.session.ws_only){this.session.ws_only=false;this.session.needAuthOnReRegister=false;this.session.adapter.createSession()}};this.ringingCallSessionEvent=function(C){console.debug("Call.ringingCallSessionEvent() event: "+C.name);if(this.callStatus===this.CallStatus.IDLE){console.warn("no active call");return}this.callStatus=this.CallStatus.RINGING;this.callStatusExternal=CallStatus.CONNECTING};this.acceptedCallSessionEvent=function(D){var F;console.debug("Call.acceptedCallSessionEvent() event: "+D.name+", status: "+this.callStatus);if(this.callStatus===this.CallStatus.IDLE){console.warn("no active call");return}if(!this.pc){console.warn("Call.receivedInviteResponse() no peer connection found.");this.callStatus=this.CallStatus.IDLE;this.callStatusExternal=CallStatus.DISCONNECTED;this.bye();return}if((this.callDirection===this.CallDirection.OUTGOING)&&((this.callStatus===this.CallStatus.CALLING)||(this.callStatus===this.CallStatus.RINGING))){if(this.holdPending){this.callStatus=this.CallStatus.HOLD;this.callStatusExternal=CallStatus.HOLD}else{this.callStatus=this.CallStatus.ACCEPTED}var C=D.sdp;if(this.pc.remoteStreams!==undefined){remoteStream=this.pc.remoteStreams[0];if(remoteStream!==undefined){console.debug("Call.receivedInviteResponse() remove remote stream (label=)"+remoteStream.label+")")}}C=this.updateSDPForDTLS(C,"incoming");C=this.updateSDPForTempWorkarounds(C,"answer");C=this.updateMSID(C);console.trace("receivedInviteResponse() setRemoteDescription sdp = "+C);this.pc.setRemoteDescription(new RTCSessionDescription({type:"answer",sdp:C}),this.setRDsuccess,this.setRDfailure2);this.setMediaTypeFromSdp(C);if(this.holdPending){F={name:CallStatus.HOLD};this.callStatus=this.CallStatus.HOLD;this.callStatusExternal=CallStatus.HOLD;this.holdPending=false;this.callback.onStatus(CallStatus.HOLD,F)}else{if(this.resumePending){this.resumePending=false}this.activeCall=true;this.callStatus=this.CallStatus.CONFIRMED;if(this.callStatusExternal===CallStatus.HOLD||this.callStatusExternal===CallStatus.REMOTE_HOLD){this.callStatusExternal=CallStatus.CONNECTED;F={name:CallStatus.UNHOLD};this.callback.onStatus(CallStatus.UNHOLD,F)}else{this.callStatusExternal=CallStatus.CONNECTED;F={name:CallStatus.CONNECTED};this.callback.onConnected(F)}}if(this.session.ws_only){this.session.needAuthOnReRegister=true;this.session.ws_only=false;var E=this;setTimeout(function(){E.session.adapter.createSession()},1000)}}else{if((this.callDirection===this.CallDirection.OUTGOING)&&(this.callStatus===this.CallStatus.CANCELING)){this.callStatus=this.CallStatus.CANCELED}else{console.warn("Unknown state. Stopped! status: "+this.callStatus+" direction: "+this.callDirection)}}};this.rejectedCallSessionEvent=function(C){console.debug("Call.rejectedCallSessionEvent() event: "+C.name+", status: "+this.callStatus);if(this.callStatus===this.CallStatus.IDLE){console.warn("no active call");return}if(this.callStatus===this.CallStatus.CANCELED){this.callStatusExternal=CallStatus.CANCELED;this.callback.onDisconnected({name:CallStatus.CANCELED})}else{this.callStatusExternal=CallStatus.REJECTED;this.callback.onDisconnected({name:CallStatus.REJECTED})}if(this.session.ws_only){this.session.ws_only=false;this.session.adapter.createSession()}this.clean()};this.errorCallback=function(C){console.trace(C);this.callback.onError(C)};this.createPeerConnection=function(){var E=null;if(webkitRTCPeerConnection===undefined){console.error("webkitRTCPeerConnection is undefined!");return}try{if(z.config.providerConfig){var D=z.config.providerConfig.stun.replace(/^\s+|\s+$/g,"");if(D!==""){this.iceServers={iceServers:[{url:"stun:"+D}]}}if(z.config.providerConfig.crypto.toLowerCase()==="dtls-srtp"){console.debug("Using DTLS-SRTP...");E={optional:[{DtlsSrtpKeyAgreement:true}]}}else{E={optional:[{DtlsSrtpKeyAgreement:false}]}}}this.pc=new webkitRTCPeerConnection(this.iceServers,E);this.pc.onaddstream=this.onRTCPeerConnectionOnAddStream;this.pc.onconnecting=this.onRTCPeerConnectionOnConnecting;this.pc.onicecandidate=this.onRTCPeerConnectionOnIceCandidate;this.pc.onnegotiationneeded=this.onRTCPeerConnectionOnNegotiationNeeded;this.pc.onopen=this.onRTCPeerConnectionOnOpen;this.pc.onremovestream=this.onRTCPeerConnectionOnRemoveStream;this.pc.onstatechange=this.onRTCPeerConnectionOnStatusChange;console.debug("createPeerConnection() create a RTCPeerConnection instance "+this.pc)}catch(C){console.error("Call() Can not create a RTCPeerConnection instance, exception = "+C)}};this.createDataChannel=function(){var E={};if(webkitRTCPeerConnection===undefined){console.error("webkitRTCPeerConnection is undefined!");return}try{if(z.config.providerConfig){var D=z.config.providerConfig.stun.replace(/^\s+|\s+$/g,"");if(D!==""){this.iceServers={iceServers:[{url:"stun:"+D}]}}if(z.config.providerConfig.crypto.toLowerCase()==="dtls-srtp"){console.debug("Using DTLS-SRTP...");E={optional:[{DtlsSrtpKeyAgreement:true}]}}else{E={optional:[{DtlsSrtpKeyAgreement:false}]}}}this.pc=new webkitRTCPeerConnection(this.iceServers,E);console.debug("createDataChannel: "+this.callDirection);if(false&&this.callDirection&&this.callDirection===this.CallDirection.INCOMING){console.debug("createDataChannel ondatachannel: "+this.callDirection);this.pc.ondatachannel=this.gotReceiveChannel}else{console.debug("pc.createDataChannel: "+this.callDirection);this.dataChannel=this.pc.createDataChannel("orcaDataChannel",{reliable:false,negotiated:true});this.dataChannel.onopen=this.onDataChannelOnOpen;this.dataChannel.onclose=this.onDataChannelOnClose;this.dataChannel.onmessage=this.onDataChannelOnMessage}this.pc.onconnecting=this.onRTCPeerConnectionOnConnecting;this.pc.onicecandidate=this.onRTCPeerConnectionOnIceCandidate;this.pc.onnegotiationneeded=this.onRTCPeerConnectionOnNegotiationNeeded;this.pc.onopen=this.onRTCPeerConnectionOnOpen;this.pc.onstatechange=this.onRTCPeerConnectionOnStatusChange;console.debug("createDataChannel() create a RTCPeerConnection data channel "+this.pc+" - "+this.dataChannel)}catch(C){console.error("Call() Can not create a RTCPeerConnection instance or data channel, exception = "+C)}};this.gotReceiveChannel=function(C){console.debug("Receive Channel Callback");this.dataChannel=C.channel;this.dataChannel.onmessage=this.onDataChannelOnMessage;this.dataChannel.onopen=this.onDataChannelOnOpen;this.dataChannel.onclose=this.onDataChannelOnClose};this.sendMessage=function(C){if(!this.dataChannel){console.warn("data channel not exist!");return}this.dataChannel.send(C);console.debug("sendMessage(): "+C)}}function t(A,x,y,z){this.to=A;this.file=x;this.session=y;this.callback=z;this.type="Unknown";this.status=CommStatus.DISCONNECTED;this.wasConnected=false;this.msrp=null;if(this.session&&this.session.adapter.Msrp){this.msrp=new this.session.adapter.Msrp(this)}this.wrappedCall=null;this.setWrappedCall=function(B){this.wrappedCall=B;if(this.file){this.wrappedCall.getCallImp().msrpFile=this.file}if(this.msrp&&typeof this.msrp.setWrappedCall==="function"){this.msrp.setWrappedCall(B)}};this.remoteIdentities=function(){return[{id:this.to}]};this.getStatus=function(){if(this.wrappedCall){var B=this.wrappedCall.getStatus();switch(B){case CallStatus.DISCONNECTED:return CommStatus.DISCONNECTED;case CallStatus.CONNECTING:return CommStatus.CONNECTING;case CallStatus.CONNECTED:return CommStatus.CONNECTED}}return this.status};this.connect=function(){if(this.session.adapter.Msrp){if(!this.wasConnected&&this.msrp){this.wasConnected=true;this.msrp.connect()}}else{this.callback.onError(CommError.NOT_SUPPORTED,{name:CommError.NOT_SUPPORTED});this.callback.onDisconnected({name:CommStatus.DISCONNECTED})}};this.disconnect=function(){if(this.msrp&&typeof this.msrp.disconnect==="function"){this.msrp.disconnect()}else{if(this.wrappedCall){this.wrappedCall.disconnect()}}};this.reject=function(){if(this.msrp&&typeof this.msrp.reject==="function"){this.msrp.reject()}else{if(this.wrappedCall){this.wrappedCall.disconnect()}}}}function v(z,y,x){this.to=z;this.session=y;this.message=x;this.callId=null;this.targetAOR=(typeof z=="string"?[z]:z);this.sendMessage=function(){console.log("sending message: "+this.message+", targetAOR: "+this.targetAOR);this.session.adapter.sendPageModeChatMessage(this,this.targetAOR,this.message)}}function c(B,A,y,z,x){this.to=B;this.session=A;this.message=x;this.callId=null;this.targetAOR=(typeof B=="string"?[B]:B);this.imdnMessageID=y;this.dateTime=z;this.sendMessage=function(){console.log("sending message: "+this.message+", targetAOR: "+this.targetAOR);this.session.adapter.sendSmsMessage(this,this.targetAOR,this.imdnMessageID,this.dateTime,this.message)}}function p(B,A,y,x,z){this.to=B;this.session=A;this.imdnMessageID=y;this.callId=null;this.targetAOR=(typeof B=="string"?[B]:B);if(z!==undefined&&z!==""){this.dateTime=z}else{this.dateTime=u(new Date())}this.status=x;this.sendMessage=function(){console.log("sending message: imdnMessageID:"+this.imdnMessageID+", status: "+this.status+", targetAOR: "+this.targetAOR);this.session.adapter.sendSmsIMDNMessage(this,this.targetAOR,this.imdnMessageID,this.status,this.dateTime)}}function u(y){function x(z){return z<10?"0"+z:z}return y.getUTCFullYear()+"-"+x(y.getUTCMonth()+1)+"-"+x(y.getUTCDate())+"T"+x(y.getUTCHours())+":"+x(y.getUTCMinutes())+":"+x(y.getUTCSeconds())}function o(C){var z=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"];var x="";var A=new Date().getTime();for(var y=0;y<C;y++){var B=Math.ceil(Math.random()*35);x+=z[B]}return A+x}function f(z,x,y){t.call(this,z,undefined,x,y);this.type="Chat";this.sendMessage=function(A){if(this.msrp){this.msrp.sendMessage(A)}}}f.prototype=new t();function s(A,x,y,z){t.call(this,A,x,y,z);this.type="FileTransfer"}s.prototype=new t();function e(A,x,y,z){t.call(this,A,x,y,z);this.type="ImageShare"}e.prototype=new t();function w(y){if(y.substr(0,5)!=="<?xml"){return false}var C,B;if(B=document.implementation.createDocument){var E=new DOMParser();B=E.parseFromString(y,"application/xml");var x=B.firstChild;if(x==B.lastChild&&x.nodeName==="isComposing"){var A,D,z;A=x.getElementsByTagName("state");D=x.getElementsByTagName("contenttype");z=x.getElementsByTagName("refresh");if(A&&D&&z){return true}}}else{console.log("Cannot parse xml.");return false}return false}function r(z,y,x,A){this.callback=A;this.userId=z;this.token=y;this.abConfig=x;this.AddressBookAPI={};this.AddressBookAPI.GETLISTIDS="0";this.AddressBookAPI.GETLISTS="1";this.AddressBookAPI.GETMEMBERS="2";this.AddressBookAPI.GETCONTACTS="3";this.AddressBookAPI.ADDMEMBER="4";this.AddressBookAPI.ADDCONTACT="5";this.AddressBookAPI.UPDATEMEMBER="6";this.AddressBookAPI.UPDATECONTACT="7";this.AddressBookAPI.DELETELIST="8";this.AddressBookAPI.DELETEMEMBER="9";this.AddressBookAPI.DELETECONTACT="10";this.AddressBookAPI.TRANSFERMEMBER="11";this.checkConfig=function(){if(!x.contactServerURI){console.warn("contactServerURI is null");return false}if(!x.baseResourcePath){console.warn("baseResourcePath is null");return false}return true};this.request=function(C,B,I,E,F,D,G){var J=this;try{J.xmlHttpReq=false;if(window.XMLHttpRequest){J.xmlHttpReq=new XMLHttpRequest()}else{if(window.ActiveXObject){J.xmlHttpReq=new ActiveXObject("Microsoft.XMLHTTP")}else{try{xmlhttp=new ActiveXObject("Msxml2.XMLHTTP")}catch(H){console.warn("catch the exception: "+H.toString())}}}if(!J.xmlHttpReq){console.warn("Ajax not supported!");return}console.debug("the method is: "+B+",url is: "+C);J.xmlHttpReq.open(B,C,true);J.xmlHttpReq.onreadystatechange=function(){if(!J){return}if(!J.xmlHttpReq){return}if(!J.xmlHttpReq.readyState){return}if(J.xmlHttpReq.readyState==4){var K=J.xmlHttpReq.status;console.debug("xmlHttpReq.status is: "+K);if(K==1223){K=204}J.onResponse(K,G,D)}};if(D){J.xmlHttpReq.setRequestHeader("Accept",D)}if(I){J.xmlHttpReq.setRequestHeader("Content-Type",F);J.xmlHttpReq.send(E)}else{J.xmlHttpReq.send(null)}}catch(H){console.warn("catch the exception: "+H.toString())}};this.onResponse=function(C,F,E){console.debug("status is: "+C+", api is: "+F+", accept is: "+E);var D="Response "+C;D+="\n"+this.xmlHttpReq.getAllResponseHeaders();D+="\n"+this.xmlHttpReq.responseText;console.debug("the response is: "+D);var H=this.xmlHttpReq.responseText;var G;if(F===this.AddressBookAPI.GETLISTIDS){if(C>=200&&C<=300){var B;if(E==="application/xml"){console.debug("parse the response for xml format");B=this.parseGetListsForXml(H,true)}else{if(E==="application/json"){console.debug("parse the response for json format")}else{console.warn("accept error")}}G={name:AddressBookStatus.GETLISTS_SUCCESSFUL};this.callback.onGetLists(B,G)}else{G={name:AddressBookStatus.GETLISTS_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,G)}}else{if(F===this.AddressBookAPI.GETLISTS){if(C>=200&&C<=300){var B;if(E==="application/xml"){console.debug("parse the response for xml format");B=this.parseGetListsForXml(H,false)}else{if(E==="application/json"){console.debug("parse the response for json format")}else{console.warn("accept error")}}G={name:AddressBookStatus.GETLISTS_SUCCESSFUL};this.callback.onGetLists(B,G)}else{G={name:AddressBookStatus.GETLISTS_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,G)}}else{if(F===this.AddressBookAPI.GETMEMBERS){if(C>=200&&C<=300){var I;if(E==="application/xml"){console.debug("parse the response for xml format");I=this.parseGetMembersForXml(H)}else{if(E==="application/json"){console.debug("parse the response for json format")}else{console.warn("accept error")}}G={name:AddressBookStatus.GETMEMBERS_SUCCESSFUL};this.callback.onGetMembers(I,G)}else{G={name:AddressBookStatus.GETMEMBERS_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,G)}}else{if(F===this.AddressBookAPI.GETCONTACTS){}else{if(F===this.AddressBookAPI.ADDMEMBER){if(C>=200&&C<=300){G={name:AddressBookStatus.ADDMEMBER_SUCCESSFUL};this.callback.onAddMember(G)}else{G={name:AddressBookStatus.ADDMEMBER_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,G)}}else{if(F===this.AddressBookAPI.ADDCONTACT){}else{if(F===this.AddressBookAPI.UPDATEMEMBER){if(C>=200&&C<=300){G={name:AddressBookStatus.UPDATEMEMBER_SUCCESSFUL};this.callback.onUpdateMember(G)}else{G={name:AddressBookStatus.UPDATEMEMBER_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,G)}}else{if(F===this.AddressBookAPI.UPDATECONTACT){}else{if(F===this.AddressBookAPI.DELETELIST){if(C>=200&&C<=300){G={name:AddressBookStatus.DELETELIST_SUCCESSFUL};this.callback.onDeleteList(G)}else{G={name:AddressBookStatus.DELETELIST_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,G)}}else{if(F===this.AddressBookAPI.DELETEMEMBER){if(C>=200&&C<=300){G={name:AddressBookStatus.DELETEMEMBER_SUCCESSFUL};this.callback.onDeleteMember(G)}else{G={name:AddressBookStatus.DELETEMEMBER_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,G)}}else{if(F===this.AddressBookAPI.DELETECONTACT){}else{if(F===this.AddressBookAPI.TRANSFERMEMBER){if(C>=200&&C<=300){G={name:AddressBookStatus.TRANSFERMEMBER_SUCCESSFUL};this.callback.onTransferMember(G)}else{G={name:AddressBookStatus.TRANSFERMEMBER_FAILED};this.callback.onError(AddressBookError.NETWORK_ERROR,G)}}else{console.debug("the api type error")}}}}}}}}}}}}};this.parseGetListsForXml=function(F,P){if(!F){return}console.debug("messageString is: "+F);if(F.substr(0,5)!=="<?xml"){return}var N,I;var C=new DOMParser();I=C.parseFromString(F,"application/xml");var S=new Array();if(P){console.debug("only return the list Ids");var O=I.getElementsByTagNameNS(a.ab,"listId");for(i=0;i<O.length;i++){var Q=new Object();Q.id=O[i].textContent;S[i]=Q;console.debug("lists["+i+"].id is:"+S[i].id)}}else{console.debug("return list Ids and list members");var M=I.getElementsByTagNameNS(a.ab,"list");for(g=0;g<M.length;g++){var G=M[g].childNodes;var Q=new Object();for(h=0;h<G.length;h++){if(G[h].nodeName==="ab:listId"){Q.id=G[h].textContent;console.debug("list.id is:"+Q.id)}if(G[h].nodeName==="ab:memberCollection"){var R=new Array();var K=G[h].getElementsByTagNameNS(a.ab,"member");for(i=0;i<K.length;i++){var J=K[i].childNodes;var B=new Object();for(j=0;j<J.length;j++){if(J[j].nodeName==="ab:memberId"){B.id=J[j].textContent;console.debug("member.id is:"+B.id)}if(J[j].nodeName==="ab:attributeList"){var H=new Array();var E=J[j].getElementsByTagNameNS(a.ab,"attribute");for(k=0;k<E.length;k++){var L=new Object();var D=E[k].childNodes;for(l=0;l<D.length;l++){if(D[l].nodeName==="name"){L.name=D[l].textContent;console.debug("attribute.name is:"+L.name)}if(D[l].nodeName==="value"){L.value=D[l].textContent;console.debug("attribute.name is:"+L.value)}}if(L.name=="display-name"){B.displayName=L.value}H[k]=L}B.attributes=H}}R[i]=B}Q.members=R}}S[g]=Q}}return S};this.parseGetMembersForXml=function(N){if(!N){return}console.debug("messageString is: "+N);if(N.substr(0,5)!=="<?xml"){return}var G,O;var C=new DOMParser();O=C.parseFromString(N,"application/xml");var B=O.getElementsByTagNameNS(a.ab,"listId");var K=new Object();K.id=B[0].textContent;console.debug("list.id is:"+K.id);var I=new Array();var M=O.getElementsByTagNameNS(a.ab,"member");for(i=0;i<M.length;i++){var L=M[i].childNodes;var J=new Object();for(j=0;j<L.length;j++){if(L[j].nodeName==="ab:memberId"){J.id=L[j].textContent;console.debug("member.id is:"+J.id)}if(L[j].nodeName==="ab:attributeList"){var H=new Array();var E=L[j].getElementsByTagNameNS(a.ab,"attribute");for(k=0;k<E.length;k++){var D=new Object();var F=E[k].childNodes;for(l=0;l<F.length;l++){if(F[l].nodeName==="name"){D.name=F[l].textContent;console.debug("attribute.name is:"+D.name)}if(F[l].nodeName==="value"){D.value=F[l].textContent;console.debug("attribute.name is:"+D.value)}}if(D.name=="display-name"){J.displayName=D.value}H[k]=D}J.attributes=H}}I[i]=J}K.members=I;return K};this.getLists=function(D){if(this.checkConfig()===false){var C={name:AddressBookStatus.GETLISTS_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,C);return}var E=encodeURIComponent(z);var B=x.contactServerURI+"/"+x.baseResourcePath+"/addressbook/v1/"+E+"/lists";console.debug("requestURL is: "+B);console.debug("getMembersInList is: "+D);if(D){this.request(B,"GET",false,null,"application/xml","application/xml",this.AddressBookAPI.GETLISTS)}else{this.request(B,"GET",false,null,"application/xml","application/xml",this.AddressBookAPI.GETLISTIDS)}};this.getMembers=function(B){if(this.checkConfig()===false){var E={name:AddressBookStatus.GETMEMBERS_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,E);return}if(!B){var E={name:AddressBookStatus.GETMEMBERS_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,E);return}var F=encodeURIComponent(z);var C=encodeURIComponent(B);var D=x.contactServerURI+"/"+x.baseResourcePath+"/addressbook/v1/"+F+"/lists/"+C;console.debug("requestURL is: "+D);this.request(D,"GET",false,null,"application/xml","application/xml",this.AddressBookAPI.GETMEMBERS)};this.getContacts=function(){};this.addMember=function(H,F){if(this.checkConfig()===false){var C={name:AddressBookStatus.ADDMEMBER_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,C);return}if(!H){var C={name:AddressBookStatus.ADDMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,C);return}var L=encodeURIComponent(z);var J=encodeURIComponent(H);var G,D;if(!F){console.debug("member is null, to create list");D=x.contactServerURI+"/"+x.baseResourcePath+"/addressbook/v1/"+L+"/lists/"+J;G='<?xml version="1.0" encoding="UTF-8"?><ab:list xmlns:ab="urn:oma:xml:rest:netapi:addressbook:1"><listId>'+H+"</listId></ab:list>"}else{console.debug("member is not null, to add member in the list");if(!F||!F.id){var C={name:AddressBookStatus.ADDMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,C)}var B=encodeURIComponent(F.id);D=x.contactServerURI+"/"+x.baseResourcePath+"/addressbook/v1/"+L+"/lists/"+J+"/members/"+B;var E=F.attributes;if(!E){console.debug("no attributes");G='<?xml version="1.0" encoding="UTF-8"?><ab:member xmlns:ab="urn:oma:xml:rest:netapi:addressbook:1"><memberId>'+F.id+"</memberId></ab:member>"}else{var K="";for(i=0;i<E.length;i++){K+="<attribute><name>"+E[i].name+"</name><value>"+E[i].value+"</value></attribute>"}var I="<attributeList>"+K.trim()+"<resourceURL>"+D+"/attributes</resourceURL></attributeList>";G='<?xml version="1.0" encoding="UTF-8"?><ab:member xmlns:ab="urn:oma:xml:rest:netapi:addressbook:1"><memberId>'+F.id+"</memberId>"+I+"</ab:member>"}}console.debug("requestURL is: "+D);console.debug("data is: "+G);this.request(D,"PUT",true,G,"application/xml","application/xml",this.AddressBookAPI.ADDMEMBER)};this.addContact=function(B){};this.updateMember=function(H,G){if(this.checkConfig()===false){var C={name:AddressBookStatus.UPDATEMEMBER_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,C);return}if(!H||!G||!G.id||!G.attributes){var C={name:AddressBookStatus.UPDATEMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,C);return}var L=encodeURIComponent(z);var J=encodeURIComponent(H);var B=encodeURIComponent(G.id);var D=x.contactServerURI+"/"+x.baseResourcePath+"/addressbook/v1/"+L+"/lists/"+J+"/members/"+B;console.debug("requestURL is: "+D);var E=G.attributes;var K="";for(i=0;i<E.length;i++){K+="<attribute><name>"+E[i].name+"</name><value>"+E[i].value+"</value></attribute>"}var I="<attributeList>"+K.trim()+"<resourceURL>"+D+"/attributes</resourceURL></attributeList>";var F='<?xml version="1.0" encoding="UTF-8"?><ab:member xmlns:ab="urn:oma:xml:rest:netapi:addressbook:1"><memberId>'+G.id+"</memberId>"+I+"</ab:member>";console.debug("data is: "+F);this.request(D,"PUT",true,F,"application/xml","application/xml",this.AddressBookAPI.UPDATEMEMBER)};this.updateContact=function(B){};this.deleteList=function(B){if(this.checkConfig()===false){var E={name:AddressBookStatus.DELETELIST_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,E);return}if(!B){var E={name:AddressBookStatus.DELETELIST_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,E);return}var F=encodeURIComponent(z);var C=encodeURIComponent(B);var D=x.contactServerURI+"/"+x.baseResourcePath+"/addressbook/v1/"+F+"/lists/"+C;console.debug("requestURL is: "+D);this.request(D,"DELETE",false,null,"application/xml","application/xml",this.AddressBookAPI.DELETELIST)};this.deleteMember=function(B,H){if(this.checkConfig()===false){var E={name:AddressBookStatus.DELETEMEMBER_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,E);return}if(!B){var E={name:AddressBookStatus.DELETEMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,E);return}if(!H||!H.id){var E={name:AddressBookStatus.DELETEMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,E);return}var F=encodeURIComponent(z);var C=encodeURIComponent(B);var G=encodeURIComponent(H.id);var D=x.contactServerURI+"/"+x.baseResourcePath+"/addressbook/v1/"+F+"/lists/"+C+"/members/"+G;console.debug("requestURL is: "+D);this.request(D,"DELETE",false,null,"application/xml","application/xml",this.AddressBookAPI.DELETEMEMBER)};this.deleteContact=function(B){};this.trnsferMember=function(H,G,I){if(this.checkConfig()===false){var C={name:AddressBookStatus.TRANSFERMEMBER_FAILED};this.callback.onError(AddressBookError.CONFIG_ERROR,C);return}if(!H||!G||!G.id||!I){var C={name:AddressBookStatus.TRANSFERMEMBER_FAILED};this.callback.onError(AddressBookError.PARAMETERS_ERROR,C);return}var K=encodeURIComponent(z);var J=encodeURIComponent(H);var B=encodeURIComponent(G.id);var E=x.contactServerURI+"/"+x.baseResourcePath+"/addressbook/v1/"+K+"/lists/"+J+"/members/"+B+"/transfer";console.debug("requestURL is: "+E);var D=x.contactServerURI+"/"+x.baseResourcePath+"/addressbook/v1/"+z+"/lists/"+I;console.debug("destinationStr is: "+D);var F='<?xml version="1.0" encoding="UTF-8"?><ab:memberTransferParameters xmlns:ab="urn:oma:xml:rest:netapi:addressbook:1"><destination>'+D+"</destination></ab:memberTransferParameters>";console.debug("data is: "+F);this.request(E,"POST",true,F,"application/xml","application/xml",this.AddressBookAPI.TRANSFERMEMBER)}}var b={createSession:function(z,C,D,E){var A={uri:D.uri,mediatypes:D.mediatypes||"audio",providerConfig:{}};var x=["interfaceType","sendAuthOnInitReg","sendAuthOnReregDereg","reUseCallidInReregDereg","stun","bundle","crypto","conferenceFactoryURI","expires","addCodecs","dtmf","dtmfDuration","dtmfGap","audioBandwidth","videoBandwidth","dataBandwidth","audioCodecs","videoCodecs","persistentPC","breaker","stripExtraSSRC","confWorkaroundChrome","useFirstCandidate","removeIPV6Candidates","enableIMDNCapability","autoAnswerTime","maxRecoveryAttempts","networkRetryInterval","sendRegisterOnRecovery","registerResponseTime","registerRefreshTime","msidHandling","crlfKeepAliveInterval","enableMDSPsupport","secondaryDeviceId","dtmfWorkaround"];var y=["SIP-WS",false,true,true,"",false,"dtls-srtp","","600",true,"inband","100","70","","","","","",true,false,true,false,false,true,true,0,5,5,false,0,0,"1",0,false,'mobility="fixed"',true];for(var B=0;B<x.length;B++){if(D.providerConfig&&D.providerConfig[x[B]]!==undefined){A.providerConfig[x[B]]=D.providerConfig[x[B]]}else{A.providerConfig[x[B]]=y[B]}}return new n(z,C,A,E)},createAddressBook:function(y,z,x,A){return new r(y,z,x,A)}};this.orcaALU=b})();
 
 // orca/sip.js
-if(typeof sip=="undefined"){sip={}}(function(a){a.filter=function(c,f){var b=[];for(var e=0;e<f.length;++e){if(c(f[e])){b.push(f[e])}}return b};a.map=function(c,f){var b=[];for(var e=0;e<f.length;++e){b.push(c(f[e]))}return b};a.str_partition=function(e,c){var b=e.indexOf(c);return b>=0?[e.substr(0,b),c,e.substr(b+c.length)]:[e,"",""]};a.str_strip=function(b){return b.replace(/^\s+/g,"").replace(/\s+$/g,"")};a.str_slice=function(g,f,c){if(typeof f=="undefined"||f<0){f=0}if(typeof c=="undefined"||c>g.length){c=g.length}var b=[];for(var e=f;e<c;++e){b.push(g.charAt(e))}return b.join("")};a.list_slice=function(f,g,c){if(typeof g=="undefined"||g<0){g=0}if(typeof c=="undefined"||c>f.length){c=f.length}var b=[];for(var e=g;e<c;++e){b.push(f[e])}return b};a.dict_items=function(e){var b=[];for(var c in e){b.push([c,e[c]])}return b};a.is_array=function(b){return Object.prototype.toString.apply(b)==="[object Array]"};a.parse_uri_options={strictMode:false,key:["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],q:{name:"queryKey",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/}};a.parse_uri=function(g){var f=a.parse_uri_options,b=f.parser[f.strictMode?"strict":"loose"].exec(g),e={},c=14;while(c--){e[f.key[c]]=b[c]||""}e[f.q.name]={};e[f.key[12]].replace(f.q.parser,function(i,h,j){if(h){e[f.q.name][h]=j}});return e};a._keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";a.b64_encode=function(e){var b="";var m,k,h,l,j,g,f;var c=0;e=a._utf8_encode(e);while(c<e.length){m=e.charCodeAt(c++);k=e.charCodeAt(c++);h=e.charCodeAt(c++);l=m>>2;j=((m&3)<<4)|(k>>4);g=((k&15)<<2)|(h>>6);f=h&63;if(isNaN(k)){g=f=64}else{if(isNaN(h)){f=64}}b=b+a._keyStr.charAt(l)+a._keyStr.charAt(j)+a._keyStr.charAt(g)+a._keyStr.charAt(f)}return b};a.b64_decode=function(e){var b="";var m,k,h;var l,j,g,f;var c=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(c<e.length){l=this._keyStr.indexOf(e.charAt(c++));j=this._keyStr.indexOf(e.charAt(c++));g=this._keyStr.indexOf(e.charAt(c++));f=this._keyStr.indexOf(e.charAt(c++));m=(l<<2)|(j>>4);k=((j&15)<<4)|(g>>2);h=((g&3)<<6)|f;b=b+String.fromCharCode(m);if(g!=64){b=b+String.fromCharCode(k)}if(f!=64){b=b+String.fromCharCode(h)}}b=a._utf8_decode(b);return b};a._utf8_encode=function(e){var b="";for(var g=0;g<e.length;g++){var f=e.charCodeAt(g);if(f<128){b+=String.fromCharCode(f)}else{if((f>127)&&(f<2048)){b+=String.fromCharCode((f>>6)|192);b+=String.fromCharCode((f&63)|128)}else{b+=String.fromCharCode((f>>12)|224);b+=String.fromCharCode(((f>>6)&63)|128);b+=String.fromCharCode((f&63)|128)}}}return b};a._utf8_decode=function(b){var e="";var f=0;var g=c1=c2=0;while(f<b.length){g=b.charCodeAt(f);if(g<128){e+=String.fromCharCode(g);f++}else{if((g>191)&&(g<224)){c2=b.charCodeAt(f+1);e+=String.fromCharCode(((g&31)<<6)|(c2&63));f+=2}else{c2=b.charCodeAt(f+1);c3=b.charCodeAt(f+2);e+=String.fromCharCode(((g&15)<<12)|((c2&63)<<6)|(c3&63));f+=3}}}return e};a.b64_urlsafe_encode=function(b){return a.b64_encode(b).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,".")};a.MD5=function(s){function L(c,b){return(c<<b)|(c>>>(32-b))}function K(F,c){var H,b,x,G,k;x=(F&2147483648);G=(c&2147483648);H=(F&1073741824);b=(c&1073741824);k=(F&1073741823)+(c&1073741823);if(H&b){return(k^2147483648^x^G)}if(H|b){if(k&1073741824){return(k^3221225472^x^G)}else{return(k^1073741824^x^G)}}else{return(k^x^G)}}function r(b,k,c){return(b&k)|((~b)&c)}function q(b,k,c){return(b&c)|(k&(~c))}function p(b,k,c){return(b^k^c)}function n(b,k,c){return(k^(b|(~c)))}function u(G,F,aa,Z,k,H,I){G=K(G,K(K(r(F,aa,Z),k),I));return K(L(G,H),F)}function f(G,F,aa,Z,k,H,I){G=K(G,K(K(q(F,aa,Z),k),I));return K(L(G,H),F)}function D(G,F,aa,Z,k,H,I){G=K(G,K(K(p(F,aa,Z),k),I));return K(L(G,H),F)}function t(G,F,aa,Z,k,H,I){G=K(G,K(K(n(F,aa,Z),k),I));return K(L(G,H),F)}function e(F){var I;var x=F.length;var k=x+8;var c=(k-(k%64))/64;var H=(c+1)*16;var Z=Array(H-1);var b=0;var G=0;while(G<x){I=(G-(G%4))/4;b=(G%4)*8;Z[I]=(Z[I]|(F.charCodeAt(G)<<b));G++}I=(G-(G%4))/4;b=(G%4)*8;Z[I]=Z[I]|(128<<b);Z[H-2]=x<<3;Z[H-1]=x>>>29;return Z}function B(k){var c="",x="",F,b;for(b=0;b<=3;b++){F=(k>>>(b*8))&255;x="0"+F.toString(16);c=c+x.substr(x.length-2,2)}return c}function J(k){var b="";for(var F=0;F<k.length;F++){var x=k.charCodeAt(F);if(x<128){b+=String.fromCharCode(x)}else{if((x>127)&&(x<2048)){b+=String.fromCharCode((x>>6)|192);b+=String.fromCharCode((x&63)|128)}else{b+=String.fromCharCode((x>>12)|224);b+=String.fromCharCode(((x>>6)&63)|128);b+=String.fromCharCode((x&63)|128)}}}return b}var C=Array();var P,h,E,v,g,Y,X,W,V;var S=7,Q=12,N=17,M=22;var A=5,z=9,y=14,w=20;var o=4,m=11,l=16,j=23;var U=6,T=10,R=15,O=21;s=J(s);C=e(s);Y=1732584193;X=4023233417;W=2562383102;V=271733878;for(P=0;P<C.length;P+=16){h=Y;E=X;v=W;g=V;Y=u(Y,X,W,V,C[P+0],S,3614090360);V=u(V,Y,X,W,C[P+1],Q,3905402710);W=u(W,V,Y,X,C[P+2],N,606105819);X=u(X,W,V,Y,C[P+3],M,3250441966);Y=u(Y,X,W,V,C[P+4],S,4118548399);V=u(V,Y,X,W,C[P+5],Q,1200080426);W=u(W,V,Y,X,C[P+6],N,2821735955);X=u(X,W,V,Y,C[P+7],M,4249261313);Y=u(Y,X,W,V,C[P+8],S,1770035416);V=u(V,Y,X,W,C[P+9],Q,2336552879);W=u(W,V,Y,X,C[P+10],N,4294925233);X=u(X,W,V,Y,C[P+11],M,2304563134);Y=u(Y,X,W,V,C[P+12],S,1804603682);V=u(V,Y,X,W,C[P+13],Q,4254626195);W=u(W,V,Y,X,C[P+14],N,2792965006);X=u(X,W,V,Y,C[P+15],M,1236535329);Y=f(Y,X,W,V,C[P+1],A,4129170786);V=f(V,Y,X,W,C[P+6],z,3225465664);W=f(W,V,Y,X,C[P+11],y,643717713);X=f(X,W,V,Y,C[P+0],w,3921069994);Y=f(Y,X,W,V,C[P+5],A,3593408605);V=f(V,Y,X,W,C[P+10],z,38016083);W=f(W,V,Y,X,C[P+15],y,3634488961);X=f(X,W,V,Y,C[P+4],w,3889429448);Y=f(Y,X,W,V,C[P+9],A,568446438);V=f(V,Y,X,W,C[P+14],z,3275163606);W=f(W,V,Y,X,C[P+3],y,4107603335);X=f(X,W,V,Y,C[P+8],w,1163531501);Y=f(Y,X,W,V,C[P+13],A,2850285829);V=f(V,Y,X,W,C[P+2],z,4243563512);W=f(W,V,Y,X,C[P+7],y,1735328473);X=f(X,W,V,Y,C[P+12],w,2368359562);Y=D(Y,X,W,V,C[P+5],o,4294588738);V=D(V,Y,X,W,C[P+8],m,2272392833);W=D(W,V,Y,X,C[P+11],l,1839030562);X=D(X,W,V,Y,C[P+14],j,4259657740);Y=D(Y,X,W,V,C[P+1],o,2763975236);V=D(V,Y,X,W,C[P+4],m,1272893353);W=D(W,V,Y,X,C[P+7],l,4139469664);X=D(X,W,V,Y,C[P+10],j,3200236656);Y=D(Y,X,W,V,C[P+13],o,681279174);V=D(V,Y,X,W,C[P+0],m,3936430074);W=D(W,V,Y,X,C[P+3],l,3572445317);X=D(X,W,V,Y,C[P+6],j,76029189);Y=D(Y,X,W,V,C[P+9],o,3654602809);V=D(V,Y,X,W,C[P+12],m,3873151461);W=D(W,V,Y,X,C[P+15],l,530742520);X=D(X,W,V,Y,C[P+2],j,3299628645);Y=t(Y,X,W,V,C[P+0],U,4096336452);V=t(V,Y,X,W,C[P+7],T,1126891415);W=t(W,V,Y,X,C[P+14],R,2878612391);X=t(X,W,V,Y,C[P+5],O,4237533241);Y=t(Y,X,W,V,C[P+12],U,1700485571);V=t(V,Y,X,W,C[P+3],T,2399980690);W=t(W,V,Y,X,C[P+10],R,4293915773);X=t(X,W,V,Y,C[P+1],O,2240044497);Y=t(Y,X,W,V,C[P+8],U,1873313359);V=t(V,Y,X,W,C[P+15],T,4264355552);W=t(W,V,Y,X,C[P+6],R,2734768916);X=t(X,W,V,Y,C[P+13],O,1309151649);Y=t(Y,X,W,V,C[P+4],U,4149444226);V=t(V,Y,X,W,C[P+11],T,3174756917);W=t(W,V,Y,X,C[P+2],R,718787259);X=t(X,W,V,Y,C[P+9],O,3951481745);Y=K(Y,h);X=K(X,E);W=K(W,v);V=K(V,g)}var i=B(Y)+B(X)+B(W)+B(V);return i.toLowerCase()}})(sip);(function(a){a._testIP=function(){assert(a.isIPv4("1.2.3.4")==true,'isIPv4("1.2.3.4") == true');assert(a.isIPv4("1.2.3.4.5")==false,'isIPv4("1.2.3.4.5") == false');assert(a.isIPv4("1.2.3")==false,'isIPv4("1.2.3") == false');assert(a.isIPv4("hos.tna.me.is")==false,'isIPv4("hos.tna.me.is") == false');assert(a.isIPv4("1.2.3.256")==false,'isIPv4("1.2.3.256") == false');assert(a.isMulticast("224.1.2.3")==true,'sip.isMulticast("224.1.2.3") == true');assert(a.isMulticast("125.1.2.3")==false,'sip.isMulticast("125.1.2.3") == true');assert(a.isLocal("127.0.0.1")==true,'sip.isLocal("127.0.0.1") == true');assert(a.isLocal("127.0.1.1")==false,'sip.isMulticast("127.0.1.1") == false');assert(a.isPrivate("127.0.0.1")==false,'sip.isPrivate("127.0.0.1") == false');assert(a.isPrivate("10.1.2.3")==true,'sip.isPrivate("10.1.2.3") == true');assert(a.isPrivate("192.168.1.2")==true,'sip.isPrivate("192.168.1.2") == true');assert(a.isPrivate("172.19.1.2")==true,'sip.isPrivate("172.19.1.2") == true')};a._ipv4=/^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/;a._ipToParts=function(e){var f=e.match(this._ipv4);if(f==null){return false}f=a.filter(function(g){return g<256},a.map(parseInt,a.list_slice(f,1)));return f.length==4?f:false};a.isIPv4=function(e){return a._ipToParts(e)!=false};a.isMulticast=function(e){var f=a._ipToParts(e);return(f&&((f[0]&240)==224))};a.isLocal=function(e){return e=="127.0.0.1"};a.isPrivate=function(e){var f=a._ipToParts(e);return f&&(f[0]==10||f[0]==172&&f[1]>=16&&f[1]<32||f[0]==192&&f[1]==168)};a._testURI=function(){assert((new a.URI("sip:kundan@example.net")).toString()=="sip:kundan@example.net",'URI("sip:kundan@example.net")');assert((new a.URI("sip:kundan:passwd@example.net:5060;transport=udp;lr?name=value&another=another")).toString()=="sip:kundan:passwd@example.net:5060;transport=udp;lr?name=value&another=another",'URI("sip:kundan:passwd@example.net:5060;transport=udp;lr?name=value&another=another")');assert((new a.URI("sip:192.1.2.3:5060")).toString()=="sip:192.1.2.3:5060",'URI("sip:192.1.2.3:5060")');assert((new a.URI("sip:kundan@example.net")).equals(new a.URI("sip:Kundan@Example.NET")),'URI("sip:kundan@example.net").equals(URI("sip:Kundan@Example.NET"))');assert((new a.URI()).toString()=="","URI() empty");assert((new a.URI("tel:+1-212-9397063")).toString()=="tel:+1-212-9397063",'URI("tel:+1-212-9397063")');var e=(new a.URI("sip:kundan@192.1.2.3:5060")).getHostPort();assert(e[0]=="192.1.2.3"&&e[1]==5060,'URI("sip:kundan@192.1.2.3:5060").getHostPort()')};function b(h){if(h!==undefined){var e=h.match(b._syntax);var l,k;if(e){this.scheme=e[1];this.user=e[4];this.password=e[6];this.host=e[9];this.port=e[11];l=e[13];k=e[15]}else{if(h.match(b._syntax_urn)){e=h.match(b._syntax_urn);this.scheme=e[1];this.host=e[2]}else{throw new String("Invalid URI("+h+")")}}if(this.scheme=="tel"&&this.user==null){this.user=this.host;this.host=null}if(this.port){this.port=parseInt(this.port)}this.param={};if(l){var j=l.split(";");for(var g=0;g<j.length;++g){var f=a.str_partition(j[g],"=");this.param[f[0]]=f[2]||null}}this.header=k?k.split("&"):[]}else{this.scheme=null;this.user=null;this.password=null;this.host=null;this.port=null;this.param={};this.header=[]}}b._syntax=/^([a-zA-Z][a-zA-Z0-9\+\-\.]*):((([a-zA-Z0-9\-\_\.\!\~\*\'\(\)&=\+\$,;\?\/\%]+)(:([^:@;\?]+))?)@)?((([^;\?:]*)(:([\d]+))?))(;([^\?]*))?(\?(.*))?$/;b._syntax_urn=/^(urn):([^;\?>]+)$/;b.prototype.toString=function(){var e=this.scheme=="tel"?null:this.user;var f=this.scheme=="tel"?this.user:this.host;var g=a.map(function(h){return h[1]!==null?h[0]+"="+h[1]:h[0]},a.dict_items(this.param)).join(";");return this.scheme&&f?(this.scheme+":"+(e?(e+(this.password?(":"+this.password):"")+"@"):"")+(f?((f?f:"")+(this.port?(":"+this.port):"")):"")+(g?(";"+g):"")+(this.header.length>0?("?"+this.header.join("&")):"")):""};b.prototype.dup=function(){return new b(this.toString())};b.prototype.getHostPort=function(){return[this.host,this.port]};b.prototype.equals=function(e){return this.toString().toLowerCase()==e.toString().toLowerCase()};b.prototype.setSecure=function(e){if(e&&["sip","http"].indexOf(this.scheme)>=0){this.scheme+="s"}};b.prototype.getSecure=function(){return["sips","https"].indexOf(this.scheme)>=0};a.URI=b;a._testAddress=function(){var f=new a.Address('"Kundan Singh" <sip:kundan@example.net>');var e=new a.Address("Kundan Singh   <sip:kundan@example.net>");var i=new a.Address('"Kundan Singh" <sip:kundan@example.net>   ');var h=new a.Address("<sip:kundan@example.net>");var g=new a.Address("sip:kundan@example.net");assert(f.toString()=='"Kundan Singh" <sip:kundan@example.net>',"Address('\"Kundan Singh\" <sip:kundan@example.net>').toString()");assert(f.toString()==e.toString(),"'\"Kundan Singh\" <sip:kundan@example.net>' == 'Kundan Singh   <sip:kundan@example.net>'");assert(f.toString()==i.toString(),"'\"Kundan Singh\" <sip:kundan@example.net>' == '\"Kundan Singh\" <sip:kundan@example.net>   '");assert(f.uri.toString()==h.uri.toString(),'Address("<sip:kundan@example.net>").uri');assert(f.uri.toString()==g.uri.toString(),'Address("sip:kundan@example.net").uri');assert(f.getDisplayable()=="Kundan Singh","Address('\"Kundan Singh\" <sip:kundan@example.net>').getDisplayable()")};function c(e){this.displayName=null;this.uri=null;this.wildcard=false;this.mustQuote=false;if(e){this.parse(e)}}c._syntax=[/^([a-zA-Z0-9\-\.\_\+\~\ \t]*)<([^>]+)>/,/^"([^"]+)"[\ \t]*<([^>]+)>/,/^[\ \t]*()([^;]+)/];c.prototype.parse=function(j){if(j.substr(0,1)=="*"){this.wildcard=true;return 1}else{var h=0;for(var g=0;g<c._syntax.length;++g){var f=c._syntax[g];var e=j.match(f);if(e){this.displayName=a.str_strip(e[1]);this.uri=new a.URI(a.str_strip(e[2]));h=e[0].length;break}}return h}};c.prototype.toString=function(){return(this.uri?(this.displayName?('"'+this.displayName+'"'+(this.uri?" ":"")):"")+(((this.mustQuote||this.displayName?"<":"")+this.uri.toString()+(this.mustQuote||this.displayName?">":""))):"")};c.prototype.dup=function(){return new c(this.toString())};c.prototype.getDisplayable=function(e){if(e===undefined){e=25}var f=this.displayName||this.uri&&this.uri.user||this.uri&&this.uri.host||"";return f.length<=e?f:f.substr(0,e-3)+"..."};a.Address=c})(sip);(function(g){g._quote=function(n){return n.length>=2&&n[0]=='"'&&n[n.length-1]=='"'?n:'"'+n+'"'};g._unquote=function(n){return n.length>=2&&n[0]=='"'&&n[n.length-1]=='"'?n.substr(1,n.length-2):n};g._address=["contact","from","record-route","refer-to","referred-by","route","to","p-preferred-identity"];g._comma=["authorization","proxy-authenticate","proxy-authorization","www-authenticate"];g._unstructured=["call-id","cseq","date","expires","max-forwards","organization","server","subject","timestamp","user-agent","accept-contact"];g._short=["allow-events","u","call-id","i","contact","m","content-encoding","e","content-length","l","content-type","c","event","o","from","f","subject","s","supported","k","to","t","via","v"];g._exception={"call-id":"Call-ID",cseq:"CSeq","www-authenticate":"WWW-Authenticate","x-alu-authorization":"X-ALU-Authorization"};g._testCanon=function(){assert(g._canon("call-id")=="Call-ID",'_canon("call-id") == "Call-ID"');assert(g._canon("fRoM")=="From",'_canon("fRoM") == "From"');assert(g._canon("refer-to")=="Refer-To",'_canon("refer-to") == "Refer-To"')};g._canon=function(n){n=n.toLowerCase();if(n.length==1&&g._short[n]!==undefined){return g._canon(g._short[g._short.indexOf(n)-1])}else{if(g._exception[n]!==undefined){return g._exception[n]}else{return g.map(function(o){return o.charAt(0).toUpperCase()+g.str_slice(o,1)},n.split("-")).join("-")}}};g._getValues=function(s){var r=[];var n=false;var p=0;if(s.indexOf(",")==-1&&s.toLowerCase().indexOf("%2c")==-1){r.push(s)}else{for(var q=0,o=s.length;q<o;q++){if(s[q]=="%"){var t=s.toLowerCase().substr(q,3);if(t=="%22"||t=="%27"){n=!n}else{if(t=="%2c"){if(n==false){r.push(s.substring(p,q));p=q+1}}}}else{if(s[q]=='"'||s[q]=="'"){n=!n}else{if(s[q]==","){if(n==false){r.push(s.substring(p,q));p=q+1}}}}}r.push(s.substring(p,q))}return r};g._testHeader=function(){assert((new g.Header('"Kundan Singh" <sip:kundan@example.net>',"To")).toRepr()=='To: "Kundan Singh" <sip:kundan@example.net>','Header(\'"Kundan Singh" <sip:kundan@example.net>\', "To")');assert((new g.Header('"Kundan"<sip:kundan99@example.net>',"To")).toRepr()=='To: "Kundan" <sip:kundan99@example.net>','Header(\'"Kundan"<sip:kundan99@example.net>\', "To")');assert((new g.Header("Henry <sip:henry.sinnreich@example.net>","fRoM")).toRepr()=='From: "Henry" <sip:henry.sinnreich@example.net>',"Header('Henry <sip:henry.sinnreich@example.net>', \"fRoM\")");assert((new g.Header("application/sdp","conTenT-tyPe")).toRepr()=="Content-Type: application/sdp",'Header("application/sdp", "conTenT-tyPe")');assert((new g.Header("presence; param=value;param2=another","Event")).toRepr()=="Event: presence;param=value;param2=another","Header('presence; param=value;param2=another', 'Event')");assert((new g.Header("78  INVITE","CSeq")).toRepr()=="CSeq: 78 INVITE","Header('78  INVITE', 'CSeq')")};function k(o,n){this.name=(n!==undefined?g._canon(g.str_strip(n)):null);this.value=this._parse(g.str_strip(o),this.name?this.name.toLowerCase():null)}k.prototype._parseParams=function(r,p){try{var o=r.length,s=0;if(r.toLowerCase().indexOf("digest ")===0){return}var w=0;while(s<o){w+=1;if(w>60){console.warn("sip.Header._parseParams: Breaking out of possibly infinite loop");break}var y=r.indexOf("=",s);var u=r.indexOf(";",s);if(u<0){u=o}var q="",x="";if(y>=0&&y<u){q=g.str_strip(r.substring(s,y).toLowerCase());if(r.charAt(y+1)=='"'){y+=1;u=r.indexOf('"',y+1)}x=g.str_strip(r.substring(y+1,u));s=u+1}else{if(y<0||(y>=0&&y>u)){q=g.str_strip(r.substring(s,u).toLowerCase());s=u+1}else{break}}if(q){this[q]=x}}}catch(t){log("ignoring parameter exception: "+t)}};k.prototype._parse=function(t,p){if(g._address.indexOf(p)>=0){var v=new g.Address();v.mustQuote=true;var s=v.parse(t);var q=t.substr(s);t=v;if(q){this._parseParams(q,false)}}else{if(g._comma.indexOf(p)<0&&g._unstructured.indexOf(p)<0){var r=g.str_partition(t,";");t=r[0];var q=r[2];if(q){this._parseParams(q,false)}}else{if(g._comma.indexOf(p)>=0){var o=g.str_partition(t," ");this.authMethod=o[0];var q=o[2];if(q){this._parseParams(q,true)}}else{if(p=="cseq"){nsm=g.str_partition(t," ");var u=g.str_strip(nsm[0]);this.method=g.str_strip(nsm[2]);this.number=parseInt(u);t=u+" "+this.method}}}}return t};k.prototype.toString=function(){var o=this.name.toLowerCase();var r=[];if(g._comma.indexOf(o)<0&&g._unstructured.indexOf(o)<0){var p=["name","value","_viauri"];for(var q in this){if(typeof q=="string"&&p.indexOf(q.toLowerCase())<0&&typeof this[q]!="function"){var n=this[q];if(n&&!/^[a-zA-Z0-9\-\.\!\%\*_\+\`\'\~]*$/.test(n)){n='"'+n+'"'}r.push(n?q.toLowerCase()+"="+n:q)}}}return this.value.toString()+(r.length>0?";"+r.join(";"):"")};k.prototype.toRepr=function(){return this.name+": "+this.toString()};k.prototype.dup=function(){return k(this.toString(),this.name)};k.prototype.getItem=function(n){var o=n.toLowerCase();return(this[o]!==undefined?this[o]:null)};k.prototype.setItem=function(n,p){var o=n.toLowerCase();this[o]=p};k.prototype.hasItem=function(n){return this[n.toLowerCase()]!==undefined};g._testViaUri=function(){assert((new g.Header("SIP/2.0/UDP example.net:5090;ttl=1","Via")).getViaUri().toString()=="sip:example.net:5090;transport=udp","Header('SIP/2.0/UDP example.net:5090;ttl=1', 'Via').getViaUri()");assert((new g.Header("SIP/2.0/UDP 192.1.2.3;rport=1078;received=76.17.12.18;branch=0","Via")).getViaUri().toString()=="sip:76.17.12.18:1078;transport=udp","Header('SIP/2.0/UDP 192.1.2.3;rport=1078;received=76.17.12.18;branch=0', 'Via').getViaUri()");assert((new g.Header("SIP/2.0/UDP 192.1.2.3;maddr=224.0.1.75","Via")).getViaUri().toString()=="sip:224.0.1.75:5060;transport=udp","Header('SIP/2.0/UDP 192.1.2.3;maddr=224.0.1.75', 'Via').getViaUri()")};k.prototype.getViaUri=function(){if(this["_viaUri"]===undefined){if(this.name!="Via"){throw new String("getViaUri() available only on Via header")}var n=g.str_partition(this.value," ");var p=n[0];var r=n[2];var o=p.split("/")[2].toLowerCase();this._viaUri=new g.URI("sip:"+r+";transport="+o);if(!this._viaUri.port){this._viaUri.port=5060}if(this["rport"]!==undefined){try{this._viaUri.port=(typeof this["rport"]=="number"?parseInt(this["rport"]):this["rport"])}catch(q){}}if(o!="tcp"&&o!="sctp"&&o!="tls"){if(this["maddr"]!==undefined){this._viaUri.host=this["maddr"]}else{if(this["received"]!==undefined){this._viaUri.host=this["received"]}}}}return this["_viaUri"]};g._testCreateHeaders=function(){var n=g.Header.createHeaders("Event: presence, reg");assert(n[0]=="Event",'Header.createHeaders("Event: presence, reg")[0] != "Event"');assert(n[1].length==2,'Header.createHeaders("Event: presence, reg")[1].length != 2');assert(n[1][0].toRepr()=="Event: presence",'Header.createHeaders("Event: presence, reg")[1][0].toRepr() != "Event: presence"');assert(n[1][1].toRepr()=="Event: reg",'Header.createHeaders("Event: presence, reg")[1][1].toRepr() != "Event: reg"')};k.createHeaders=function(p){var n=g.str_partition(p,":");var o=g.str_strip(n[0]);p=g.str_strip(n[2]);var q;if(g._comma.indexOf(o.toLowerCase())>=0){q=[new g.Header(p,o)]}else{q=g.map(function(r){return new g.Header(r,o)},g._getValues(p))}return[g._canon(o),q]};g.Header=k;g._testMessage=function(){var n="INVITE sip:kundan@example.net SIP/2.0\r\nFrom: <sip:henry@iptel.org>\r\nTo: <sip:kundan@example.net>\r\nCall-ID: 1234@127.0.0.1\r\nCSeq: 1 INVITE\r\nContent-Length: 10\r\n\r\nsomebody\r\n";assert((new g.Message(n)).toString()==n,"Message(t1)")};function i(n){this.method=null;this.uri=null;this.response=null;this.responsetext=null;this.protocol="SIP/2.0";this._body=null;this._headers={};if(n!==undefined){this._parse(n)}}i._keywords=["method","uri","response","responsetext","protocol","_body","body","_headers"];i._single=["call-id","content-disposition","content-length","content-type","cseq","date","expires","event","max-forwards","organization","refer-to","referred-by","server","session-expires","subject","timestamp","to","user-agent"];i.prototype.getItem=function(n){var o=n.toLowerCase();return(this._headers[o]!==undefined?this._headers[o]:null)};i.prototype.setItem=function(n,p){var o=n.toLowerCase();this._headers[o]=p};i.prototype.delItem=function(n){var o=n.toLowerCase();delete this._headers[o]};i.prototype.hasItem=function(n){var o=n.toLowerCase();return(this._headers[o]!==undefined)};i.prototype._parse=function(y){var n=y.indexOf("\r\n\r\n");var s=y.indexOf("\n\n");var A,u;if(n>=0&&s>=0){if(n<s){s=-1}else{n=-1}}else{if(n<0&&s<0){log("Message.parse() did not find LFLF or CRLFCRLF")}}if(n>=0){A=y.substr(0,n);u=y.substr(n+4)}else{if(s>=0){A=y.substr(0,s);u=y.substr(s+2)}else{A=y;u=""}}var r,p;var C=A.indexOf("\n");if(C>0&&A.charAt(C-1)=="\r"){r=A.substr(0,C-1);p=A.substr(C+1)}else{if(C>0){r=A.substr(0,C);p=A.substr(C+1)}}var x=r.split(" ");if(x.length<3){throw new String("not enough parts in first line")}if(x[1].match(/^\d+$/)){this.protocol=x.shift();this.response=parseInt(x.shift());this.responsetext=x.join(" ")}else{if(x.length>3){throw new String("invalid number of parts in request line")}else{this.method=x[0];this.uri=new g.URI(x[1]);this.protocol=x[2]}}x=p.split("\n");var t=false;for(var E=0;E<x.length;++E){if(x[E]!=undefined){if(x[E].search(",\r")!=-1){if(t==false){B=E;t=true}else{x[E]=undefined}x[B]=x[B].concat(x[E+1])}else{if(t==true){x[E]=undefined}t=false}}}for(var E=0;E<x.length;++E){var F=x[E];if(F==undefined){continue}if(F&&F.charAt(F.length-1)=="\r"){F=F.substr(0,F.length-1)}if(F.charAt(0)==" "||F.charAt(0)=="\t"){}try{var q=g.Header.createHeaders(F);var H=q[0];var o=q[1];if(!this.hasItem(H)){this.setItem(H,o.length>1?o:o[0])}else{if(i._single.indexOf(H)<0){var w=this.getItem(H);if(!g.is_array(w)){this.setItem(H,[w])}w=this.getItem(H);for(var B=0;B<o.length;++B){w.push(o[B])}}}}catch(G){log("error parsing "+F);if(G.stack!==undefined){log(G.stack)}else{log(G)}continue}}var v=(this.hasItem("Content-Length")?parseInt(this.getItem("Content-Length").value):0);if(u){this.setBody(u);if(v!=u.length){throw new String("invalid content length "+v+" != "+u.length)}}var D=["To","From","CSeq","Call-ID"];for(var z=0;z<D.length;++z){if(!this.hasItem(D[z])){throw new String("mandatory header "+D[z]+" is missing")}}};i.prototype.toString=function(){var n;if(this.method){n=this.method+" "+this.uri.toString()+" "+this.protocol+"\r\n"}else{if(this.response){n=this.protocol+" "+this.response+" "+this.responsetext+"\r\n"}else{return null}}var t=["via","from","to","call-id","cseq","max-forwards"];for(var r in this._headers){if(typeof this._headers[r]!="function"&&t.indexOf(r)<0){t.push(r)}}for(var q=0;q<t.length;++q){var r=t[q];if(this._headers[r]!==undefined){var o=this._headers[r];if(g.is_array(o)){for(var p=0;p<o.length;++p){n+=o[p].toRepr()+"\r\n"}}else{n+=o.toRepr()+"\r\n"}}}n+="\r\n";if(this.body){n+=this.body}return n};i.prototype.dup=function(){return new i(this.toString())};i.prototype.first=function(o){var n=this.getItem(o);return(g.is_array(n)?n[0]:n)};i.prototype.all=function(){var q=g.map(function(s){return s.toLowerCase()},arguments?arguments:[]);var n=[];for(var r=0;r<q.length;++r){var o=this.getItem(q[r]);if(o!==null){if(g.is_array(o)){for(var p=0;p<o.length;++p){n.push(o[p])}}else{n.push(o)}}}return n};i.prototype.insert=function(p,n){if(p&&p.name){if(!this.hasItem(p.name)){this.setItem(p.name,p)}else{var o=this.getItem(p.name);if(!g.is_array(o)){this.setItem(p.name,[o])}o=this.getItem(p.name);if(n){o.push(p)}else{o.splice(0,0,p)}}}};i.prototype.del=function(o,n){if(n===undefined){this.deleteItem(o)}else{var p=this.all(o);try{p.splice(n,1)}catch(q){}if(p.length==0){this.delItem(o)}else{if(p.length==1){this.setItem(o,p[0])}else{this.setItem(o,p)}}}};i.prototype.setBody=function(n){this.body=n;this.setItem("Content-Length",new g.Header(n?""+n.length:0,"Content-Length"))};i._populateMessage=function(n,q,p){if(q){for(var o=0;o<q.length;++o){n.insert(q[o],true)}}if(p){n.setBody=p}else{n.setItem("Content-Length",new g.Header("0","Content-Length"))}};i.createRequest=function(r,p,q,o){var n=new g.Message();n.method=r;n.uri=typeof p=="string"?new g.URI(p):p;n.protocol="SIP/2.0";i._populateMessage(n,q,o);if(n.hasItem("CSeq")&&n.getItem("CSeq").method!=r){n.setItem("CSeq",new g.Header(""+n.getItem("CSeq").number+" "+r,"CSeq"))}return n};i.createResponse=function(o,t,s,q,p){var n=new g.Message();n.response=o;n.responsetext=t;if(p!==undefined){n.setItem("To",p.getItem("To"));n.setItem("From",p.getItem("From"));n.setItem("CSeq",p.getItem("CSeq"));n.setItem("Call-ID",p.getItem("Call-ID"));n.setItem("Via",p.getItem("Via"));if(o==100&&p.hasItem("Timestamp")){n.setItem("Timestamp",p.getItem("Timestamp"))}}i._populateMessage(n,s,q);return n};i.prototype.is1xx=function(){return this.response&&Math.floor(this.response/100)==1};i.prototype.is2xx=function(){return this.response&&Math.floor(this.response/100)==2};i.prototype.is3xx=function(){return this.response&&Math.floor(this.response/100)==3};i.prototype.is4xx=function(){return this.response&&Math.floor(this.response/100)==4};i.prototype.is5xx=function(){return this.response&&Math.floor(this.response/100)==5};i.prototype.is6xx=function(){return this.response&&Math.floor(this.response/100)==6};i.prototype.isfinal=function(){return this.response&&this.response>=200};g.Message=i;function j(n){this.branch=null;this.id=null;this.stack=null;this.app=null;this.request=null;this.transport=null;this.remote=null;this.tag=null;this.state=null;this.server=n;this.timers={};this.timer=new g.Timer();this.close=function(){this.stopTimers();if(this.stack){if(this.stack.transactions[this.id]!==undefined){delete this.stack.transactions[this.id]}}};this.setState=function(o){this.state=o;if(this.state=="terminated"){this.close()}};this.getHeaders=function(){var o=this.request;return g.map(function(p){return o.getItem(p)},["To","From","CSeq","Call-ID"])};this.createAck=function(){return(this.request&&!this.server?i.createRequest("ACK",this.request.uri.toString(),this.getHeaders()):null)};this.createCancel=function(){var o=(this.request&&!this.server?i.createRequest("CANCEL",this.request.uri.toString(),this.getHeaders()):null);if(o&&this.request.hasItem("Route")){o.setItem("Route",this.request.getItem("Route"))}if(o){o.setItem("Via",this.request.first("Via"))}return o};this.createResponse=function(p,r){var o=(this.request&&this.server?i.createResponse(p,r,null,null,this.request):null);var q=o.getItem("To");if(p!=100&&q.tag===undefined){q.tag=this.tag}return o};this.startTimer=function(o,p){if(p>0){var q;if(this.timers[o]!==undefined){q=this.timers[o]}else{q=this.stack.createTimer(this);this.timers[o]=q}q.delay=p;q.start()}};this.stopTimers=function(){for(var p in this.timers){var o=this.timers[p];delete this.timers[p];o.stop()}};this.timedout=function(r){if(r.running){r.stop()}var q=false;for(var p in this.timers){var o=this.timers[p];if(o===r){delete this.timers[p];if(!q){q=true;this.timeout(p,r.delay)}}}}}j.createBranch=function(p,r){var t,s,o,n;if(g.is_array(p)){t=p[0];s=p[1];o=p[2];n=p[3];localtag=p[4];remotetag=p[5]}else{t=p.getItem("To").value;s=p.getItem("From").value;o=p.getItem("Call-ID").value;n=p.getItem("CSeq").number}var q=t.toString().toLowerCase()+"|"+s.toString().toLowerCase()+"|"+o.toString()+"|"+n.toString()+"|"+localtag+"|"+((remotetag!=null)?remotetag:"");return"z9hG4bK"+g.b64_urlsafe_encode(g.MD5(q))};j.createProxyBranch=function(o,p){var n=o.first("Via");if(n&&n.branch!==undefined){return"z9hG4bK"+g.b64_urlsafe_encode(g.MD5(n.branch))}else{return j.createBranch(o,p)}};j.createId=function(n,o){return(o!="ACK"&&o!="CANCEL"?n:n+"|"+o)};j.createServer=function(o,s,r,v,n,u){if(u===undefined){u=true}var q=(r.method=="INVITE"?new g.InviteServerTransaction():new g.ServerTransaction());q.stack=o;q.app=s;q.request=r;q.transport=v;q.tag=n;var p=r.first("Via");q.remote=(p?p.getViaUri().getHostPort():null);q.branch=(p&&p.branch!==undefined?p.branch:j.createBranch(r,true));q.id=j.createId(q.branch,r.method);o.transactions[q.id]=q;if(u){q.start()}else{q.state="trying"}return q};j.createClient=function(n,s,q,u,r){var p=(q.method=="INVITE"?new g.InviteClientTransaction():new g.ClientTransaction());p.stack=n;p.app=s;p.request=q;p.remote=r;p.transport=u;var o=q.first("Via");p.branch=(o&&o.branch!==undefined?o.branch:j.createBranch(q,false));p.id=j.createId(p.branch,q.method);n.transactions[p.id]=p;p.start();return p};j.equals=function(s,q,p){var o=s.request;var n=o.getItem("To").value.uri.equals(q.getItem("To").value.uri);n=n&&o.getItem("From").value.uri.equals(q.getItem("From").value.uri);n=n&&(o.getItem("Call-ID").value==q.getItem("Call-ID").value);n=n&&(q.getItem("CSeq").value==q.getItem("CSeq").value);n=n&&(o.getItem("From").tag==q.getItem("From").tag);n=n&&(p.server==s.server);return n};g.Transaction=j;function m(p,o,n){this.T1=(p===undefined?500:p);this.T2=(o===undefined?4000:o);this.T4=(n===undefined?5000:n)}m.prototype.A=function(){return this.T1};m.prototype.B=function(){return 64*this.T1};m.prototype.D=function(){return Math.max(64*this.T1,32000)};m.prototype.E=m.prototype.A;m.prototype.F=m.prototype.B;m.prototype.G=m.prototype.A;m.prototype.H=m.prototype.B;m.prototype.I=function(){return this.T4};m.prototype.J=m.prototype.B;m.prototype.K=m.prototype.I;g.Timer=m;function b(){this.base=g.Transaction;this.base(false);delete this.base;this.start=function(){this.state="trying";if(!this.transport.reliable){this.startTimer("E",this.timer.E())}this.startTimer("F",this.timer.F());this.stack.send(this.request,this.remote,this.transport)};this.receivedResponse=function(n){if(n.is1xx()){if(this.state=="trying"){this.state="proceeding";this.app.receivedResponse(this,n)}else{if(this.state=="proceeding"){this.app.receivedResponse(this,n)}}}else{if(n.isfinal()){if(this.state=="trying"||this.state=="proceeding"){this.state="completed";this.app.receivedResponse(this,n);if(!this.transport.reliable){this.startTimer("K",this.timer.K())}else{this.timeout("K",0)}}}}};this.timeout=function(n,o){if(this.state=="trying"||this.state=="proceeding"){if(n=="E"){o=(this.state=="trying"?Math.min(2*o,this.timer.T2):this.timer.T2);this.startTimer("E",o);this.stack.send(this.request,this.remote,this.transport)}else{if(n=="F"){this.state="terminated";this.app.timeout(this)}}}else{if(this.state=="completed"){if(n=="K"){this.state="terminated"}}}};this.error=function(n){if(this.state=="trying"||this.state=="proceeding"){this.state="terminated";this.app.error(this,n)}}}g.ClientTransaction=b;function e(){this.base=g.Transaction;this.base(true);delete this.base;this.start=function(){this.state="trying";this.app.receivedRequest(this,this.request)};this.receivedRequest=function(n){if(this.request.method==n.method){if(this.state=="proceeding"||this.state=="completed"){this.stack.send(this.lastResponse,this.remote,this.transport)}else{if(this.state=="trying"){}}}};this.timeout=function(n,o){if(this.state=="completed"){if(n=="J"){this.state="terminated"}}};this.error=function(n){if(this.state=="completed"){this.state="terminated";this.app.error(this,n)}};this.sendResponse=function(n){this.lastResponse=n;if(n.is1xx()){if(this.state=="trying"||this.state=="proceedings"){this.state="proceeding";this.stack.send(n,this.remote,this.transport)}}else{if(n.isfinal()){if(this.state=="proceeding"||this.state=="trying"){this.state="completed";this.stack.send(n,this.remote,this.transport);if(!this.transport.reliable){this.startTimer("J",this.timer.J())}else{this.timeout("J",0)}}}}}}g.ServerTransaction=e;function l(){this.base=g.Transaction;this.base(false);delete this.base;this.start=function(){this.state="calling";if(!this.transport.reliable){this.startTimer("A",this.timer.A())}this.startTimer("B",this.timer.B());this.stack.send(this.request,this.remote,this.transport)};this.receivedResponse=function(n){if(n.is1xx()){if(this.state=="calling"){this.state="proceeding";this.app.receivedResponse(this,n)}else{if(this.state=="proceeding"){this.app.receivedResponse(this,n)}}}else{if(n.is2xx()){if(this.state=="calling"||this.state=="proceeding"){this.state="terminated";this.app.receivedResponse(this,n)}else{if(this.state=="terminated"){this.stack.send(this.createAck(n),this.remote,this.transport)}}}else{if(this.state=="calling"||this.state=="proceeding"){this.state="completed";this.stack.send(this.createAck(n),this.remote,this.transport);this.app.receivedResponse(this,n);if(!this.transport.reliable){this.startTimer("D",this.timer.D())}else{this.timeout("D",0)}}else{if(this.state=="completed"){this.stack.send(this.createAck(n),this.remote,this.transport)}}}}};this.timeout=function(n,o){if(this.state=="calling"){if(n=="A"){this.startTimer("A",2*o);this.stack.send(this.request,this.remote,this.transport)}else{if(n=="B"){this.state="terminated";this.app.timeout(this)}}}else{if(this.state=="completed"){if(n=="D"){this.state="terminated"}}}};this.error=function(n){if(this.state=="calling"||this.state=="completed"){this.state="terminated";this.app.error(this,n)}};this.createAck=function(o){if(!this.request){throw new String("No transaction request found")}var n=i.createRequest("ACK",this.request.uri.toString());n.setItem("Call-ID",this.request.getItem("Call-ID"));n.setItem("From",this.request.getItem("From"));n.setItem("To",o?o.getItem("To"):this.request.getItem("To"));n.setItem("Via",this.request.first("Via"));n.setItem("CSeq",new g.Header(""+this.request.getItem("CSeq").number+" ACK","CSeq"));if(this.request.hasItem("Route")){n.setItem("Route",this.request.getItem("Route"))}return n}}g.InviteClientTransaction=l;function a(){this.base=g.Transaction;this.base(true);delete this.base;this.start=function(){this.state="proceeding";this.sendResponse(this.createResponse(100,"Trying"));this.app.receivedRequest(this,this.request)};this.receivedRequest=function(n){if(this.request.method==n.method){if(this.state=="proceeding"||this.state=="completed"){this.stack.send(this.lastResponse,this.remote,this.transport)}}else{if(n.method=="CANCEL"){this.app.receivedRequest(this,n)}else{if(n.method=="ACK"){if(this.state=="completed"){this.state="confirmed";if(!this.transport.reliable){this.startTimer("I",this.timer.I())}else{this.timeout("I",0)}this.app.receivedRequest(this,n)}else{if(this.state=="confirmed"){}else{if(this.state=="terminated"){this.app.receivedRequest(this,n)}}}}}}};this.timeout=function(n,o){if(this.state=="completed"){if(n=="G"){this.startTimer("G",Math.min(2*o,this.timer.T2));this.stack.send(this.lastResponse,this.remote,this.transport)}else{if(n=="H"){this.state="terminated";this.app.timeout(this)}}}else{if(this.state=="confirmed"){if(n=="I"){this.state="terminated"}}}};this.error=function(n){if(this.state=="proceeding"||this.state=="trying"||this.state=="confirmed"){this.state="terminated";this.app.error(this,n)}};this.sendResponse=function(n){this.lastResponse=n;if(n.is1xx()){if(this.state=="proceeding"||this.state=="trying"){this.stack.send(n,this.remote,this.transport)}}else{if(n.is2xx()){if(this.state=="proceeding"||this.state=="trying"){this.state="terminated";this.stack.send(n,this.remote,this.transport)}}else{if(this.state=="proceeding"||this.state=="trying"){this.state="completed";if(!this.transport.reliable){this.startTimer("G",this.timer.G())}this.startTimer("H",this.timer.H());this.stack.send(n,this.remote,this.transport)}}}}}g.InviteServerTransaction=a;function c(n,o,p){if(n!==undefined){this.stack=n;this.request=(o===undefined?null:o);this.server=(p===undefined?(o!==null):p);this.name=(this.server?"UAS":"UAC");this.transaction=null;this.cancelTransaction=null;this.breaker=false;this.cancelRequest=null;this.callId=(o&&o.hasItem("Call-ID")?o.getItem("Call-ID").value:this.stack.getNewCallId());this.remoteParty=(o&&o.hasItem("From")?o.getItem("From").value:null);this.localParty=(o&&o.hasItem("To")?o.getItem("To").value:null);this.localTag=this.stack.tag+Math.floor(10000000000*Math.random());this.remoteTag=null;this.subject=(o&&o.hasItem("Subject")?o.getItem("Subject").value:null);this.secure=(o&&o.uri.scheme=="sips"?true:false);this.maxForwards=70;this.routeSet=[];this.localTarget=null;this.remoteTarget=null;this.remoteCandidates=null;this.localSeq=0;this.remoteSeq=0;this.contact=new g.Address(this.stack.uri.toString());if(this.localParty&&this.localParty.uri.user){this.contact.uri.user=this.localParty.uri.user}this.autoack=true;this.auth={}}}c.prototype.toString=function(){return"<"+this.name+" call-id="+this.callId+" />"};c.prototype.createTransaction=function(n){return g.Transaction.createServer(this.stack,this,n,this.stack.transport,this.stack.tag)};c.prototype.createRequest=function(n,w,y){if(y===undefined){y=null}if(w===undefined){w=null}this.server=false;if(!this.remoteParty){throw new String("No remoteParty for UAC")}if(!this.localParty){this.localParty=new g.Address('"Anonymous" <sip:anonymous@anonymous.invalid>')}var q=new g.URI(this.remoteTarget?this.remoteTarget.toString():this.remoteParty.uri.toString());if(n=="REGISTER"){q.user=null}if(!this.secure&&q.secure){this.secure=true}if(n!="ACK"&&n!="CANCEL"){this.localSeq=this.localSeq+1}var A=new g.Header(this.remoteParty.toString(),"To");A.value.uri.secure=this.secure;var o=new g.Header(this.localParty.toString(),"From");o.value.uri.secure=this.secure;o.tag=this.localTag;var u=new g.Header(""+this.localSeq+" "+n,"CSeq");if(n=="REGISTER"){this.callId=this.stack.getNewCallId()}var v=new g.Header(this.callId,"Call-ID");var t=new g.Header(""+this.maxForwards,"Max-Forwards");var z=this.stack.createVia(this.secure);z.branch=g.Transaction.createBranch([A.value,o.value,v.value,u.number,this.localTag,this.remoteTag],false);if(!this.localTarget){this.localTarget=this.stack.uri.dup();this.localTarget.user=this.localParty.uri.user}if(n!="MESSAGE"){var r=new g.Header(this.localTarget.toString(),"Contact");if(this.breaker){r.value.uri.param.transport="ws";r.value.uri.param["rtcweb-breaker"]="yes"}r.value.uri.secure=this.secure;var p=[A,o,u,v,t,z,r]}else{var p=[A,o,u,v,t,z]}if(this.routeSet){for(var s=0;s<this.routeSet.length;++s){var x=new g.Header(this.routeSet[s].toString(),"Route");x.value.uri.secure=this.secure;p.push(x)}}if(y){p.append(new g.Header(y,"Content-Type"))}this.request=i.createRequest(n,q.toString(),p,w);return this.request};c.prototype.createRegister=function(n){if(n){this.remoteParty=new g.Address(n.toString())}if(!this.localParty){this.localParty=new g.Address(this.remoteParty.toString())}return this.createRequest("REGISTER")};c.prototype.sendRequest=function(p){if(!this.request&&p.method=="REGISTER"){if(this.transaction&&this.transaction.state!="completed"&&this.transaction.state!="terminated"){throw new String("Cannot re-REGISTER since pending registration")}}this.request=p;if(!p.hasItem("Route")){this.remoteTarget=p.uri}var q=this.remoteTarget;if(p.hasItem("Route")){var n=p.all("Route");if(n.length>0){q=n[0].value.uri;if(!q||q.param.lr===undefined){log("strict route target=",q,"routes=",n);n.shift();if(n.length>0){log("appending our route");n.append(new g.Header(p.uri.toString(),"Route"))}p.setItem("Route",n);p.uri=q}}}this.stack.sending(this,p);var o=q.dup();o.port=(q.port?q.port:(q.secure?5061:5060));if(o.host=="localhost"){this.remoteCandidates=[new g.URI("sip:127.0.0.1:"+o.port)];this.tryNextCandidate()}else{if(g.isIPv4(o.host)){this.remoteCandidates=[o];this.tryNextCandidate()}else{var r=this;this.stack.resolve(o.host,"A",function(t,s){r.remoteCandidates=g.map(function(u){return new g.URI("sip:"+u.address+":"+o.port)},s);r.tryNextCandidate()})}}};c.prototype.tryNextCandidate=function(){if(!this.remoteCandidates||this.remoteCandidates.length==0){this.error(null,"cannot resolve DNS target")}else{target=this.remoteCandidates.shift();if(this.request.method!="ACK"){this.transaction=g.Transaction.createClient(this.stack,this,this.request,this.stack.transport,target.getHostPort())}else{this.stack.send(this.request,target.getHostPort())}}};c.prototype.retryNextCandidate=function(){if(!this.remoteCandidates||this.remoteCandidates.length==0){throw new String("No more DNS resolved address to try")}var n=new g.URI(this.remoteCandiates.shift());this.request.first("Via").branch+="A";this.transaction=g.Transaction.createClient(this.stack,this,this.request,this.stack.transport,n.getHostPort())};c.prototype.canCreateDialog=function(o,n){return(n.is2xx()&&(o.method=="INVITE"||o.method=="SUBSCRIBE"))||(n.is1xx()&&n.getItem("To")["tag"]!==undefined)};c.prototype.receivedResponse=function(q,n){if(q&&q!==this.transaction){if(q&&q!==this.cancelTransaction){log("Invalid transaction received "+q+" != "+this.transaction);return}}if(n.all("Via").length>1){}if(n.is1xx()){if(this.cancelRequest){var p=g.Transaction.createClient(this.stack,this,this.cancelRequest,q.transport,q.remote);this.cancelRequest=null}else{this.stack.receivedResponse(this,n)}}else{if(n.response==401||n.response==407){if(!this.authenticate(n,this.transaction)){this.stack.receivedResponse(this,n)}}else{if(this.canCreateDialog(this.request,n)){var o=g.Dialog.createClient(this.stack,this.request,n,q);o.autoack=this.autoack;this.stack.dialogCreated(o,this);this.stack.receivedResponse(o,n);if(o.autoack&&this.request.method=="INVITE"&&n.getItem("CSeq")["method"]=="INVITE"){o.sendRequest(o.createRequest("ACK"))}}else{this.stack.receivedResponse(this,n)}}}};c.prototype.receivedRequest=function(q,p){if(q&&this.transaction&&q!=this.transaction&&p.method!="CANCEL"){throw new String("Invalid transaction for received request")}this.server=true;if(p.uri.scheme!="sip"&&p.uri.scheme!="sips"){q.sendResponse(q.createResponse(416,"Unsupported URI scheme"));return}if(p.getItem("To")["tag"]===undefined&&p.method!="CANCEL"){if(this.stack.findOtherTransaction(p,q)){q.sendResponse(q.createResponse(482,"Loop detected - found another transaction"));return}}if(p.hasItem("Require")){if(p.method!="CANCEL"&&p.method!="ACK"){var n=q.createResponse(420,"Bad extension");n.setItem("Unsupported",new g.Header(p.Require.value,"Unsupported"));q.sendResponse(n);return}}if(q&&p.method!="CANCEL"){this.transaction=q}if(p.method=="CANCEL"){var o=this.stack.findTransaction(g.Transaction.createId(q.branch,"INVITE"));if(!o){q.sendResponse(q.createResponse(481,"Original transaction not found"));return}if(o.state=="proceeding"||o.state=="trying"){o.sendResponse(o.createResponse(487,"Request Terminated"))}q.sendResponse(q.createResponse(200,"OK"));this.stack.cancelled(this,p);return}this.stack.receivedRequest(this,p)};c.prototype.sendResponse=function(p,t,r,s,o){if(t===undefined){t=null}if(r===undefined){r=null}if(s===undefined){s=null}if(o===undefined){o=true}if(!this.request){throw new String("Invalid request in sending a response")}if(typeof p=="number"){p=this.createResponse(p,t,r,s)}if(!o){if(this.request.hasItem("Record-Route")){p.setItem("Record-Route",this.request.getItem("Record-Route"))}if(!p.hasItem("Contact")){var n=new g.Address(this.contact.toString());if(!n.uri.user){n.uri.user=this.request.getItem("To").value.uri.user}n.uri.secure=this.secure;p.setItem("Contact",new g.Header(n.toString(),"Contact"))}this.stack.sending(q,p)}else{if(o&&this.canCreateDialog(this.request,p)){if(this.request.hasItem("Record-Route")){p.setItem("Record-Route",this.request.getItem("Record-Route"))}if(!p.hasItem("Contact")){var n=new g.Address(this.contact.toString());if(!n.uri.user){n.uri.user=this.request.getItem("To").value.uri.user}n.uri.secure=this.secure;p.setItem("Contact",new g.Header(n.toString(),"Contact"))}var q=h.createServer(this.stack,this.request,p,this.transaction);this.stack.dialogCreated(q,this);this.stack.sending(q,p)}else{this.stack.sending(this,p)}}if(!this.transaction){this.stack.send(p,p.first("Via").getViaUri().getHostPort())}else{this.transaction.sendResponse(p)}};c.prototype.createResponse=function(n,q,o,p){if(o===undefined){o=null}if(p==undefined){p=null}if(!this.request){throw new String("Invalid request in creating a response")}n=g.Message.createResponse(n,q,null,o,this.request);if(p){n.setItem("Content-Type",new g.Header(p,"Content-Type"))}if(n.response!=100&&n.getItem("To")["tag"]===undefined){n.getItem("To")["tag"]=this.localTag}return n};c.prototype.sendCancel=function(){if(!this.transaction){throw new String("No transaction for sending CANCEL")}this.cancelRequest=this.transaction.createCancel();this.cancelRequest.setItem("Max-Forwards",new g.Header(""+this.maxForwards,"Max-Forwards"));if(this.transaction.state!="trying"&&this.transaction.state!="calling"){if(this.transaction.state=="proceeding"){var n=g.Transaction.createClient(this.stack,this,this.cancelRequest,this.transaction.transport,this.transaction.remote);this.cancelTransaction=n}this.cancelRequest=null}};c.prototype.timeout=function(n){if(n&&n!=this.transaction){return}this.transaction=null;if(!this.server){if(this.remoteCandidates&&this.remoteCandidates.length>0){this.retryNextCandidate()}else{this.receivedResponse(null,i.createResponse(408,"Request timeout",null,null,this.request))}}};c.prototype.error=function(o,n){if(o&&o!=this.transaction){return}this.transaction=null;if(!this.server){if(this.remoteCandidates&&this.remoteCandidates.length>0){this.retryNextCandidate()}else{this.receivedResponse(null,i.createResponse(503,"Service unavailable - "+n,null,null,this.request))}}};c.prototype.authenticate=function(p,o){var v=p.first("WWW-Authenticate")||p.first("Proxy-Authenticate")||null;if(!v){return false}var q=new g.Message(o.request.toString());var t=false;var s=false;var n=q.all("Authorization","Proxy-Authorization");for(var r=0;r<n.length;++r){var u=n[r];console.log("handling b="+u);if((v.realm==u.realm)&&(((v.name=="WWW-Authenticate")&&(u.name=="Authorization"))||((v.name=="Proxy-Authenticate")&&(u.name=="Proxy-Authorization")))){s=true;break}}if(!s&&v.realm!==undefined){var x=this.stack.authenticate(this,v);if(!x||v.password===undefined&&v.hashValue===undefined){return false}var w=g.createAuthorization(v.value,v.username,v.password,q.uri.toString(),this.request.method,this.request.body,this.auth);if(w){q.delItem("Authorization");q.insert(new g.Header(w,(v.name=="WWW-Authenticate"?"Authorization":"Proxy-Authorization")),true);t=true}}if(t){this.localSeq=this.localSeq+1;q.setItem("CSeq",new g.Header(""+this.localSeq+" "+q.method,"CSeq"));q.first("Via").branch=g.Transaction.createBranch(q,false);this.request=q;this.transaction=g.Transaction.createClient(this.stack,this,this.request,this.transaction.transport,this.transaction.remote);return true}else{return false}};g.UserAgent=c;function h(n,o,p,q){if(q===undefined){q=null}this.base=g.UserAgent;this.base(n,o,p,q);delete this.base;this.servers=[];this.clients=[];this._id=null;if(q){q.app=this}}h.prototype=new g.UserAgent;h.createServer=function(n,p,o,r){var q=new h(n,p,true);q.request=p;q.routeSet=(p.hasItem("Record-Route")?p.all("Record-Route"):null);while(q.routeSet&&g.isMulticast(q.routeSet[0].value.uri.host)){log("deleting top multicast routeSet "+q.routeSet[0]);q.routeSet.shift();if(q.routeSet.length==0){q.routeSet=null}}q.secure=p.uri.secure;q.localSeq=p.getItem("CSeq").number;q.remoteSeq=p.getItem("CSeq").number;q.callId=p.getItem("Call-ID").value;q.localTag=(o.getItem("To")["tag"]||"");q.remoteTag=(o.getItem("From")["tag"]||"");q.localParty=new g.Address(p.getItem("To").value.toString());q.remoteParty=new g.Address(p.getItem("From").value.toString());q.stack.log("request contact "+p.Contact);if(p.hasItem("Contact")){q.remoteTarget=new g.URI(p.first("Contact").value.uri.toString())}n.dialogs[q.getId()]=q;q.servers.push(r);return q};h.createClient=function(n,p,o,r){var q=new h(n,p,false);q.request=p;q.routeSet=(o.hasItem("Record-Route")?o.all("Record-Route").reverse():null);q.secure=p.uri.secure;q.localSeq=p.getItem("CSeq").number;q.remoteSeq=0;q.callId=p.getItem("Call-ID").value;q.localTag=(o.getItem("From")["tag"]||"");q.remoteTag=(o.getItem("To")["tag"]||"");q.localParty=new g.Address(p.getItem("From").value.toString());q.remoteParty=new g.Address(p.getItem("To").value.toString());if(o.hasItem("Contact")){q.remoteTarget=new g.URI(o.first("Contact").value.uri.toString())}n.dialogs[q.getId()]=q;return q};h.extractId=function(n){var o=n.getItem("Call-ID");var q=n.getItem("From");var p=n.getItem("To");return o.value+"|"+(n.method?p.tag:q.tag)+"|"+(n.method?q.tag:p.tag)};h.prototype.close=function(){if(this.stack){var n=this.getId();if(this.stack.dialogs[n]!==undefined){delete this.stack.dialogs[n]}}};h.prototype.getId=function(){if(!this._id){this._id=this.callId+"|"+this.localTag+"|"+this.remoteTag}return this._id};h.prototype.createRequest=function(q,o,p){var n=g.UserAgent.prototype.createRequest.apply(this,[q,o!==undefined?o:null,p!==undefined?p:null]);if(this.remoteTag){n.getItem("To")["tag"]=this.remoteTag}if(this.routeSet&&this.routeSet.length>0&&this.routeSet[0].value.uri.param.lr===undefined){n.uri=this.routeSet[0].value.uri.dup();if(n.uri.param.lr!==undefined){delete n.uri.param.lr}}return n};h.prototype.createResponse=function(n,r,p,q){if(this.servers.length==0){throw new String("No server transaction to create response")}var o=this.servers[0].request;n=g.Message.createResponse(n,r,null,p!==undefined?p:null,o);if(q){n.setItem("Content-Type",new g.Header(q,"Content-Type"))}if(n.response!=100&&n.getItem("To")["tag"]===undefined){n.getItem("To")["tag"]=this.localTag}return n};h.prototype.sendResponse=function(o,s,q,r,n){if(n===undefined){n=true}if(this.servers.length==0){throw new String("No server transaction to send response")}this.transaction=this.servers[0];this.request=this.servers[0].request;g.UserAgent.prototype.sendResponse.apply(this,[o,s!==undefined?s:null,q!==undefined?q:null,r!==undefined?r:null,false]);var p=typeof o=="number"?o:o.response;if(p>=200){this.servers.shift()}};h.prototype.sendCancel=function(){if(this.clients.length==0){d.stack.log("No client transaction to send cancel");return}this.transaction=this.clients[0];this.request=this.clients[0].request;g.UserAgent.prototype.sendCancel.apply(this,[])};h.prototype.receivedRequest=function(o,n){if(this.remoteSeq!=0&&n.getItem("CSeq").number<this.remoteSeq){d.stack.log("Dialog.receivedRequest() CSeq is old "+n.getItem("CSeq").number+" < "+this.remoteSeq);this.sendResponse(500,"Internal server error - invalid CSeq");return}this.remoteSeq=n.getItem("CSeq").number;if(n.method=="INVITE"&&n.hasItem("Contact")){this.remoteTarget=n.first("Contact").value.uri.dup()}if(n.method=="ACK"||n.method=="CANCEL"){this.servers=g.filter(function(p){return p!==o},this.servers);if(n.method=="ACK"){this.stack.receivedRequest(this,n)}else{this.stack.cancelled(this,o.request)}return}if(n.method!="ACK"){this.servers.push(o)}this.stack.receivedRequest(this,n)};h.prototype.receivedResponse=function(o,n){if(n.is2xx()&&n.hasItem("Contact")&&o&&o.request.method=="INVITE"){this.remoteTarget=n.first("Contact").value.uri.dup()}if(!n.is1xx()||(n.is1xx()&&n.getItem("To")["tag"]!==undefined)){this.clients=g.filter(function(p){return p!==o},this.clients)}if(n.response==408||n.response==481){this.close()}if(n.response==401||n.response==407){if(!this.authenticate(n,o)){this.stack.receivedResponse(this,n)}}else{if(o){this.stack.receivedResponse(this,n)}}if(this.autoack&&n.is2xx()&&(o&&o.request.method=="INVITE"||n.getItem("CSeq").method=="INVITE")){this.sendRequest(this.createRequest("ACK"))}};g.Dialog=h;function f(o,p,n){this.tag=""+Math.ceil(10000000000*Math.random());this.app=o;this.transport=p;this.fix_nat=(n!==undefined?n:false);this.closing=false;this.dialogs={};this.transactions={};this.serverMethods=["INVITE","BYE","MESSAGE","SUBSCRIBE","NOTIFY"];this.uri=new g.URI(((p.type=="tls")?"sips":"sip")+":"+p.hostport)}f.prototype.log=function(n){if(this.app){this.app.debug(n)}};f.prototype.close=function(){this.closing=true;for(var o in this.dialogs){delete this.dialogs[o]}for(var n in this.transactions){delete this.transactions[n]}delete this.dialogs;delete this.transactions};f.prototype.getNewCallId=function(){return""+Math.ceil(10000000000*Math.random())+"@"+(this.transport.host||"localhost")};f.prototype.createVia=function(n){if(!this.transport){throw new String("No transport in stack")}if(n&&!this.transport.secure){throw new String("Cannot find a secure transport")}return new g.Header("SIP/2.0/"+this.transport.type.toUpperCase()+" "+this.transport.hostport,"Via")};f.prototype.send=function(o,n,p){if(n&&(n instanceof g.URI)){if(!n.host){throw new String("No host in destination uri")}n=[n.host,n.port||(this.transport.type=="tls"||this.transport.secure?5061:5060)]}if(o instanceof g.Message){if(o.method){if(n&&g.isMulticast(n[0])){o.first("Via")["maddr"]=n[0];o.first("Via")["ttl"]=1}}else{if(o.response){if(!n){n=o.first("Via").getViaUri().getHostPort()}}}o=o.toString()}this.app.send(o,n,this)};f.prototype.received=function(r,u){var n=new g.Message();try{n._parse(r);var q=new g.URI((this.transport.secure?"sips":"sip")+":"+u[0].toString()+":"+u[1]);if(n.method){this.log("received request="+n.method);if(!n.hasItem("Via")){throw new String("No Via header in request")}var p=n.first("Via");if(p.getViaUri().host!=u[0]||p.getViaUri().port!=u[1]){p.received=u[0];p.getViaUri().host=u[0]}if(p.rport!==undefined){p.rport=u[1];p.getViaUri().port=u[1]}if(this.fix_nat&&(n.method=="INVITE"||n.method=="MESSAGE")){this._fixNatContact(n,u)}this._receivedRequest(n,q)}else{if(n.response){this.log("received response="+n.response+" "+n.responsetext);var o=n.getItem("CSeq");if(this.fix_nat&&o&&(o.method=="INVITE"||o.method=="MESSAGE")){this._fixNatContact(n,u)}this._receivedResponse(n,q)}else{throw new String("Received invalid message")}}}catch(t){this.log("Error in received message: "+t);this.log(t.stack);if(n.method&&n.uri&&n.protocol&&n.method!="ACK"){try{this.send(g.Message.createResponse(400,""+t,null,null,n))}catch(s){}}}};f.prototype._fixNatContact=function(n,p){if(n.hasItem("Contact")){var o=n.first("Contact").value.uri;if((o.scheme=="sip"||o.scheme=="sips")&&g.isIPv4(o.host)&&o.host!=p[0]&&!g.isLocal(p[0])&&!g.isLocal(o.host)&&g.isPrivate(o.host)&&!isPrivate(p[0])){this.log("fixing NAT -- private contact from "+o);o.host=p[0];o.port=p[1];this.log("to received "+o)}}};f.prototype._receivedRequest=function(n,q){if(!n.hasItem("Via")){throw new String("No Via header in received request")}var x=n.first("Via")["branch"]!==undefined?n.first("Via")["branch"]:"";var z=null;if(n.method=="ACK"){w=this.findDialog(n);if(w!=null){if(w.transaction instanceof a&&w.transaction!=null){lastResponse=w.transaction.lastResponse;if(lastResponse.isfinal()){if(lastResponse.is2xx()){z=null}else{this.log("Found existing transaction for ACK on non-2xx final response");z=w.transaction}}}else{z=null}}else{z=null}if(n.isfinal()){if(n.is2xx()){z=null}else{}}}else{z=this.findTransaction(x);if(!z){z=this.findTransaction(g.Transaction.createId(x,n.method))}}if(!z){var s=null;if(n.method!="CANCEL"&&n.getItem("To")["tag"]!==undefined){this.log("request has To tag");var w=this.findDialog(n);if(!w){this.log("no exiting dialog found");if(n.method!="ACK"){this.log("creating new UAS");var y=this.createServer(n,q);if(y){s=y}else{this.send(g.Message.createResponse(481,"Dialog does not exist",null,null,n));return}}else{this.log("no dialog for ACK, finding transaction");if(!z&&x!="0"){z=this.findTransaction(g.Transaction.createId(x,"INVITE"))}if(z&&z.state!="terminated"){this.log("Found transaction "+z);z.receivedRequest(n);return}else{this.log("No existing transaction for ACK");var y=this.createServer(n,q);if(y){s=y}else{this.log("Ignoring ACK without transaction");return}}}}else{this.log("found existing dialog");s=w}}else{if(n.method!="CANCEL"){this.log("creating new UAS");var y=this.createServer(n,q);if(y){s=y}else{if(n.method=="OPTIONS"){var v=new g.Message.createResponse(200,"OK",null,null,n);v.setItem("Allow",new g.Header("INVITE, ACK, CANCEL, BYE, OPTIONS","Allow"));this.send(v);return}else{if(n.method!="ACK"){this.send(g.Message.createResponse(405,"Method not allowed",null,null,n));return}}}}else{this.log("finding original transaction");var p=this.findTransaction(g.Transaction.createId(n.first("Via")["branch"],"INVITE"));if(!p){this.send(g.Message.createResponse(481,"Original transaction does not exist",null,null,n));return}else{s=p.app}}}if(s&&n.method!="ACK"){this.log("creating new server transaction");z=s.createTransaction(n);if(n.method=="ACK"&&z&&this.transactions[z.id]!==undefined){delete this.transactions[z.id]}}else{if(s&&n.method=="ACK"){s.receivedRequest(null,n)}else{if(n.method!="ACK"){this.log("could not find any app to handle the request");this.send(i.createResponse(404,"Not found",null,null,n))}}}}else{this.log("found existing transaction");if((z instanceof g.ServerTransaction)||(z instanceof g.InviteServerTransaction)){z.receivedRequest(n)}else{this.log("the transaction was not a server transaction");this.send(g.Message.createResponse(482,"Loop detected",null,null,n))}}};f.prototype._receivedResponse=function(s,q){if(!s.hasItem("Via")){throw new String("No Via header in received response")}var p=s.first("Via")["branch"]!==undefined?s.first("Via")["branch"]:"";var v=s.getItem("CSeq").method;var o=this.findTransaction(g.Transaction.createId(p,v));if(!o){if(v=="INVITE"&&s.is2xx()){var u=this.findDialog(s);if(!u){throw new String("No transaction or dialog for 2xx of INVITE")}else{u.receivedResponse(null,s)}}else{this.log("transaction id "+g.Transaction.createId(p,v)+" not found");if(v=="INVITE"&&s.isfinal()){var n=g.Message.createRequest("ACK",s.getItem("To").value.uri.toString());n.setItem("Call-ID",s.getItem("Call-ID"));n.setItem("From",s.getItem("From"));n.setItem("To",s.getItem("To"));n.setItem("Via",s.first("Via"));n.setItem("CSeq",new g.Header(""+s.getItem("CSeq").number+" ACK","CSeq"));this.send(n,q.getHostPort())}throw new String("No transaction for response")}}else{o.receivedResponse(s)}};f.prototype.createServer=function(o,n){return this.app.createServer(o,n,this)};f.prototype.sending=function(n,o){return(this.app.sending!==undefined?this.app.sending(n,o,this):null)};f.prototype.receivedRequest=function(n,o){this.app.receivedRequest(n,o,this)};f.prototype.receivedResponse=function(o,n){this.app.receivedResponse(o,n,this)};f.prototype.cancelled=function(n,o){this.app.cancelled(n,o,this)};f.prototype.dialogCreated=function(o,n){this.app.dialogCreated(o,n,this)};f.prototype.authenticate=function(n,o){return(this.app.authenticate!==undefined?this.app.authenticate(n,o,this):false)};f.prototype.createTimer=function(n){return this.app.createTimer(n,this)};f.prototype.resolve=function(o,n,p){return this.app.resolve(o,n,p,this)};f.prototype.findDialog=function(n){var o=(n instanceof i?g.Dialog.extractId(n):n.toString());return(this.dialogs[o]!==undefined?this.dialogs[o]:null)};f.prototype.findTransaction=function(n){return(this.transactions[n]!==undefined?this.transactions[n]:null)};f.prototype.findOtherTransaction=function(p,q){for(var o in this.transactions){var n=this.transactions[o];if(n!==q&&g.Transaction.equals(n,p,q)){return n}}return null};g.Stack=f})(sip);(function(a){a._testCreateAuthenticate=function(){assert(a.createAuthenticate("Basic",{realm:"iptel.org"})=='Basic realm="iptel.org"',"createAuthenticate('Basic', ...)");assert(a.createAuthenticate("Digest",{realm:"iptel.org",domain:"sip:iptel.org",nonce:"somenonce"})=='Digest realm="iptel.org", domain="sip:iptel.org", qop="auth", nonce="somenonce", opaque="", stale=FALSE, algorithm=MD5',"createAuthenticate('Digest', ...)")};if(a.onetime===undefined){a.onetime=""+Math.random()}a.createAuthenticate=function(e,l){if(e.toLowerCase()=="basic"){return"Basic realm="+a._quote(l&&l.realm||"")}else{if(e.toLowerCase()=="digest"){var f=["realm","domain","qop","nonce","opaque","stale","algorithm"];var j=["stale","algorithm"];var b=Math.ceil((new Date()).getTime()/1000);var h=l&&l.nonce||a.b64_encode(""+b+" "+a.MD5(""+b+":"+a.onetime));var c={realm:"",domain:"",opaque:"",stale:"FALSE",algorithm:"MD5",qop:"auth",nonce:h};var i=a.map(function(k){return[k,l&&l[k]||c[k]]},f);for(var g in l){if(f.indexOf(g)<0){i.push([g,l[g]])}}return"Digest "+a.map(function(k){return k[0]+"="+(j.indexOf(k[0])<0?a._quote(k[1]):k[1])},i).join(", ")}else{throw new String("invalid auth method "+e)}}};a._testCreateAuthorization=function(){var b={cnonce:"0a4f113b",nc:0};assert(a.createAuthorization('Digest realm="testrealm@host.com", qop="auth", nonce="dcd98b7102dd2f0e8b11d0f600bfb0c093", opaque="5ccc069c403ebaf9f0171e9517f40e41"',"Mufasa","Circle Of Life","/dir/index.html","GET",null,b)=='Digest cnonce="0a4f113b",nc=00000001,nonce="dcd98b7102dd2f0e8b11d0f600bfb0c093",opaque="5ccc069c403ebaf9f0171e9517f40e41",qop=auth,realm="testrealm@host.com",response="6629fae49393a05397450978507c4ef1",uri="/dir/index.html",username="Mufasa"','createAuthorization("Digest...")');assert(a.createAuthorization('Basic realm="WallyWorld"',"Aladdin","open sesame")=="Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==","createAuthorization('Basic...')")};a.createAuthorization=function(D,f,b,k,e,E,c){var w=a.str_partition(a.str_strip(D)," ");var h=w[0];var q=w[2];var p={};var g={username:f,password:b};if(h.toLowerCase()=="basic"){return h+" "+a.basic(g)}else{if(h.toLowerCase()=="digest"){if(q){w=q.split(",");for(var A=0;A<w.length;++A){var C=a.str_partition(a.str_strip(w[A]),"=");var x=C[0];var o=C[2];p[a.str_strip(x.toLowerCase())]=a._unquote(a.str_strip(o))}}var u=["username","realm","nonce","opaque","algorithm"];for(var z=0;z<u.length;++z){var m=u[z];if(p[m]!==undefined){g[m]=p[m]}}g.uri=k||null;g.httpMethod=e||null;if(p.qop!==undefined){var B,l;if(c&&c.cnonce!==undefined){B=c.cnonce;l=c.nc+1}else{B=a.MD5(""+Math.ceil(10000000000*Math.random()));l=1}if(c){c.cnonce=B;c.nc=l}g.qop="auth";g.cnonce=B;l=l.toString(16);if(l.length<8){l="00000000".substr(0,8-l.length)+l}g.nc=l}g.response=a.digest(g);u=["name","authMethod","value","httpMethod","entityBody","password"];var t=[];for(var r in g){if(u.indexOf(r)<0){t.push(r)}}t.sort();return h+" "+a.map(function(i){return i+"="+(i=="qop"||i=="nc"?g[i]:a._quote(g[i]))},t).join(",")}else{throw new String("Invalid auth method -- "+h)}}};a._testBasicDigest=function(){assert(a.basic({username:"Aladdin",password:"open sesame"})=="QWxhZGRpbjpvcGVuIHNlc2FtZQ==","basic()");var b={httpMethod:"GET",username:"Mufasa",password:"Circle Of Life",realm:"testrealm@host.com",algorithm:"md5",nonce:"dcd98b7102dd2f0e8b11d0f600bfb0c093",uri:"/dir/index.html",qop:"auth",nc:"00000001",cnonce:"0a4f113b",opaque:"5ccc069c403ebaf9f0171e9517f40e41"};assert(a.digest(b)=='"6629fae49393a05397450978507c4ef1"',"digest()")};a.digest=function(m){var n=m.algorithm||null;var i=m.username||null;var k=m.realm||null;var q=m.password||"";var l=m.nonce||null;var s=m.cnonce||null;var j=m.nc!==undefined?m.nc:null;var c=m.qop||null;var b=m.httpMethod||null;var g=m.uri||null;var f=m.entityBody||null;var p=function(t){return a.MD5(t)};var r=function(t,u){return a.MD5(t+":"+u)};var h,e;if(n&&n.toLowerCase()=="md5-sess"){h=p(i+":"+k+":"+q)+":"+l+":"+s}else{h=i+":"+k+":"+q}if(!c||c=="auth"){e=b+":"+g.toString()}else{e=b+":"+g.toString()+":"+p(f&&f.toString()||"")}if(c&&(c=="auth"||c=="auth-int")){var o=l+":"+j.toString()+":"+s+":"+c+":"+e;return a._quote(r(p(h),l+":"+j.toString()+":"+s+":"+c+":"+p(e)))}else{return a._quote(r(p(h),l+":"+p(e)))}};a.basic=function(b){return a.b64_encode(b.username+":"+b.password)}})(sip);(function(a){a._testSDP=function(){var g="v=0\r\no=jdoe 2890844526 2890842807 IN IP4 10.47.16.5\r\ns=SDP Seminar\r\ni=A Seminar on the session description protocol\r\nu=http://www.example.com/seminars/sdp.pdf\r\ne=j.doe@example.com (Jane Doe)\r\nc=IN IP4 224.2.17.12/127\r\nt=2873397496 2873404696\r\na=recvonly\r\nm=audio 49170 RTP/AVP 0\r\nm=video 51372 RTP/AVP 99\r\na=rtpmap:99 h263-1998/90000\r\n";assert((new a.SDP(g)).toString()==g,"SDP")};function f(g){if(g){this._parse(g)}}f._multiple="tramb";function e(g){if(g&&typeof g=="string"){var h=g.split(" ");this.username=h[0];this.sessionid=parseInt(h[1]);this.version=parseInt(h[2]);this.nettype=h[3];this.addrtype=h[4];this.address=h[5]}else{this.username="-";this.sessionid=Math.ceil((new Date()).getTime()/1000);this.version=Math.ceil((new Date()).getTime()/1000);this.nettype="IN";this.addrtype="IP4";this.address=(g&&g.address!==undefined?g.address:"127.0.0.1")}}e.prototype.toString=function(){return[this.username,this.sessionid.toString(),this.version.toString(),this.nettype,this.addrtype,this.address].join(" ")};f.originator=e;function b(m){if(m&&typeof m=="string"){parts=m.split(" ");this.nettype=parts[0];this.addrtype=parts[1];var k=parts[2].split("/");this.address=(k.length>0?k[0]:null);this.ttl=(k.length>1?parseInt(k[1]):null);this.count=(k.length>2?parseInt(k[2]):null)}else{var h=["address",null,"nettype","IN","addrtype","IP4","ttl",null,"count",null];for(var j=0;j<h.length;j+=2){var g=h[j];var l=h[j+1];this[g]=(m&&m[g]!==undefined?m[g]:l)}}}b.prototype.toString=function(){return this.nettype+" "+this.addrtype+" "+this.address+(this.ttl===null?"":"/"+this.ttl)+(this.count===null?"":"/"+this.count)};f.connection=b;function c(k){if(k&&typeof k=="string"){var l=k.split(" ");this.media=l.shift();this.port=parseInt(l.shift());this.proto=l.shift();this.fmt=[];for(var h=0;h<l.length;++h){var j=l[h];var g={};if(j.match(/^\d+$/)){g.pt=parseInt(j)}else{g.pt=j}this.fmt.push(g)}}else{this.media=(k&&k.media!==undefined?k.media:null);this.port=(k&&k.port!==undefined?k.port:0);this.proto=(k&&k.proto!==undefined?k.proto:"RTP/AVP");this.fmt=(k&&k.fmt!==undefined?k.fmt:[])}}c.prototype.toString=function(){var s=this.media+" "+this.port+" "+this.proto+" "+a.map(function(i){return i.pt.toString()},this.fmt).join(" ");var q=["i","c","b","k","a"];for(var n=0;n<q.length;++n){var h=q[n];if(this[h]!==undefined){var p=this[h];if(f._multiple.indexOf(h)<0){s+="\r\n"+h+"="+p.toString()}else{for(var m=0;m<p.length;++m){var r=p[m];s+="\r\n"+h+"="+r.toString()}}}}for(var g=0;g<this.fmt.length;++g){var o=this.fmt[g];if(o.name!==undefined){s+="\r\na=rtpmap:"+o.pt+" "+o.name+"/"+o.rate+(o.params?"/"+o.params:"")}}return s};c.prototype.dup=function(){var g=new f.media({media:this.media,port:this.port,proto:this.proto,fmt:a.map(function(i){return{pt:i.pt,name:i.name,rate:i.rate,params:i.params}},this.fmt)});var j=["i","c","b","k","a"];for(var l=0;l<j.length;++l){var h=j[l];if(this[h]!==undefined){var m=this[h];if(a.is_array(m)){g[h]=m.slice()}else{g[h]=m}}}return g};f.media=c;f.prototype._parse=function(q){var y=true;var l=q.replace(/\r\n/g,"\n").split("\n");var p=null;for(var x=0;x<l.length;++x){var n=l[x];var t=a.str_partition(n,"=");var u=t[0];var o=t[2];if(u=="o"){o=new f.originator(o)}else{if(u=="c"){o=new f.connection(o)}else{if(u=="m"){o=new f.media(o)}}}if(u=="m"){if(this["m"]===undefined){this["m"]=[]}this["m"].push(o);p=this["m"][this["m"].length-1]}else{if(this["m"]!==undefined){p=this["m"][this["m"].length-1];if(u=="a"&&o.substr(0,7)=="rtpmap:"){var h=o.substr(7).split(" ");var s=h.shift();var r=h.join(" ");h=a.str_partition(r,"/");var C=h[0];r=h[2];h=a.str_partition(r,"/");var B=h[0];var A=h[2];var m=a.filter(function(g){return g.pt.toString()==s.toString()},p.fmt);for(var w=0;w<m.length;++w){var z=m[w];z.name=C;z.rate=parseInt(B);z.params=A||null}}else{if(f._multiple.indexOf(u)>=0){if(p[u]!==undefined){p[u].push(o)}else{p[u]=[o]}}else{p[u]=o}}}else{p=this;if(f._multiple.indexOf(u)>=0){if(p[u]!==undefined){p[u].push(o)}else{p[u]=[o]}}else{p[u]=o}}}}};f.prototype.toString=function(){var g="";var n=["v","o","s","i","u","e","p","c","b","t","a","m"];for(var o=0;o<n.length;++o){var l=n[o];if(this[l]!==undefined){var p=this[l];if(f._multiple.indexOf(l)<0){g+=l+"="+p.toString()+"\r\n"}else{for(var m=0;m<p.length;++m){var h=p[m];g+=l+"="+h.toString()+"\r\n"}}}}return g};a.SDP=f})(sip);(function(a){a._testOfferAnswer=function(){var f=new a.SDP.media({media:"audio",port:9000});f.fmt=[{pt:0,name:"PCMU",rate:8000},{pt:8,name:"PCMA",rate:8000}];var e=new a.SDP.media({media:"video",port:9002});e.fmt=[{pt:31,name:"H261",rate:90000}];var c=a.createOffer([f,e]);c.o.sessionid=1192000146;c.o.version=1192000146;c.o.address="192.168.1.66";assert(c.toString().replace(/\r/g,"\\r").replace(/\n/g,"\\n")=="v=0\\r\\no=- 1192000146 1192000146 IN IP4 192.168.1.66\\r\\ns=-\\r\\nt=0 0\\r\\nm=audio 9000 RTP/AVP 0 8\\r\\na=rtpmap:0 PCMU/8000\\r\\na=rtpmap:8 PCMA/8000\\r\\nm=video 9002 RTP/AVP 31\\r\\na=rtpmap:31 H261/90000\\r\\n","createOffer()");var b=new a.SDP.media({media:"audio",port:8020});b.fmt=[{pt:0},{pt:3}];var h=a.createAnswer([b],c);h.o.sessionid=1192000146;h.o.version=1192000146;h.o.address="192.168.1.66";assert(h.toString().replace(/\r/g,"\\r").replace(/\n/g,"\\n")=="v=0\\r\\no=- 1192000146 1192000146 IN IP4 192.168.1.66\\r\\ns=-\\r\\nt=0 0\\r\\nm=audio 8020 RTP/AVP 0\\r\\na=rtpmap:0 PCMU/8000\\r\\nm=video 0 RTP/AVP 31\\r\\na=rtpmap:31 H261/90000\\r\\n","createAnswer()");var g=a.createOffer([f],c);assert(g.toString().replace(/\r/g,"\\r").replace(/\n/g,"\\n")=="v=0\\r\\no=- 1192000146 1192000147 IN IP4 192.168.1.66\\r\\ns=-\\r\\nt=0 0\\r\\nm=audio 9000 RTP/AVP 0 8\\r\\na=rtpmap:0 PCMU/8000\\r\\na=rtpmap:8 PCMA/8000\\r\\n","createOffer(revision)")};a.createOffer=function(j,g,c){var f=new a.SDP();f.v="0";if(c!==undefined){var h=["i","e","p"];for(var e=0;e<h.length;++e){var b=h[e];if(c[b]!==undefined){f[b]=c[b]}}}f.o=(g?new a.SDP.originator(g.o.toString()):new a.SDP.originator());if(g){f.o.version=f.o.version+1}f.s="-";f.t=["0 0"];f.m=j;return f};a.createAnswer=function(h,b,p){var n=new a.SDP();n.v="0";if(p!==undefined){var w=["i","e","p"];for(var t=0;t<w.length;++t){var x=w[t];if(p[x]!==undefined){n[x]=p[x]}}}n.o=new a.SDP.originator();n.s="-";n.t=b.t;n.m=[];h=h.slice();for(var r=0;r<b.m.length;++r){var v=b.m[r];var l=null;var t=0;while(t<h.length){if(h[t].media==v.media){l=h[t].dup();h.splice(t,1);var k=[];for(var g=0;g<v.fmt.length;++g){var c=v.fmt[g];for(var q=0;q<l.fmt.length;++q){var f=l.fmt[q];var e=(typeof f.pt=="number"?f.pt:-1);var u=(typeof c.pt=="number"?c.pt:-1);if(e>=0&&e<32&&u>=0&&u<32&&e==u||e<0&&u<0&&f.pt==c.pt||(""+f.name).toLowerCase()==(""+c.name).toLowerCase()&&f.rate==c.rate&&f.count==c.count){k.push([c,f]);break}}}if(k.length>0){l.fmt=a.map(function(i){return i[0]},k)}else{l.fmt=[{pt:0}];l.port=0}break}else{++t}}if(!l){l=new a.SDP.media(v.toString());l.port=0}n.m.push(l)}var o=false;for(var t=0;t<n.m.length;++t){l=n.m[t];if(l.port!=0){o=true;break}}return(o?n:null)}})(sip);(function(a){function b(f){this.app=f;this.delay=0;this.running=false;this.task=null}b.prototype.start=function(f){if(this.running){this.stop()}if(f!==undefined){this.delay=f}this.running=true;var g=this;this.task=setTimeout(function(){g.app.timedout.apply(g.app,[g])},this.delay)};b.prototype.stop=function(){if(this.running){this.running=false}if(this.task){clearTimeout(this.task);this.task=null}};a.TimerImpl=b;function c(f){this.createServer=function(i,h,g){return(i.method!="CANCEL"?new a.UserAgent(this,i):null)};this.sending=function(h,i,g){log("sending\n"+i.toString())};this.receivedRequest=function(h,i,g){log("received\n"+i.toString());f("request",h,i)};this.receivedResponse=function(i,h,g){log("received\n"+request.toString());f("response",i,h)};this.cancelled=function(h,i,g){log("cancelled");f("cancelled",h,i)};this.dialogCreated=function(i,h,g){log("dialog created")};this.authenticate=function(h,i,g){return true};this.createTimer=function(h,g){return new a.TimerImpl(h)};this.send=function(h,i,g){log("send\n"+h)}}a.App=c;function e(i,g,h,j,k,f){this.host=i||"127.0.0.1";this.port=g||(j?5061:5060);this.type=h||"udp";this.hostport=this.host+(g?":"+g:"");this.secure=j===undefined?true:j;this.reliable=k===undefined?true:k;this.congestionControlled=f===undefined?true:f}a.TransportInfo=e;a._testStack=function(){var j=new a.TransportInfo("127.0.0.1",5060,"udp",false,false,false);var h=function(){};var i=new a.App(h);var f=new a.Stack(i,j);var g=new a.UserAgent(f);g.localParty=new a.Address("sip:kundan@iptel.org");g.remoteParty=new a.Address("sip:kundan@iptel.org");g.remoteTarget=new a.URI("sip:kundan@127.0.0.1")}})(sip);
+if(typeof sip=="undefined"){sip={}}(function(a){a.filter=function(c,f){var b=[];for(var e=0;e<f.length;++e){if(c(f[e])){b.push(f[e])}}return b};a.map=function(c,f){var b=[];for(var e=0;e<f.length;++e){b.push(c(f[e]))}return b};a.str_partition=function(e,c){var b=e.indexOf(c);return b>=0?[e.substr(0,b),c,e.substr(b+c.length)]:[e,"",""]};a.str_strip=function(b){return b.replace(/^\s+/g,"").replace(/\s+$/g,"")};a.str_slice=function(g,f,c){if(typeof f=="undefined"||f<0){f=0}if(typeof c=="undefined"||c>g.length){c=g.length}var b=[];for(var e=f;e<c;++e){b.push(g.charAt(e))}return b.join("")};a.list_slice=function(f,g,c){if(typeof g=="undefined"||g<0){g=0}if(typeof c=="undefined"||c>f.length){c=f.length}var b=[];for(var e=g;e<c;++e){b.push(f[e])}return b};a.dict_items=function(e){var b=[];for(var c in e){b.push([c,e[c]])}return b};a.is_array=function(b){return Object.prototype.toString.apply(b)==="[object Array]"};a.parse_uri_options={strictMode:false,key:["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],q:{name:"queryKey",parser:/(?:^|&)([^&=]*)=?([^&]*)/g},parser:{strict:/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,loose:/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/}};a.parse_uri=function(g){var f=a.parse_uri_options,b=f.parser[f.strictMode?"strict":"loose"].exec(g),e={},c=14;while(c--){e[f.key[c]]=b[c]||""}e[f.q.name]={};e[f.key[12]].replace(f.q.parser,function(i,h,j){if(h){e[f.q.name][h]=j}});return e};a._keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";a.b64_encode=function(e){var b="";var m,k,h,l,j,g,f;var c=0;e=a._utf8_encode(e);while(c<e.length){m=e.charCodeAt(c++);k=e.charCodeAt(c++);h=e.charCodeAt(c++);l=m>>2;j=((m&3)<<4)|(k>>4);g=((k&15)<<2)|(h>>6);f=h&63;if(isNaN(k)){g=f=64}else{if(isNaN(h)){f=64}}b=b+a._keyStr.charAt(l)+a._keyStr.charAt(j)+a._keyStr.charAt(g)+a._keyStr.charAt(f)}return b};a.b64_decode=function(e){var b="";var m,k,h;var l,j,g,f;var c=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(c<e.length){l=this._keyStr.indexOf(e.charAt(c++));j=this._keyStr.indexOf(e.charAt(c++));g=this._keyStr.indexOf(e.charAt(c++));f=this._keyStr.indexOf(e.charAt(c++));m=(l<<2)|(j>>4);k=((j&15)<<4)|(g>>2);h=((g&3)<<6)|f;b=b+String.fromCharCode(m);if(g!=64){b=b+String.fromCharCode(k)}if(f!=64){b=b+String.fromCharCode(h)}}b=a._utf8_decode(b);return b};a._utf8_encode=function(e){var b="";for(var g=0;g<e.length;g++){var f=e.charCodeAt(g);if(f<128){b+=String.fromCharCode(f)}else{if((f>127)&&(f<2048)){b+=String.fromCharCode((f>>6)|192);b+=String.fromCharCode((f&63)|128)}else{b+=String.fromCharCode((f>>12)|224);b+=String.fromCharCode(((f>>6)&63)|128);b+=String.fromCharCode((f&63)|128)}}}return b};a._utf8_decode=function(b){var e="";var f=0;var g=c1=c2=0;while(f<b.length){g=b.charCodeAt(f);if(g<128){e+=String.fromCharCode(g);f++}else{if((g>191)&&(g<224)){c2=b.charCodeAt(f+1);e+=String.fromCharCode(((g&31)<<6)|(c2&63));f+=2}else{c2=b.charCodeAt(f+1);c3=b.charCodeAt(f+2);e+=String.fromCharCode(((g&15)<<12)|((c2&63)<<6)|(c3&63));f+=3}}}return e};a.b64_urlsafe_encode=function(b){return a.b64_encode(b).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,".")};a.MD5=function(s){function L(c,b){return(c<<b)|(c>>>(32-b))}function K(F,c){var H,b,x,G,k;x=(F&2147483648);G=(c&2147483648);H=(F&1073741824);b=(c&1073741824);k=(F&1073741823)+(c&1073741823);if(H&b){return(k^2147483648^x^G)}if(H|b){if(k&1073741824){return(k^3221225472^x^G)}else{return(k^1073741824^x^G)}}else{return(k^x^G)}}function r(b,k,c){return(b&k)|((~b)&c)}function q(b,k,c){return(b&c)|(k&(~c))}function p(b,k,c){return(b^k^c)}function n(b,k,c){return(k^(b|(~c)))}function u(G,F,aa,Z,k,H,I){G=K(G,K(K(r(F,aa,Z),k),I));return K(L(G,H),F)}function f(G,F,aa,Z,k,H,I){G=K(G,K(K(q(F,aa,Z),k),I));return K(L(G,H),F)}function D(G,F,aa,Z,k,H,I){G=K(G,K(K(p(F,aa,Z),k),I));return K(L(G,H),F)}function t(G,F,aa,Z,k,H,I){G=K(G,K(K(n(F,aa,Z),k),I));return K(L(G,H),F)}function e(F){var I;var x=F.length;var k=x+8;var c=(k-(k%64))/64;var H=(c+1)*16;var Z=Array(H-1);var b=0;var G=0;while(G<x){I=(G-(G%4))/4;b=(G%4)*8;Z[I]=(Z[I]|(F.charCodeAt(G)<<b));G++}I=(G-(G%4))/4;b=(G%4)*8;Z[I]=Z[I]|(128<<b);Z[H-2]=x<<3;Z[H-1]=x>>>29;return Z}function B(k){var c="",x="",F,b;for(b=0;b<=3;b++){F=(k>>>(b*8))&255;x="0"+F.toString(16);c=c+x.substr(x.length-2,2)}return c}function J(k){var b="";for(var F=0;F<k.length;F++){var x=k.charCodeAt(F);if(x<128){b+=String.fromCharCode(x)}else{if((x>127)&&(x<2048)){b+=String.fromCharCode((x>>6)|192);b+=String.fromCharCode((x&63)|128)}else{b+=String.fromCharCode((x>>12)|224);b+=String.fromCharCode(((x>>6)&63)|128);b+=String.fromCharCode((x&63)|128)}}}return b}var C=Array();var P,h,E,v,g,Y,X,W,V;var S=7,Q=12,N=17,M=22;var A=5,z=9,y=14,w=20;var o=4,m=11,l=16,j=23;var U=6,T=10,R=15,O=21;s=J(s);C=e(s);Y=1732584193;X=4023233417;W=2562383102;V=271733878;for(P=0;P<C.length;P+=16){h=Y;E=X;v=W;g=V;Y=u(Y,X,W,V,C[P+0],S,3614090360);V=u(V,Y,X,W,C[P+1],Q,3905402710);W=u(W,V,Y,X,C[P+2],N,606105819);X=u(X,W,V,Y,C[P+3],M,3250441966);Y=u(Y,X,W,V,C[P+4],S,4118548399);V=u(V,Y,X,W,C[P+5],Q,1200080426);W=u(W,V,Y,X,C[P+6],N,2821735955);X=u(X,W,V,Y,C[P+7],M,4249261313);Y=u(Y,X,W,V,C[P+8],S,1770035416);V=u(V,Y,X,W,C[P+9],Q,2336552879);W=u(W,V,Y,X,C[P+10],N,4294925233);X=u(X,W,V,Y,C[P+11],M,2304563134);Y=u(Y,X,W,V,C[P+12],S,1804603682);V=u(V,Y,X,W,C[P+13],Q,4254626195);W=u(W,V,Y,X,C[P+14],N,2792965006);X=u(X,W,V,Y,C[P+15],M,1236535329);Y=f(Y,X,W,V,C[P+1],A,4129170786);V=f(V,Y,X,W,C[P+6],z,3225465664);W=f(W,V,Y,X,C[P+11],y,643717713);X=f(X,W,V,Y,C[P+0],w,3921069994);Y=f(Y,X,W,V,C[P+5],A,3593408605);V=f(V,Y,X,W,C[P+10],z,38016083);W=f(W,V,Y,X,C[P+15],y,3634488961);X=f(X,W,V,Y,C[P+4],w,3889429448);Y=f(Y,X,W,V,C[P+9],A,568446438);V=f(V,Y,X,W,C[P+14],z,3275163606);W=f(W,V,Y,X,C[P+3],y,4107603335);X=f(X,W,V,Y,C[P+8],w,1163531501);Y=f(Y,X,W,V,C[P+13],A,2850285829);V=f(V,Y,X,W,C[P+2],z,4243563512);W=f(W,V,Y,X,C[P+7],y,1735328473);X=f(X,W,V,Y,C[P+12],w,2368359562);Y=D(Y,X,W,V,C[P+5],o,4294588738);V=D(V,Y,X,W,C[P+8],m,2272392833);W=D(W,V,Y,X,C[P+11],l,1839030562);X=D(X,W,V,Y,C[P+14],j,4259657740);Y=D(Y,X,W,V,C[P+1],o,2763975236);V=D(V,Y,X,W,C[P+4],m,1272893353);W=D(W,V,Y,X,C[P+7],l,4139469664);X=D(X,W,V,Y,C[P+10],j,3200236656);Y=D(Y,X,W,V,C[P+13],o,681279174);V=D(V,Y,X,W,C[P+0],m,3936430074);W=D(W,V,Y,X,C[P+3],l,3572445317);X=D(X,W,V,Y,C[P+6],j,76029189);Y=D(Y,X,W,V,C[P+9],o,3654602809);V=D(V,Y,X,W,C[P+12],m,3873151461);W=D(W,V,Y,X,C[P+15],l,530742520);X=D(X,W,V,Y,C[P+2],j,3299628645);Y=t(Y,X,W,V,C[P+0],U,4096336452);V=t(V,Y,X,W,C[P+7],T,1126891415);W=t(W,V,Y,X,C[P+14],R,2878612391);X=t(X,W,V,Y,C[P+5],O,4237533241);Y=t(Y,X,W,V,C[P+12],U,1700485571);V=t(V,Y,X,W,C[P+3],T,2399980690);W=t(W,V,Y,X,C[P+10],R,4293915773);X=t(X,W,V,Y,C[P+1],O,2240044497);Y=t(Y,X,W,V,C[P+8],U,1873313359);V=t(V,Y,X,W,C[P+15],T,4264355552);W=t(W,V,Y,X,C[P+6],R,2734768916);X=t(X,W,V,Y,C[P+13],O,1309151649);Y=t(Y,X,W,V,C[P+4],U,4149444226);V=t(V,Y,X,W,C[P+11],T,3174756917);W=t(W,V,Y,X,C[P+2],R,718787259);X=t(X,W,V,Y,C[P+9],O,3951481745);Y=K(Y,h);X=K(X,E);W=K(W,v);V=K(V,g)}var i=B(Y)+B(X)+B(W)+B(V);return i.toLowerCase()}})(sip);(function(a){a._testIP=function(){assert(a.isIPv4("1.2.3.4")==true,'isIPv4("1.2.3.4") == true');assert(a.isIPv4("1.2.3.4.5")==false,'isIPv4("1.2.3.4.5") == false');assert(a.isIPv4("1.2.3")==false,'isIPv4("1.2.3") == false');assert(a.isIPv4("hos.tna.me.is")==false,'isIPv4("hos.tna.me.is") == false');assert(a.isIPv4("1.2.3.256")==false,'isIPv4("1.2.3.256") == false');assert(a.isMulticast("224.1.2.3")==true,'sip.isMulticast("224.1.2.3") == true');assert(a.isMulticast("125.1.2.3")==false,'sip.isMulticast("125.1.2.3") == true');assert(a.isLocal("127.0.0.1")==true,'sip.isLocal("127.0.0.1") == true');assert(a.isLocal("127.0.1.1")==false,'sip.isMulticast("127.0.1.1") == false');assert(a.isPrivate("127.0.0.1")==false,'sip.isPrivate("127.0.0.1") == false');assert(a.isPrivate("10.1.2.3")==true,'sip.isPrivate("10.1.2.3") == true');assert(a.isPrivate("192.168.1.2")==true,'sip.isPrivate("192.168.1.2") == true');assert(a.isPrivate("172.19.1.2")==true,'sip.isPrivate("172.19.1.2") == true')};a._ipv4=/^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/;a._ipToParts=function(e){var f=(typeof e==="string")?e.match(this._ipv4):null;if(f==null){return false}f=a.filter(function(g){return g<256},a.map(parseInt,a.list_slice(f,1)));return f.length==4?f:false};a.isIPv4=function(e){return a._ipToParts(e)!=false};a.isMulticast=function(e){var f=a._ipToParts(e);return(f&&((f[0]&240)==224))};a.isLocal=function(e){return e=="127.0.0.1"};a.isPrivate=function(e){var f=a._ipToParts(e);return f&&(f[0]==10||f[0]==172&&f[1]>=16&&f[1]<32||f[0]==192&&f[1]==168)};a._testURI=function(){assert((new a.URI("sip:kundan@example.net")).toString()=="sip:kundan@example.net",'URI("sip:kundan@example.net")');assert((new a.URI("sip:kundan:passwd@example.net:5060;transport=udp;lr?name=value&another=another")).toString()=="sip:kundan:passwd@example.net:5060;transport=udp;lr?name=value&another=another",'URI("sip:kundan:passwd@example.net:5060;transport=udp;lr?name=value&another=another")');assert((new a.URI("sip:192.1.2.3:5060")).toString()=="sip:192.1.2.3:5060",'URI("sip:192.1.2.3:5060")');assert((new a.URI("sip:kundan@example.net")).equals(new a.URI("sip:Kundan@Example.NET")),'URI("sip:kundan@example.net").equals(URI("sip:Kundan@Example.NET"))');assert((new a.URI()).toString()=="","URI() empty");assert((new a.URI("tel:+1-212-9397063")).toString()=="tel:+1-212-9397063",'URI("tel:+1-212-9397063")');var e=(new a.URI("sip:kundan@192.1.2.3:5060")).getHostPort();assert(e[0]=="192.1.2.3"&&e[1]==5060,'URI("sip:kundan@192.1.2.3:5060").getHostPort()')};function b(h){if(h!==undefined){var e=h.match(b._syntax);var l,k;if(e){this.scheme=e[1];this.user=e[4];this.password=e[6];this.host=e[9];this.port=e[11];l=e[13];k=e[15]}else{if(h.match(b._syntax_urn)){e=h.match(b._syntax_urn);this.scheme=e[1];this.host=e[2]}else{throw new String("Invalid URI("+h+")")}}if(this.scheme=="tel"&&this.user==null){this.user=this.host;this.host=null}if(this.port){this.port=parseInt(this.port)}this.param={};if(l){var j=l.split(";");for(var g=0;g<j.length;++g){var f=a.str_partition(j[g],"=");this.param[f[0]]=f[2]||null}}this.header=k?k.split("&"):[]}else{this.scheme=null;this.user=null;this.password=null;this.host=null;this.port=null;this.param={};this.header=[]}}b._syntax=/^([a-zA-Z][a-zA-Z0-9\+\-\.]*):((([a-zA-Z0-9\-\_\.\!\~\*\'\(\)&=\+\$,;\?\/\%]+)(:([^:@;\?]+))?)@)?((([^;\?:]*)(:([\d]+))?))(;([^\?]*))?(\?(.*))?$/;b._syntax_urn=/^(urn):([^;\?>]+)$/;b.prototype.toString=function(){var e=this.scheme=="tel"?null:this.user;var f=this.scheme=="tel"?this.user:this.host;var g=a.map(function(h){return h[1]!==null?h[0]+"="+h[1]:h[0]},a.dict_items(this.param)).join(";");return this.scheme&&f?(this.scheme+":"+(e?(e+(this.password?(":"+this.password):"")+"@"):"")+(f?((f?f:"")+(this.port?(":"+this.port):"")):"")+(g?(";"+g):"")+(this.header.length>0?("?"+this.header.join("&")):"")):""};b.prototype.dup=function(){return new b(this.toString())};b.prototype.getHostPort=function(){return[this.host,this.port]};b.prototype.equals=function(e){return this.toString().toLowerCase()==e.toString().toLowerCase()};b.prototype.setSecure=function(e){if(e&&["sip","http"].indexOf(this.scheme)>=0){this.scheme+="s"}};b.prototype.getSecure=function(){return["sips","https"].indexOf(this.scheme)>=0};a.URI=b;a._testAddress=function(){var f=new a.Address('"Kundan Singh" <sip:kundan@example.net>');var e=new a.Address("Kundan Singh   <sip:kundan@example.net>");var i=new a.Address('"Kundan Singh" <sip:kundan@example.net>   ');var h=new a.Address("<sip:kundan@example.net>");var g=new a.Address("sip:kundan@example.net");assert(f.toString()=='"Kundan Singh" <sip:kundan@example.net>',"Address('\"Kundan Singh\" <sip:kundan@example.net>').toString()");assert(f.toString()==e.toString(),"'\"Kundan Singh\" <sip:kundan@example.net>' == 'Kundan Singh   <sip:kundan@example.net>'");assert(f.toString()==i.toString(),"'\"Kundan Singh\" <sip:kundan@example.net>' == '\"Kundan Singh\" <sip:kundan@example.net>   '");assert(f.uri.toString()==h.uri.toString(),'Address("<sip:kundan@example.net>").uri');assert(f.uri.toString()==g.uri.toString(),'Address("sip:kundan@example.net").uri');assert(f.getDisplayable()=="Kundan Singh","Address('\"Kundan Singh\" <sip:kundan@example.net>').getDisplayable()")};function c(e){this.displayName=null;this.uri=null;this.wildcard=false;this.mustQuote=false;if(e){this.parse(e)}}c._syntax=[/^([a-zA-Z0-9\-\.\_\+\~\ \t]*)<([^>]+)>/,/^"([^"]*)"[\ \t]*<([^>]+)>/,/^[\ \t]*()([^;]+)/];c.prototype.parse=function(j){if(j.substr(0,1)=="*"){this.wildcard=true;return 1}else{var h=0;for(var g=0;g<c._syntax.length;++g){var f=c._syntax[g];var e=j.match(f);if(e){this.displayName=a.str_strip(e[1]);this.uri=new a.URI(a.str_strip(e[2]));h=e[0].length;break}}return h}};c.prototype.toString=function(){return(this.uri?(this.displayName?('"'+this.displayName+'"'+(this.uri?" ":"")):"")+(((this.mustQuote||this.displayName?"<":"")+this.uri.toString()+(this.mustQuote||this.displayName?">":""))):"")};c.prototype.dup=function(){return new c(this.toString())};c.prototype.getDisplayable=function(e){if(e===undefined){e=25}var f=this.displayName||this.uri&&this.uri.user||this.uri&&this.uri.host||"";return f.length<=e?f:f.substr(0,e-3)+"..."};a.Address=c})(sip);(function(g){g._quote=function(n){return n.length>=2&&n[0]=='"'&&n[n.length-1]=='"'?n:'"'+n+'"'};g._unquote=function(n){return n.length>=2&&n[0]=='"'&&n[n.length-1]=='"'?n.substr(1,n.length-2):n};g._address=["contact","from","record-route","refer-to","referred-by","route","to","p-preferred-identity"];g._comma=["authorization","proxy-authenticate","proxy-authorization","www-authenticate"];g._unstructured=["call-id","cseq","date","expires","max-forwards","organization","server","subject","timestamp","user-agent","accept-contact"];g._short=["allow-events","u","call-id","i","contact","m","content-encoding","e","content-length","l","content-type","c","event","o","from","f","subject","s","supported","k","to","t","via","v"];g._exception={"call-id":"Call-ID",cseq:"CSeq","www-authenticate":"WWW-Authenticate","x-alu-authorization":"X-ALU-Authorization"};g._testCanon=function(){assert(g._canon("call-id")=="Call-ID",'_canon("call-id") == "Call-ID"');assert(g._canon("fRoM")=="From",'_canon("fRoM") == "From"');assert(g._canon("refer-to")=="Refer-To",'_canon("refer-to") == "Refer-To"')};g._canon=function(n){n=n.toLowerCase();if(n.length==1&&g._short[n]!==undefined){return g._canon(g._short[g._short.indexOf(n)-1])}else{if(g._exception[n]!==undefined){return g._exception[n]}else{return g.map(function(o){return o.charAt(0).toUpperCase()+g.str_slice(o,1)},n.split("-")).join("-")}}};g._getValues=function(s){var r=[];var n=false;var p=0;if(s.indexOf(",")==-1&&s.toLowerCase().indexOf("%2c")==-1){r.push(s)}else{for(var q=0,o=s.length;q<o;q++){if(s[q]=="%"){var t=s.toLowerCase().substr(q,3);if(t=="%22"||t=="%27"){n=!n}else{if(t=="%2c"){if(n==false){r.push(s.substring(p,q));p=q+1}}}}else{if(s[q]=='"'||s[q]=="'"){n=!n}else{if(s[q]==","){if(n==false){r.push(s.substring(p,q));p=q+1}}}}}r.push(s.substring(p,q))}return r};g._testHeader=function(){assert((new g.Header('"Kundan Singh" <sip:kundan@example.net>',"To")).toRepr()=='To: "Kundan Singh" <sip:kundan@example.net>','Header(\'"Kundan Singh" <sip:kundan@example.net>\', "To")');assert((new g.Header('"Kundan"<sip:kundan99@example.net>',"To")).toRepr()=='To: "Kundan" <sip:kundan99@example.net>','Header(\'"Kundan"<sip:kundan99@example.net>\', "To")');assert((new g.Header("Henry <sip:henry.sinnreich@example.net>","fRoM")).toRepr()=='From: "Henry" <sip:henry.sinnreich@example.net>',"Header('Henry <sip:henry.sinnreich@example.net>', \"fRoM\")");assert((new g.Header("application/sdp","conTenT-tyPe")).toRepr()=="Content-Type: application/sdp",'Header("application/sdp", "conTenT-tyPe")');assert((new g.Header("presence; param=value;param2=another","Event")).toRepr()=="Event: presence;param=value;param2=another","Header('presence; param=value;param2=another', 'Event')");assert((new g.Header("78  INVITE","CSeq")).toRepr()=="CSeq: 78 INVITE","Header('78  INVITE', 'CSeq')")};function k(o,n){this.name=(n!==undefined?g._canon(g.str_strip(n)):null);this.value=this._parse(g.str_strip(o),this.name?this.name.toLowerCase():null)}k.prototype._parseParams=function(r,p){try{var o=r.length,s=0;if(r.toLowerCase().indexOf("digest ")===0){return}var w=0;while(s<o){w+=1;if(w>60){console.warn("sip.Header._parseParams: Breaking out of possibly infinite loop");break}var y=r.indexOf("=",s);var u=r.indexOf(";",s);if(u<0){u=r.indexOf(",",s);if(u<0){u=o}}var q="",x="";if(y>=0&&y<u){while((r[s]==",")||(r[s]==" ")||(r[s]==";")||(r[s]=="\r")){++s}q=g.str_strip(r.substring(s,y).toLowerCase());if(r.charAt(y+1)=='"'){y+=1;u=r.indexOf('"',y+1)}x=g.str_strip(r.substring(y+1,u));s=u+1}else{if(y<0||(y>=0&&y>u)){q=g.str_strip(r.substring(s,u).toLowerCase());s=u+1}else{break}}if(q){this[q]=x}}}catch(t){log("ignoring parameter exception: "+t)}};k.prototype._parse=function(t,p){if(g._address.indexOf(p)>=0){var v=new g.Address();v.mustQuote=true;var s=v.parse(t);var q=t.substr(s);t=v;if(q){this._parseParams(q,false)}}else{if(g._comma.indexOf(p)<0&&g._unstructured.indexOf(p)<0){var r=g.str_partition(t,";");t=r[0];var q=r[2];if(q){this._parseParams(q,false)}}else{if(g._comma.indexOf(p)>=0){var o=g.str_partition(t," ");this.authMethod=o[0];var q=o[2];if(q){this._parseParams(q,true)}}else{if(p=="cseq"){nsm=g.str_partition(t," ");var u=g.str_strip(nsm[0]);this.method=g.str_strip(nsm[2]);this.number=parseInt(u);t=u+" "+this.method}}}}return t};k.prototype.toString=function(){var o=this.name.toLowerCase();var r=[];if(g._comma.indexOf(o)<0&&g._unstructured.indexOf(o)<0){var p=["name","value","_viauri"];for(var q in this){if(typeof q=="string"&&p.indexOf(q.toLowerCase())<0&&typeof this[q]!="function"){var n=this[q];if(n&&!/^[a-zA-Z0-9\-\.\!\%\*_\+\`\'\~]*$/.test(n)){n='"'+n+'"'}r.push(n?q.toLowerCase()+"="+n:q)}}}return this.value.toString()+(r.length>0?";"+r.join(";"):"")};k.prototype.toRepr=function(){return this.name+": "+this.toString()};k.prototype.dup=function(){return k(this.toString(),this.name)};k.prototype.getItem=function(n){var o=n.toLowerCase();return(this[o]!==undefined?this[o]:null)};k.prototype.setItem=function(n,p){var o=n.toLowerCase();this[o]=p};k.prototype.hasItem=function(n){return this[n.toLowerCase()]!==undefined};g._testViaUri=function(){assert((new g.Header("SIP/2.0/UDP example.net:5090;ttl=1","Via")).getViaUri().toString()=="sip:example.net:5090;transport=udp","Header('SIP/2.0/UDP example.net:5090;ttl=1', 'Via').getViaUri()");assert((new g.Header("SIP/2.0/UDP 192.1.2.3;rport=1078;received=76.17.12.18;branch=0","Via")).getViaUri().toString()=="sip:76.17.12.18:1078;transport=udp","Header('SIP/2.0/UDP 192.1.2.3;rport=1078;received=76.17.12.18;branch=0', 'Via').getViaUri()");assert((new g.Header("SIP/2.0/UDP 192.1.2.3;maddr=224.0.1.75","Via")).getViaUri().toString()=="sip:224.0.1.75:5060;transport=udp","Header('SIP/2.0/UDP 192.1.2.3;maddr=224.0.1.75', 'Via').getViaUri()")};k.prototype.getViaUri=function(){if(this["_viaUri"]===undefined){if(this.name!="Via"){throw new String("getViaUri() available only on Via header")}var n=g.str_partition(this.value," ");var p=n[0];var r=n[2];var o=p.split("/")[2].toLowerCase();this._viaUri=new g.URI("sip:"+r+";transport="+o);if(!this._viaUri.port){this._viaUri.port=5060}if(this["rport"]!==undefined){try{this._viaUri.port=(typeof this["rport"]=="number"?parseInt(this["rport"]):this["rport"])}catch(q){}}if(o!="tcp"&&o!="sctp"&&o!="tls"){if(this["maddr"]!==undefined){this._viaUri.host=this["maddr"]}else{if(this["received"]!==undefined){this._viaUri.host=this["received"]}}}}return this["_viaUri"]};g._testCreateHeaders=function(){var n=g.Header.createHeaders("Event: presence, reg");assert(n[0]=="Event",'Header.createHeaders("Event: presence, reg")[0] != "Event"');assert(n[1].length==2,'Header.createHeaders("Event: presence, reg")[1].length != 2');assert(n[1][0].toRepr()=="Event: presence",'Header.createHeaders("Event: presence, reg")[1][0].toRepr() != "Event: presence"');assert(n[1][1].toRepr()=="Event: reg",'Header.createHeaders("Event: presence, reg")[1][1].toRepr() != "Event: reg"')};k.createHeaders=function(p){var n=g.str_partition(p,":");var o=g.str_strip(n[0]);p=g.str_strip(n[2]);var q;if(g._comma.indexOf(o.toLowerCase())>=0){q=[new g.Header(p,o)]}else{q=g.map(function(r){return new g.Header(r,o)},g._getValues(p))}return[g._canon(o),q]};g.Header=k;g._testMessage=function(){var n="INVITE sip:kundan@example.net SIP/2.0\r\nFrom: <sip:henry@iptel.org>\r\nTo: <sip:kundan@example.net>\r\nCall-ID: 1234@127.0.0.1\r\nCSeq: 1 INVITE\r\nContent-Length: 10\r\n\r\nsomebody\r\n";assert((new g.Message(n)).toString()==n,"Message(t1)")};function i(n){this.method=null;this.uri=null;this.response=null;this.responsetext=null;this.protocol="SIP/2.0";this._body=null;this._headers={};if(n!==undefined){this._parse(n)}}i._keywords=["method","uri","response","responsetext","protocol","_body","body","_headers"];i._single=["call-id","content-disposition","content-length","content-type","cseq","date","expires","event","max-forwards","organization","refer-to","referred-by","server","session-expires","subject","timestamp","to","user-agent"];i.prototype.getItem=function(n){var o=n.toLowerCase();return(this._headers[o]!==undefined?this._headers[o]:null)};i.prototype.setItem=function(n,p){var o=n.toLowerCase();this._headers[o]=p};i.prototype.delItem=function(n){var o=n.toLowerCase();delete this._headers[o]};i.prototype.hasItem=function(n){var o=n.toLowerCase();return(this._headers[o]!==undefined)};i.prototype._parse=function(z){var n=z.indexOf("\r\n\r\n");var s=z.indexOf("\n\n");var B,v;if(n>=0&&s>=0){if(n<s){s=-1}else{n=-1}}else{if(n<0&&s<0){log("Message.parse() did not find LFLF or CRLFCRLF")}}if(n>=0){B=z.substr(0,n);v=z.substr(n+4)}else{if(s>=0){B=z.substr(0,s);v=z.substr(s+2)}else{B=z;v=""}}var r,p;var D=B.indexOf("\n");if(D>0&&B.charAt(D-1)=="\r"){r=B.substr(0,D-1);p=B.substr(D+1)}else{if(D>0){r=B.substr(0,D);p=B.substr(D+1)}}var y=r.split(" ");if(y.length<3){throw new String("not enough parts in first line")}if(y[1].match(/^\d+$/)){this.protocol=y.shift();this.response=parseInt(y.shift());this.responsetext=y.join(" ")}else{if(y.length>3){throw new String("invalid number of parts in request line")}else{this.method=y[0];this.uri=new g.URI(y[1]);this.protocol=y[2]}}y=p.split("\n");var u=false;for(var F=0;F<y.length;++F){if(y[F]!=undefined){if(y[F].search(",\r")!=-1){if(u==false){C=F;u=true}else{y[F]=undefined}y[C]=y[C].concat(y[F+1])}else{if(u==true){y[F]=undefined}u=false}}}for(var F=0;F<y.length;++F){var G=y[F];if(G==undefined){continue}if(G&&G.charAt(G.length-1)=="\r"){G=G.substr(0,G.length-1)}if(G.charAt(0)==" "||G.charAt(0)=="\t"){}try{var q=g.Header.createHeaders(G);var I=q[0];var o=q[1];if(!this.hasItem(I)){this.setItem(I,o.length>1?o:o[0])}else{if(i._single.indexOf(I)<0){var x=this.getItem(I);if(!g.is_array(x)){this.setItem(I,[x])}x=this.getItem(I);for(var C=0;C<o.length;++C){x.push(o[C])}}}}catch(H){log("error parsing "+G);if(H.stack!==undefined){log(H.stack)}else{log(H)}continue}}var w=(this.hasItem("Content-Length")?parseInt(this.getItem("Content-Length").value):0);if(v){this.setBody(v);var t=i.utf8ByteLength(v);if(w!=t){throw new String("invalid content length "+w+" != "+v.length)}}var E=["To","From","CSeq","Call-ID"];for(var A=0;A<E.length;++A){if(!this.hasItem(E[A])){throw new String("mandatory header "+E[A]+" is missing")}}};i.prototype.toString=function(){var n;if(this.method){n=this.method+" "+this.uri.toString()+" "+this.protocol+"\r\n"}else{if(this.response){n=this.protocol+" "+this.response+" "+this.responsetext+"\r\n"}else{return null}}var t=["via","from","to","call-id","cseq","max-forwards"];for(var r in this._headers){if(typeof this._headers[r]!="function"&&t.indexOf(r)<0){t.push(r)}}for(var q=0;q<t.length;++q){var r=t[q];if(this._headers[r]!==undefined){var o=this._headers[r];if(g.is_array(o)){for(var p=0;p<o.length;++p){n+=o[p].toRepr()+"\r\n"}}else{n+=o.toRepr()+"\r\n"}}}n+="\r\n";if(this.body){n+=this.body}return n};i.prototype.dup=function(){return new i(this.toString())};i.prototype.first=function(o){var n=this.getItem(o);return(g.is_array(n)?n[0]:n)};i.prototype.all=function(){var q=g.map(function(s){return s.toLowerCase()},arguments?arguments:[]);var n=[];for(var r=0;r<q.length;++r){var o=this.getItem(q[r]);if(o!==null){if(g.is_array(o)){for(var p=0;p<o.length;++p){n.push(o[p])}}else{n.push(o)}}}return n};i.prototype.insert=function(p,n){if(p&&p.name){if(!this.hasItem(p.name)){this.setItem(p.name,p)}else{var o=this.getItem(p.name);if(!g.is_array(o)){this.setItem(p.name,[o])}o=this.getItem(p.name);if(n){o.push(p)}else{o.splice(0,0,p)}}}};i.prototype.del=function(o,n){if(n===undefined){this.deleteItem(o)}else{var p=this.all(o);try{p.splice(n,1)}catch(q){}if(p.length==0){this.delItem(o)}else{if(p.length==1){this.setItem(o,p[0])}else{this.setItem(o,p)}}}};i.prototype.setBody=function(o){this.body=o;var n=i.utf8ByteLength(o);this.setItem("Content-Length",new g.Header(o?""+n:0,"Content-Length"))};i.utf8ByteLength=function(p){var q=0;var o;var n;for(o=0;o<p.length;o++){n=p.charCodeAt(o);if(n<127){q=q+1}else{if((128<=n)&&(n<=2047)){q+=2}else{if((2048<=n)&&(n<=65535)){q+=3}}}}return q};i._populateMessage=function(n,q,p){if(q){for(var o=0;o<q.length;++o){n.insert(q[o],true)}}if(p){n.setBody=p}else{n.setItem("Content-Length",new g.Header("0","Content-Length"))}};i.createRequest=function(r,p,q,o){var n=new g.Message();n.method=r;n.uri=typeof p=="string"?new g.URI(p):p;n.protocol="SIP/2.0";i._populateMessage(n,q,o);if(n.hasItem("CSeq")&&n.getItem("CSeq").method!=r){n.setItem("CSeq",new g.Header(""+n.getItem("CSeq").number+" "+r,"CSeq"))}return n};i.createResponse=function(o,t,s,q,p){var n=new g.Message();n.response=o;n.responsetext=t;if(p!==undefined){n.setItem("To",p.getItem("To"));n.setItem("From",p.getItem("From"));n.setItem("CSeq",p.getItem("CSeq"));n.setItem("Call-ID",p.getItem("Call-ID"));n.setItem("Via",p.getItem("Via"));if(o==100&&p.hasItem("Timestamp")){n.setItem("Timestamp",p.getItem("Timestamp"))}}i._populateMessage(n,s,q);return n};i.prototype.is1xx=function(){return this.response&&Math.floor(this.response/100)==1};i.prototype.is2xx=function(){return this.response&&Math.floor(this.response/100)==2};i.prototype.is3xx=function(){return this.response&&Math.floor(this.response/100)==3};i.prototype.is4xx=function(){return this.response&&Math.floor(this.response/100)==4};i.prototype.is5xx=function(){return this.response&&Math.floor(this.response/100)==5};i.prototype.is6xx=function(){return this.response&&Math.floor(this.response/100)==6};i.prototype.isfinal=function(){return this.response&&this.response>=200};g.Message=i;function j(n){this.branch=null;this.id=null;this.stack=null;this.app=null;this.request=null;this.transport=null;this.remote=null;this.tag=null;this.state=null;this.server=n;this.timers={};this.timer=new g.Timer();this.close=function(){this.stopTimers();if(this.stack){if(this.stack.transactions[this.id]!==undefined){delete this.stack.transactions[this.id]}}};this.setState=function(o){this.state=o;if(this.state=="terminated"){this.close()}};this.getHeaders=function(){var o=this.request;return g.map(function(p){return o.getItem(p)},["To","From","CSeq","Call-ID"])};this.createAck=function(){return(this.request&&!this.server?i.createRequest("ACK",this.request.uri.toString(),this.getHeaders()):null)};this.createCancel=function(){var o=(this.request&&!this.server?i.createRequest("CANCEL",this.request.uri.toString(),this.getHeaders()):null);if(o&&this.request.hasItem("Route")){o.setItem("Route",this.request.getItem("Route"))}if(o){o.setItem("Via",this.request.first("Via"))}return o};this.createResponse=function(p,r){var o=(this.request&&this.server?i.createResponse(p,r,null,null,this.request):null);var q=o.getItem("To");if(p!=100&&q.tag===undefined){q.tag=this.tag}return o};this.startTimer=function(o,p){if(p>0){var q;if(this.timers[o]!==undefined){q=this.timers[o]}else{q=this.stack.createTimer(this);this.timers[o]=q}q.delay=p;q.start()}};this.stopTimers=function(){for(var p in this.timers){var o=this.timers[p];delete this.timers[p];o.stop()}};this.timedout=function(r){if(r.running){r.stop()}var q=false;for(var p in this.timers){var o=this.timers[p];if(o===r){delete this.timers[p];if(!q){q=true;this.timeout(p,r.delay)}}}}}j.createBranch=function(p,r){var t,s,o,n;if(g.is_array(p)){t=p[0];s=p[1];o=p[2];n=p[3];localtag=p[4];remotetag=p[5]}else{t=p.getItem("To").value;s=p.getItem("From").value;o=p.getItem("Call-ID").value;n=p.getItem("CSeq").number}var q=t.toString().toLowerCase()+"|"+s.toString().toLowerCase()+"|"+o.toString()+"|"+n.toString()+"|"+localtag+"|"+((remotetag!=null)?remotetag:"");return"z9hG4bK"+g.b64_urlsafe_encode(g.MD5(q))};j.createProxyBranch=function(o,p){var n=o.first("Via");if(n&&n.branch!==undefined){return"z9hG4bK"+g.b64_urlsafe_encode(g.MD5(n.branch))}else{return j.createBranch(o,p)}};j.createId=function(n,o){return(o!="ACK"&&o!="CANCEL"?n:n+"|"+o)};j.createServer=function(o,s,r,v,n,u){if(u===undefined){u=true}var q=(r.method=="INVITE"?new g.InviteServerTransaction():new g.ServerTransaction());q.stack=o;q.app=s;q.request=r;q.transport=v;q.tag=n;var p=r.first("Via");q.remote=(p?p.getViaUri().getHostPort():null);q.branch=(p&&p.branch!==undefined?p.branch:j.createBranch(r,true));q.id=j.createId(q.branch,r.method);o.transactions[q.id]=q;if(u){q.start()}else{q.state="trying"}return q};j.createClient=function(n,s,q,u,r){var p=(q.method=="INVITE"?new g.InviteClientTransaction():new g.ClientTransaction());p.stack=n;p.app=s;p.request=q;p.remote=r;p.transport=u;var o=q.first("Via");p.branch=(o&&o.branch!==undefined?o.branch:j.createBranch(q,false));p.id=j.createId(p.branch,q.method);n.transactions[p.id]=p;p.start();return p};j.equals=function(s,q,p){var o=s.request;var n=o.getItem("To").value.uri.equals(q.getItem("To").value.uri);n=n&&o.getItem("From").value.uri.equals(q.getItem("From").value.uri);n=n&&(o.getItem("Call-ID").value==q.getItem("Call-ID").value);n=n&&(q.getItem("CSeq").value==q.getItem("CSeq").value);n=n&&(o.getItem("From").tag==q.getItem("From").tag);n=n&&(p.server==s.server);return n};g.Transaction=j;function m(p,o,n){this.T1=(p===undefined?500:p);this.T2=(o===undefined?4000:o);this.T4=(n===undefined?5000:n)}m.prototype.A=function(){return this.T1};m.prototype.B=function(){return 64*this.T1};m.prototype.D=function(){return Math.max(64*this.T1,32000)};m.prototype.E=m.prototype.A;m.prototype.F=m.prototype.B;m.prototype.G=m.prototype.A;m.prototype.H=m.prototype.B;m.prototype.I=function(){return this.T4};m.prototype.J=m.prototype.B;m.prototype.K=m.prototype.I;g.Timer=m;function b(){this.base=g.Transaction;this.base(false);delete this.base;this.start=function(){this.state="trying";if(!this.transport.reliable){this.startTimer("E",this.timer.E())}this.startTimer("F",this.timer.F());this.stack.send(this.request,this.remote,this.transport)};this.receivedResponse=function(n){if(n.is1xx()){if(this.state=="trying"){this.state="proceeding";this.app.receivedResponse(this,n)}else{if(this.state=="proceeding"){this.app.receivedResponse(this,n)}}}else{if(n.isfinal()){if(this.state=="trying"||this.state=="proceeding"){this.state="completed";this.app.receivedResponse(this,n);if(!this.transport.reliable){this.startTimer("K",this.timer.K())}else{this.timeout("K",0)}}}}};this.timeout=function(n,o){if(this.state=="trying"||this.state=="proceeding"){if(n=="E"){o=(this.state=="trying"?Math.min(2*o,this.timer.T2):this.timer.T2);this.startTimer("E",o);this.stack.send(this.request,this.remote,this.transport)}else{if(n=="F"){this.state="terminated";this.app.timeout(this)}}}else{if(this.state=="completed"){if(n=="K"){this.state="terminated"}}}};this.error=function(n){if(this.state=="trying"||this.state=="proceeding"){this.state="terminated";this.app.error(this,n)}}}g.ClientTransaction=b;function e(){this.base=g.Transaction;this.base(true);delete this.base;this.start=function(){this.state="trying";this.app.receivedRequest(this,this.request)};this.receivedRequest=function(n){if(this.request.method==n.method){if(this.state=="proceeding"||this.state=="completed"){this.stack.send(this.lastResponse,this.remote,this.transport)}else{if(this.state=="trying"){}}}};this.timeout=function(n,o){if(this.state=="completed"){if(n=="J"){this.state="terminated"}}};this.error=function(n){if(this.state=="completed"){this.state="terminated";this.app.error(this,n)}};this.sendResponse=function(n){this.lastResponse=n;if(n.is1xx()){if(this.state=="trying"||this.state=="proceedings"){this.state="proceeding";this.stack.send(n,this.remote,this.transport)}}else{if(n.isfinal()){if(this.state=="proceeding"||this.state=="trying"){this.state="completed";this.stack.send(n,this.remote,this.transport);if(!this.transport.reliable){this.startTimer("J",this.timer.J())}else{this.timeout("J",0)}}}}}}g.ServerTransaction=e;function l(){this.base=g.Transaction;this.base(false);delete this.base;this.start=function(){this.state="calling";if(!this.transport.reliable){this.startTimer("A",this.timer.A())}this.startTimer("B",this.timer.B());this.stack.send(this.request,this.remote,this.transport)};this.receivedResponse=function(n){if(n.is1xx()){if(this.state=="calling"){this.state="proceeding";this.app.receivedResponse(this,n)}else{if(this.state=="proceeding"){this.app.receivedResponse(this,n)}}}else{if(n.is2xx()){if(this.state=="calling"||this.state=="proceeding"){this.state="terminated";this.app.receivedResponse(this,n)}else{if(this.state=="terminated"){this.stack.send(this.createAck(n),this.remote,this.transport)}}}else{if(this.state=="calling"||this.state=="proceeding"){this.state="completed";this.stack.send(this.createAck(n),this.remote,this.transport);this.app.receivedResponse(this,n);if(!this.transport.reliable){this.startTimer("D",this.timer.D())}else{this.timeout("D",0)}}else{if(this.state=="completed"){this.stack.send(this.createAck(n),this.remote,this.transport)}}}}};this.timeout=function(n,o){if(this.state=="calling"){if(n=="A"){this.startTimer("A",2*o);this.stack.send(this.request,this.remote,this.transport)}else{if(n=="B"){this.state="terminated";this.app.timeout(this)}}}else{if(this.state=="completed"){if(n=="D"){this.state="terminated"}}}};this.error=function(n){if(this.state=="calling"||this.state=="completed"){this.state="terminated";this.app.error(this,n)}};this.createAck=function(o){if(!this.request){throw new String("No transaction request found")}var n=i.createRequest("ACK",this.request.uri.toString());n.setItem("Call-ID",this.request.getItem("Call-ID"));n.setItem("From",this.request.getItem("From"));n.setItem("To",o?o.getItem("To"):this.request.getItem("To"));n.setItem("Via",this.request.first("Via"));n.setItem("CSeq",new g.Header(""+this.request.getItem("CSeq").number+" ACK","CSeq"));if(this.request.hasItem("Route")){n.setItem("Route",this.request.getItem("Route"))}return n}}g.InviteClientTransaction=l;function a(){this.base=g.Transaction;this.base(true);delete this.base;this.start=function(){this.state="proceeding";this.sendResponse(this.createResponse(100,"Trying"));this.app.receivedRequest(this,this.request)};this.receivedRequest=function(n){if(this.request.method==n.method){if(this.state=="proceeding"||this.state=="completed"){this.stack.send(this.lastResponse,this.remote,this.transport)}}else{if(n.method=="CANCEL"){this.app.receivedRequest(this,n)}else{if(n.method=="ACK"){if(this.state=="completed"){this.state="confirmed";if(!this.transport.reliable){this.startTimer("I",this.timer.I())}else{this.timeout("I",0)}this.app.receivedRequest(this,n)}else{if(this.state=="confirmed"){}else{if(this.state=="terminated"){this.app.receivedRequest(this,n)}}}}}}};this.timeout=function(n,o){if(this.state=="completed"){if(n=="G"){this.startTimer("G",Math.min(2*o,this.timer.T2));this.stack.send(this.lastResponse,this.remote,this.transport)}else{if(n=="H"){this.state="terminated";this.app.timeout(this)}}}else{if(this.state=="confirmed"){if(n=="I"){this.state="terminated"}}}};this.error=function(n){if(this.state=="proceeding"||this.state=="trying"||this.state=="confirmed"){this.state="terminated";this.app.error(this,n)}};this.sendResponse=function(n){this.lastResponse=n;if(n.is1xx()){if(this.state=="proceeding"||this.state=="trying"){this.stack.send(n,this.remote,this.transport)}}else{if(n.is2xx()){if(this.state=="proceeding"||this.state=="trying"){this.state="terminated";this.stack.send(n,this.remote,this.transport)}}else{if(this.state=="proceeding"||this.state=="trying"){this.state="completed";if(!this.transport.reliable){this.startTimer("G",this.timer.G())}this.startTimer("H",this.timer.H());this.stack.send(n,this.remote,this.transport)}}}}}g.InviteServerTransaction=a;function c(n,o,p){if(n!==undefined){this.stack=n;this.request=(o===undefined?null:o);this.server=(p===undefined?(o!==null):p);this.name=(this.server?"UAS":"UAC");this.transaction=null;this.cancelTransaction=null;this.breaker=false;this.cancelRequest=null;this.callId=(o&&o.hasItem("Call-ID")?o.getItem("Call-ID").value:this.stack.getNewCallId());this.remoteParty=(o&&o.hasItem("From")?o.getItem("From").value:null);this.localParty=(o&&o.hasItem("To")?o.getItem("To").value:null);this.localTag=this.stack.tag+Math.floor(10000000000*Math.random());this.remoteTag=null;this.subject=(o&&o.hasItem("Subject")?o.getItem("Subject").value:null);this.secure=(o&&o.uri.scheme=="sips"?true:false);this.maxForwards=70;this.routeSet=[];this.localTarget=null;this.remoteTarget=null;this.remoteCandidates=null;this.localSeq=0;this.remoteSeq=0;this.contact=new g.Address(this.stack.uri.toString());if(this.localParty&&this.localParty.uri.user){this.contact.uri.user=this.localParty.uri.user}this.autoack=true;this.auth={}}}c.prototype.toString=function(){return"<"+this.name+" call-id="+this.callId+" />"};c.prototype.createTransaction=function(n){return g.Transaction.createServer(this.stack,this,n,this.stack.transport,this.stack.tag)};c.prototype.createRequest=function(n,w,y){if(y===undefined){y=null}if(w===undefined){w=null}this.server=false;if(!this.remoteParty){throw new String("No remoteParty for UAC")}if(!this.localParty){this.localParty=new g.Address('"Anonymous" <sip:anonymous@anonymous.invalid>')}var q=new g.URI(this.remoteTarget?this.remoteTarget.toString():this.remoteParty.uri.toString());if(n=="REGISTER"){q.user=null}if(!this.secure&&q.secure){this.secure=true}if(n!="ACK"&&n!="CANCEL"){this.localSeq=this.localSeq+1}var A=new g.Header(this.remoteParty.toString(),"To");A.value.uri.secure=this.secure;var o=new g.Header(this.localParty.toString(),"From");o.value.uri.secure=this.secure;o.tag=this.localTag;var u=new g.Header(""+this.localSeq+" "+n,"CSeq");if(n=="REGISTER"){this.callId=this.stack.getNewCallId()}var v=new g.Header(this.callId,"Call-ID");var t=new g.Header(""+this.maxForwards,"Max-Forwards");var z=this.stack.createVia(this.secure);z.branch=g.Transaction.createBranch([A.value,o.value,v.value,u.number,this.localTag,this.remoteTag],false);if(!this.localTarget){this.localTarget=this.stack.uri.dup();this.localTarget.user=this.localParty.uri.user}if(n!="MESSAGE"){var r=new g.Header(this.localTarget.toString(),"Contact");if(this.breaker){r.value.uri.param.transport="ws";r.value.uri.param["rtcweb-breaker"]="yes"}r.value.uri.secure=this.secure;var p=[A,o,u,v,t,z,r]}else{var p=[A,o,u,v,t,z]}if(this.routeSet){for(var s=0;s<this.routeSet.length;++s){var x=new g.Header(this.routeSet[s].toString(),"Route");x.value.uri.secure=this.secure;p.push(x)}}if(y){p.append(new g.Header(y,"Content-Type"))}this.request=i.createRequest(n,q.toString(),p,w);return this.request};c.prototype.createRegister=function(n){if(n){this.remoteParty=new g.Address(n.toString())}if(!this.localParty){this.localParty=new g.Address(this.remoteParty.toString())}return this.createRequest("REGISTER")};c.prototype.sendRequest=function(p){if(!this.request&&p.method=="REGISTER"){if(this.transaction&&this.transaction.state!="completed"&&this.transaction.state!="terminated"){throw new String("Cannot re-REGISTER since pending registration")}}this.request=p;if(!p.hasItem("Route")){this.remoteTarget=p.uri}var q=this.remoteTarget;if(p.hasItem("Route")){var n=p.all("Route");if(n.length>0){q=n[0].value.uri;if(!q||q.param.lr===undefined){log("strict route target=",q,"routes=",n);n.shift();if(n.length>0){log("appending our route");n.append(new g.Header(p.uri.toString(),"Route"))}p.setItem("Route",n);p.uri=q}}}this.stack.sending(this,p);var o=q.dup();o.port=(q.port?q.port:(q.secure?5061:5060));if(o.host=="localhost"){this.remoteCandidates=[new g.URI("sip:127.0.0.1:"+o.port)];this.tryNextCandidate()}else{if(g.isIPv4(o.host)){this.remoteCandidates=[o];this.tryNextCandidate()}else{var r=this;this.stack.resolve(o.host,"A",function(t,s){r.remoteCandidates=g.map(function(u){return new g.URI("sip:"+u.address+":"+o.port)},s);r.tryNextCandidate()})}}};c.prototype.tryNextCandidate=function(){if(!this.remoteCandidates||this.remoteCandidates.length==0){this.error(null,"cannot resolve DNS target")}else{target=this.remoteCandidates.shift();if(this.request.method!="ACK"){this.transaction=g.Transaction.createClient(this.stack,this,this.request,this.stack.transport,target.getHostPort())}else{this.stack.send(this.request,target.getHostPort())}}};c.prototype.retryNextCandidate=function(){if(!this.remoteCandidates||this.remoteCandidates.length==0){throw new String("No more DNS resolved address to try")}var n=new g.URI(this.remoteCandiates.shift());this.request.first("Via").branch+="A";this.transaction=g.Transaction.createClient(this.stack,this,this.request,this.stack.transport,n.getHostPort())};c.prototype.canCreateDialog=function(o,n){return(n.is2xx()&&(o.method=="INVITE"||o.method=="SUBSCRIBE"))||(n.is1xx()&&n.getItem("To")["tag"]!==undefined)};c.prototype.receivedResponse=function(q,n){if(q&&q!==this.transaction){if(q&&q!==this.cancelTransaction){log("Invalid transaction received "+q+" != "+this.transaction);return}}if(n.all("Via").length>1){}if(n.is1xx()){if(this.cancelRequest){var p=g.Transaction.createClient(this.stack,this,this.cancelRequest,q.transport,q.remote);this.cancelRequest=null}else{this.stack.receivedResponse(this,n)}}else{if(n.response==401||n.response==407){if(!this.authenticate(n,this.transaction)){this.stack.receivedResponse(this,n)}}else{if(this.canCreateDialog(this.request,n)){var o=g.Dialog.createClient(this.stack,this.request,n,q);o.autoack=this.autoack;this.stack.dialogCreated(o,this);this.stack.receivedResponse(o,n);if(o.autoack&&this.request.method=="INVITE"&&n.getItem("CSeq")["method"]=="INVITE"){o.sendRequest(o.createRequest("ACK"))}}else{this.stack.receivedResponse(this,n)}}}};c.prototype.receivedRequest=function(q,p){if(q&&this.transaction&&q!=this.transaction&&p.method!="CANCEL"){throw new String("Invalid transaction for received request")}this.server=true;if(p.uri.scheme!="sip"&&p.uri.scheme!="sips"){q.sendResponse(q.createResponse(416,"Unsupported URI scheme"));return}if(p.getItem("To")["tag"]===undefined&&p.method!="CANCEL"){if(this.stack.findOtherTransaction(p,q)){q.sendResponse(q.createResponse(482,"Loop detected - found another transaction"));return}}if(p.hasItem("Require")){if(p.method!="CANCEL"&&p.method!="ACK"){var n=q.createResponse(420,"Bad extension");n.setItem("Unsupported",new g.Header(p.Require.value,"Unsupported"));q.sendResponse(n);return}}if(q&&p.method!="CANCEL"){this.transaction=q}if(p.method=="CANCEL"){var o=this.stack.findTransaction(g.Transaction.createId(q.branch,"INVITE"));if(!o){q.sendResponse(q.createResponse(481,"Original transaction not found"));return}if(o.state=="proceeding"||o.state=="trying"){o.sendResponse(o.createResponse(487,"Request Terminated"))}q.sendResponse(q.createResponse(200,"OK"));this.stack.cancelled(this,p);return}this.stack.receivedRequest(this,p)};c.prototype.sendResponse=function(p,t,r,s,o){if(t===undefined){t=null}if(r===undefined){r=null}if(s===undefined){s=null}if(o===undefined){o=true}if(!this.request){throw new String("Invalid request in sending a response")}if(typeof p=="number"){p=this.createResponse(p,t,r,s)}if(!o){if(this.request.hasItem("Record-Route")){p.setItem("Record-Route",this.request.getItem("Record-Route"))}if(!p.hasItem("Contact")){var n=new g.Address(this.contact.toString());if(!n.uri.user){n.uri.user=this.request.getItem("To").value.uri.user}n.uri.secure=this.secure;p.setItem("Contact",new g.Header(n.toString(),"Contact"))}this.stack.sending(q,p)}else{if(o&&this.canCreateDialog(this.request,p)){if(this.request.hasItem("Record-Route")){p.setItem("Record-Route",this.request.getItem("Record-Route"))}if(!p.hasItem("Contact")){var n=new g.Address(this.contact.toString());if(!n.uri.user){n.uri.user=this.request.getItem("To").value.uri.user}n.uri.secure=this.secure;p.setItem("Contact",new g.Header(n.toString(),"Contact"))}var q=h.createServer(this.stack,this.request,p,this.transaction);this.stack.dialogCreated(q,this);this.stack.sending(q,p)}else{this.stack.sending(this,p)}}if(!this.transaction){this.stack.send(p,p.first("Via").getViaUri().getHostPort())}else{this.transaction.sendResponse(p)}};c.prototype.createResponse=function(n,q,o,p){if(o===undefined){o=null}if(p==undefined){p=null}if(!this.request){throw new String("Invalid request in creating a response")}n=g.Message.createResponse(n,q,null,o,this.request);if(p){n.setItem("Content-Type",new g.Header(p,"Content-Type"))}if(n.response!=100&&n.getItem("To")["tag"]===undefined){n.getItem("To")["tag"]=this.localTag}return n};c.prototype.sendCancel=function(){if(!this.transaction){throw new String("No transaction for sending CANCEL")}this.cancelRequest=this.transaction.createCancel();this.cancelRequest.setItem("Max-Forwards",new g.Header(""+this.maxForwards,"Max-Forwards"));if(this.transaction.state!="trying"&&this.transaction.state!="calling"){if(this.transaction.state=="proceeding"){var n=g.Transaction.createClient(this.stack,this,this.cancelRequest,this.transaction.transport,this.transaction.remote);this.cancelTransaction=n}this.cancelRequest=null}};c.prototype.timeout=function(n){if(n&&n!=this.transaction){return}this.transaction=null;if(!this.server){if(this.remoteCandidates&&this.remoteCandidates.length>0){this.retryNextCandidate()}else{this.receivedResponse(null,i.createResponse(408,"Request timeout",null,null,this.request))}}};c.prototype.error=function(o,n){if(o&&o!=this.transaction){return}this.transaction=null;if(!this.server){if(this.remoteCandidates&&this.remoteCandidates.length>0){this.retryNextCandidate()}else{this.receivedResponse(null,i.createResponse(503,"Service unavailable - "+n,null,null,this.request))}}};c.prototype.authenticate=function(p,o){var v=p.first("WWW-Authenticate")||p.first("Proxy-Authenticate")||null;if(!v){return false}var q=new g.Message(o.request.toString());var t=false;var s=false;var n=q.all("Authorization","Proxy-Authorization");for(var r=0;r<n.length;++r){var u=n[r];console.log("handling b="+u);if((v.realm==u.realm)&&(((v.name=="WWW-Authenticate")&&(u.name=="Authorization"))||((v.name=="Proxy-Authenticate")&&(u.name=="Proxy-Authorization")))){s=true;break}}if(((s)||(u==undefined))&&(v.realm!==undefined)){var x=this.stack.authenticate(this,v);if(!x||v.password===undefined&&v.hashValue===undefined){return false}var w=g.createAuthorization(v.value,v.username,v.password,q.uri.toString(),this.request.method,this.request.body,this.auth);if(w){q.delItem("Authorization");q.insert(new g.Header(w,(v.name=="WWW-Authenticate"?"Authorization":"Proxy-Authorization")),true);t=true}}if(t){this.localSeq=this.localSeq+1;q.setItem("CSeq",new g.Header(""+this.localSeq+" "+q.method,"CSeq"));q.first("Via").branch=g.Transaction.createBranch(q,false);this.request=q;this.transaction=g.Transaction.createClient(this.stack,this,this.request,this.transaction.transport,this.transaction.remote);return true}else{return false}};g.UserAgent=c;function h(n,o,p,q){if(q===undefined){q=null}this.base=g.UserAgent;this.base(n,o,p,q);delete this.base;this.servers=[];this.clients=[];this._id=null;if(q){q.app=this}}h.prototype=new g.UserAgent;h.createServer=function(n,p,o,r){var q=new h(n,p,true);q.request=p;q.routeSet=(p.hasItem("Record-Route")?p.all("Record-Route"):null);while(q.routeSet&&g.isMulticast(q.routeSet[0].value.uri.host)){log("deleting top multicast routeSet "+q.routeSet[0]);q.routeSet.shift();if(q.routeSet.length==0){q.routeSet=null}}q.secure=p.uri.secure;q.localSeq=p.getItem("CSeq").number;q.remoteSeq=p.getItem("CSeq").number;q.callId=p.getItem("Call-ID").value;q.localTag=(o.getItem("To")["tag"]||"");q.remoteTag=(o.getItem("From")["tag"]||"");q.localParty=new g.Address(p.getItem("To").value.toString());q.remoteParty=new g.Address(p.getItem("From").value.toString());q.stack.log("request contact "+p.Contact);if(p.hasItem("Contact")){q.remoteTarget=new g.URI(p.first("Contact").value.uri.toString())}n.dialogs[q.getId()]=q;q.servers.push(r);return q};h.createClient=function(n,p,o,r){var q=new h(n,p,false);q.request=p;q.routeSet=(o.hasItem("Record-Route")?o.all("Record-Route").reverse():null);q.secure=p.uri.secure;q.localSeq=p.getItem("CSeq").number;q.remoteSeq=0;q.callId=p.getItem("Call-ID").value;q.localTag=(o.getItem("From")["tag"]||"");q.remoteTag=(o.getItem("To")["tag"]||"");q.localParty=new g.Address(p.getItem("From").value.toString());q.remoteParty=new g.Address(p.getItem("To").value.toString());if(o.hasItem("Contact")){q.remoteTarget=new g.URI(o.first("Contact").value.uri.toString())}n.dialogs[q.getId()]=q;return q};h.extractId=function(n){var o=n.getItem("Call-ID");var q=n.getItem("From");var p=n.getItem("To");return o.value+"|"+(n.method?p.tag:q.tag)+"|"+(n.method?q.tag:p.tag)};h.prototype.close=function(){if(this.stack){var n=this.getId();if(this.stack.dialogs[n]!==undefined){delete this.stack.dialogs[n]}}};h.prototype.getId=function(){if(!this._id){this._id=this.callId+"|"+this.localTag+"|"+this.remoteTag}return this._id};h.prototype.createRequest=function(q,o,p){var n=g.UserAgent.prototype.createRequest.apply(this,[q,o!==undefined?o:null,p!==undefined?p:null]);if(this.remoteTag){n.getItem("To")["tag"]=this.remoteTag}if(this.routeSet&&this.routeSet.length>0&&this.routeSet[0].value.uri.param.lr===undefined){n.uri=this.routeSet[0].value.uri.dup();if(n.uri.param.lr!==undefined){delete n.uri.param.lr}}return n};h.prototype.createResponse=function(n,r,p,q){if(this.servers.length==0){throw new String("No server transaction to create response")}var o=this.servers[0].request;n=g.Message.createResponse(n,r,null,p!==undefined?p:null,o);if(q){n.setItem("Content-Type",new g.Header(q,"Content-Type"))}if(n.response!=100&&n.getItem("To")["tag"]===undefined){n.getItem("To")["tag"]=this.localTag}return n};h.prototype.sendResponse=function(o,s,q,r,n){if(n===undefined){n=true}if(this.servers.length==0){throw new String("No server transaction to send response")}this.transaction=this.servers[0];this.request=this.servers[0].request;g.UserAgent.prototype.sendResponse.apply(this,[o,s!==undefined?s:null,q!==undefined?q:null,r!==undefined?r:null,false]);var p=typeof o=="number"?o:o.response;if(p>=200){this.servers.shift()}};h.prototype.sendCancel=function(){if(this.clients.length==0){d.stack.log("No client transaction to send cancel");return}this.transaction=this.clients[0];this.request=this.clients[0].request;g.UserAgent.prototype.sendCancel.apply(this,[])};h.prototype.receivedRequest=function(o,n){if(this.remoteSeq!=0&&n.getItem("CSeq").number<this.remoteSeq){d.stack.log("Dialog.receivedRequest() CSeq is old "+n.getItem("CSeq").number+" < "+this.remoteSeq);this.sendResponse(500,"Internal server error - invalid CSeq");return}this.remoteSeq=n.getItem("CSeq").number;if(n.method=="INVITE"&&n.hasItem("Contact")){this.remoteTarget=n.first("Contact").value.uri.dup()}if(n.method=="ACK"||n.method=="CANCEL"){this.servers=g.filter(function(p){return p!==o},this.servers);if(n.method=="ACK"){this.stack.receivedRequest(this,n)}else{this.stack.cancelled(this,o.request)}return}if(n.method!="ACK"){this.servers.push(o)}this.stack.receivedRequest(this,n)};h.prototype.receivedResponse=function(o,n){if(n.is2xx()&&n.hasItem("Contact")&&o&&o.request.method=="INVITE"){this.remoteTarget=n.first("Contact").value.uri.dup()}if(!n.is1xx()||(n.is1xx()&&n.getItem("To")["tag"]!==undefined)){this.clients=g.filter(function(p){return p!==o},this.clients)}if(n.response==408||n.response==481){this.close()}if(n.response==401||n.response==407){if(!this.authenticate(n,o)){this.stack.receivedResponse(this,n)}}else{if(o){this.stack.receivedResponse(this,n)}}if(this.autoack&&n.is2xx()&&(o&&o.request.method=="INVITE"||n.getItem("CSeq").method=="INVITE")){this.sendRequest(this.createRequest("ACK"))}};g.Dialog=h;function f(o,p,n){this.tag=""+Math.ceil(10000000000*Math.random());this.app=o;this.transport=p;this.fix_nat=(n!==undefined?n:false);this.closing=false;this.dialogs={};this.transactions={};this.serverMethods=["INVITE","BYE","MESSAGE","SUBSCRIBE","NOTIFY"];this.uri=new g.URI(((p.type=="tls")?"sips":"sip")+":"+p.hostport)}f.prototype.log=function(n){if(this.app){this.app.debug(n)}};f.prototype.close=function(){this.closing=true;for(var o in this.dialogs){delete this.dialogs[o]}for(var n in this.transactions){delete this.transactions[n]}delete this.dialogs;delete this.transactions};f.prototype.getNewCallId=function(){return""+Math.ceil(10000000000*Math.random())+"@"+(this.transport.host||"localhost")};f.prototype.createVia=function(n){if(!this.transport){throw new String("No transport in stack")}if(n&&!this.transport.secure){throw new String("Cannot find a secure transport")}return new g.Header("SIP/2.0/"+this.transport.type.toUpperCase()+" "+this.transport.hostport,"Via")};f.prototype.send=function(o,n,p){if(n&&(n instanceof g.URI)){if(!n.host){throw new String("No host in destination uri")}n=[n.host,n.port||(this.transport.type=="tls"||this.transport.secure?5061:5060)]}if(o instanceof g.Message){if(o.method){if(n&&g.isMulticast(n[0])){o.first("Via")["maddr"]=n[0];o.first("Via")["ttl"]=1}}else{if(o.response){if(!n){n=o.first("Via").getViaUri().getHostPort()}}}o=o.toString()}this.app.send(o,n,this)};f.prototype.received=function(r,u){var n=new g.Message();try{n._parse(r);var q=new g.URI((this.transport.secure?"sips":"sip")+":"+u[0].toString()+":"+u[1]);if(n.method){this.log("received request="+n.method);if(!n.hasItem("Via")){throw new String("No Via header in request")}var p=n.first("Via");if(p.getViaUri().host!=u[0]||p.getViaUri().port!=u[1]){p.received=u[0];p.getViaUri().host=u[0]}if(p.rport!==undefined){p.rport=u[1];p.getViaUri().port=u[1]}if(this.fix_nat&&(n.method=="INVITE"||n.method=="MESSAGE")){this._fixNatContact(n,u)}this._receivedRequest(n,q)}else{if(n.response){this.log("received response="+n.response+" "+n.responsetext);var o=n.getItem("CSeq");if(this.fix_nat&&o&&(o.method=="INVITE"||o.method=="MESSAGE")){this._fixNatContact(n,u)}this._receivedResponse(n,q)}else{throw new String("Received invalid message")}}}catch(t){this.log("Error in received message: "+t);this.log(t.stack);if(n.method&&n.uri&&n.protocol&&n.method!="ACK"){try{this.send(g.Message.createResponse(400,""+t,null,null,n))}catch(s){}}}};f.prototype._fixNatContact=function(n,p){if(n.hasItem("Contact")){var o=n.first("Contact").value.uri;if((o.scheme=="sip"||o.scheme=="sips")&&g.isIPv4(o.host)&&o.host!=p[0]&&!g.isLocal(p[0])&&!g.isLocal(o.host)&&g.isPrivate(o.host)&&!isPrivate(p[0])){this.log("fixing NAT -- private contact from "+o);o.host=p[0];o.port=p[1];this.log("to received "+o)}}};f.prototype._receivedRequest=function(n,q){if(!n.hasItem("Via")){throw new String("No Via header in received request")}var x=n.first("Via")["branch"]!==undefined?n.first("Via")["branch"]:"";var z=null;if(n.method=="ACK"){w=this.findDialog(n);if(w!=null){if(w.transaction instanceof a&&w.transaction!=null){lastResponse=w.transaction.lastResponse;if(lastResponse.isfinal()){if(lastResponse.is2xx()){z=null}else{this.log("Found existing transaction for ACK on non-2xx final response");z=w.transaction}}}else{z=null}}else{z=null}if(n.isfinal()){if(n.is2xx()){z=null}else{}}}else{z=this.findTransaction(x);if(!z){z=this.findTransaction(g.Transaction.createId(x,n.method))}}if(!z){var s=null;if(n.method!="CANCEL"&&n.getItem("To")["tag"]!==undefined){this.log("request has To tag");var w=this.findDialog(n);if(!w){this.log("no exiting dialog found");if(n.method!="ACK"){this.log("creating new UAS");var y=this.createServer(n,q);if(y){s=y}else{this.send(g.Message.createResponse(481,"Dialog does not exist",null,null,n));return}}else{this.log("no dialog for ACK, finding transaction");if(!z&&x!="0"){z=this.findTransaction(g.Transaction.createId(x,"INVITE"))}if(z&&z.state!="terminated"){this.log("Found transaction "+z);z.receivedRequest(n);return}else{this.log("No existing transaction for ACK");var y=this.createServer(n,q);if(y){s=y}else{this.log("Ignoring ACK without transaction");return}}}}else{this.log("found existing dialog");s=w}}else{if(n.method!="CANCEL"){this.log("creating new UAS");var y=this.createServer(n,q);if(y){s=y}else{if(n.method=="OPTIONS"){var v=new g.Message.createResponse(200,"OK",null,null,n);v.setItem("Allow",new g.Header("INVITE, ACK, CANCEL, BYE, OPTIONS","Allow"));this.send(v);return}else{if(n.method!="ACK"){this.send(g.Message.createResponse(405,"Method not allowed",null,null,n));return}}}}else{this.log("finding original transaction");var p=this.findTransaction(g.Transaction.createId(n.first("Via")["branch"],"INVITE"));if(!p){this.send(g.Message.createResponse(481,"Original transaction does not exist",null,null,n));return}else{s=p.app}}}if(s&&n.method!="ACK"){this.log("creating new server transaction");z=s.createTransaction(n);if(n.method=="ACK"&&z&&this.transactions[z.id]!==undefined){delete this.transactions[z.id]}}else{if(s&&n.method=="ACK"){s.receivedRequest(null,n)}else{if(n.method!="ACK"){this.log("could not find any app to handle the request");this.send(i.createResponse(404,"Not found",null,null,n))}}}}else{this.log("found existing transaction");if((z instanceof g.ServerTransaction)||(z instanceof g.InviteServerTransaction)){z.receivedRequest(n)}else{this.log("the transaction was not a server transaction");this.send(g.Message.createResponse(482,"Loop detected",null,null,n))}}};f.prototype._receivedResponse=function(s,q){if(!s.hasItem("Via")){throw new String("No Via header in received response")}var p=s.first("Via")["branch"]!==undefined?s.first("Via")["branch"]:"";var v=s.getItem("CSeq").method;var o=this.findTransaction(g.Transaction.createId(p,v));if(!o){if(v=="INVITE"&&s.is2xx()){var u=this.findDialog(s);if(!u){throw new String("No transaction or dialog for 2xx of INVITE")}else{u.receivedResponse(null,s)}}else{this.log("transaction id "+g.Transaction.createId(p,v)+" not found");if(v=="INVITE"&&s.isfinal()){var n=g.Message.createRequest("ACK",s.getItem("To").value.uri.toString());n.setItem("Call-ID",s.getItem("Call-ID"));n.setItem("From",s.getItem("From"));n.setItem("To",s.getItem("To"));n.setItem("Via",s.first("Via"));n.setItem("CSeq",new g.Header(""+s.getItem("CSeq").number+" ACK","CSeq"));this.send(n,q.getHostPort())}throw new String("No transaction for response")}}else{o.receivedResponse(s)}};f.prototype.createServer=function(o,n){return this.app.createServer(o,n,this)};f.prototype.sending=function(n,o){return(this.app.sending!==undefined?this.app.sending(n,o,this):null)};f.prototype.receivedRequest=function(n,o){this.app.receivedRequest(n,o,this)};f.prototype.receivedResponse=function(o,n){this.app.receivedResponse(o,n,this)};f.prototype.cancelled=function(n,o){this.app.cancelled(n,o,this)};f.prototype.dialogCreated=function(o,n){this.app.dialogCreated(o,n,this)};f.prototype.authenticate=function(n,o){return(this.app.authenticate!==undefined?this.app.authenticate(n,o,this):false)};f.prototype.createTimer=function(n){return this.app.createTimer(n,this)};f.prototype.resolve=function(o,n,p){return this.app.resolve(o,n,p,this)};f.prototype.findDialog=function(n){var o=(n instanceof i?g.Dialog.extractId(n):n.toString());return(this.dialogs[o]!==undefined?this.dialogs[o]:null)};f.prototype.findTransaction=function(n){return(this.transactions[n]!==undefined?this.transactions[n]:null)};f.prototype.findOtherTransaction=function(p,q){for(var o in this.transactions){var n=this.transactions[o];if(n!==q&&g.Transaction.equals(n,p,q)){return n}}return null};g.Stack=f})(sip);(function(a){a._testCreateAuthenticate=function(){assert(a.createAuthenticate("Basic",{realm:"iptel.org"})=='Basic realm="iptel.org"',"createAuthenticate('Basic', ...)");assert(a.createAuthenticate("Digest",{realm:"iptel.org",domain:"sip:iptel.org",nonce:"somenonce"})=='Digest realm="iptel.org", domain="sip:iptel.org", qop="auth", nonce="somenonce", opaque="", stale=FALSE, algorithm=MD5',"createAuthenticate('Digest', ...)")};if(a.onetime===undefined){a.onetime=""+Math.random()}a.createAuthenticate=function(e,l){if(e.toLowerCase()=="basic"){return"Basic realm="+a._quote(l&&l.realm||"")}else{if(e.toLowerCase()=="digest"){var f=["realm","domain","qop","nonce","opaque","stale","algorithm"];var j=["stale","algorithm"];var b=Math.ceil((new Date()).getTime()/1000);var h=l&&l.nonce||a.b64_encode(""+b+" "+a.MD5(""+b+":"+a.onetime));var c={realm:"",domain:"",opaque:"",stale:"FALSE",algorithm:"MD5",qop:"auth",nonce:h};var i=a.map(function(k){return[k,l&&l[k]||c[k]]},f);for(var g in l){if(f.indexOf(g)<0){i.push([g,l[g]])}}return"Digest "+a.map(function(k){return k[0]+"="+(j.indexOf(k[0])<0?a._quote(k[1]):k[1])},i).join(", ")}else{throw new String("invalid auth method "+e)}}};a._testCreateAuthorization=function(){var b={cnonce:"0a4f113b",nc:0};assert(a.createAuthorization('Digest realm="testrealm@host.com", qop="auth", nonce="dcd98b7102dd2f0e8b11d0f600bfb0c093", opaque="5ccc069c403ebaf9f0171e9517f40e41"',"Mufasa","Circle Of Life","/dir/index.html","GET",null,b)=='Digest cnonce="0a4f113b",nc=00000001,nonce="dcd98b7102dd2f0e8b11d0f600bfb0c093",opaque="5ccc069c403ebaf9f0171e9517f40e41",qop=auth,realm="testrealm@host.com",response="6629fae49393a05397450978507c4ef1",uri="/dir/index.html",username="Mufasa"','createAuthorization("Digest...")');assert(a.createAuthorization('Basic realm="WallyWorld"',"Aladdin","open sesame")=="Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==","createAuthorization('Basic...')")};a.createAuthorization=function(D,f,b,k,e,E,c){var w=a.str_partition(a.str_strip(D)," ");var h=w[0];var q=w[2];var p={};var g={username:f,password:b};if(h.toLowerCase()=="basic"){return h+" "+a.basic(g)}else{if(h.toLowerCase()=="digest"){if(q){w=q.split(",");for(var A=0;A<w.length;++A){var C=a.str_partition(a.str_strip(w[A]),"=");var x=C[0];var o=C[2];p[a.str_strip(x.toLowerCase())]=a._unquote(a.str_strip(o))}}var u=["username","realm","nonce","opaque","algorithm"];for(var z=0;z<u.length;++z){var m=u[z];if(p[m]!==undefined){g[m]=p[m]}}g.uri=k||null;g.httpMethod=e||null;if(p.qop!==undefined){var B,l;if(c&&c.cnonce!==undefined){B=c.cnonce;l=c.nc+1}else{B=a.MD5(""+Math.ceil(10000000000*Math.random()));l=1}if(c){c.cnonce=B;c.nc=l}g.qop="auth";g.cnonce=B;l=l.toString(16);if(l.length<8){l="00000000".substr(0,8-l.length)+l}g.nc=l}g.response=a.digest(g);u=["name","authMethod","value","httpMethod","entityBody","password"];var t=[];for(var r in g){if(u.indexOf(r)<0){t.push(r)}}t.sort();return h+" "+a.map(function(i){return i+"="+(i=="qop"||i=="nc"?g[i]:a._quote(g[i]))},t).join(",")}else{throw new String("Invalid auth method -- "+h)}}};a._testBasicDigest=function(){assert(a.basic({username:"Aladdin",password:"open sesame"})=="QWxhZGRpbjpvcGVuIHNlc2FtZQ==","basic()");var b={httpMethod:"GET",username:"Mufasa",password:"Circle Of Life",realm:"testrealm@host.com",algorithm:"md5",nonce:"dcd98b7102dd2f0e8b11d0f600bfb0c093",uri:"/dir/index.html",qop:"auth",nc:"00000001",cnonce:"0a4f113b",opaque:"5ccc069c403ebaf9f0171e9517f40e41"};assert(a.digest(b)=='"6629fae49393a05397450978507c4ef1"',"digest()")};a.digest=function(m){var n=m.algorithm||null;var i=m.username||null;var k=m.realm||null;var q=m.password||"";var l=m.nonce||null;var s=m.cnonce||null;var j=m.nc!==undefined?m.nc:null;var c=m.qop||null;var b=m.httpMethod||null;var g=m.uri||null;var f=m.entityBody||null;var p=function(t){return a.MD5(t)};var r=function(t,u){return a.MD5(t+":"+u)};var h,e;if(n&&n.toLowerCase()=="md5-sess"){h=p(i+":"+k+":"+q)+":"+l+":"+s}else{h=i+":"+k+":"+q}if(!c||c=="auth"){e=b+":"+g.toString()}else{e=b+":"+g.toString()+":"+p(f&&f.toString()||"")}if(c&&(c=="auth"||c=="auth-int")){var o=l+":"+j.toString()+":"+s+":"+c+":"+e;return a._quote(r(p(h),l+":"+j.toString()+":"+s+":"+c+":"+p(e)))}else{return a._quote(r(p(h),l+":"+p(e)))}};a.basic=function(b){return a.b64_encode(b.username+":"+b.password)}})(sip);(function(a){a._testSDP=function(){var g="v=0\r\no=jdoe 2890844526 2890842807 IN IP4 10.47.16.5\r\ns=SDP Seminar\r\ni=A Seminar on the session description protocol\r\nu=http://www.example.com/seminars/sdp.pdf\r\ne=j.doe@example.com (Jane Doe)\r\nc=IN IP4 224.2.17.12/127\r\nt=2873397496 2873404696\r\na=recvonly\r\nm=audio 49170 RTP/AVP 0\r\nm=video 51372 RTP/AVP 99\r\na=rtpmap:99 h263-1998/90000\r\n";assert((new a.SDP(g)).toString()==g,"SDP")};function f(g){if(g){this._parse(g)}}f._multiple="tramb";function e(g){if(g&&typeof g=="string"){var h=g.split(" ");this.username=h[0];this.sessionid=parseInt(h[1]);this.version=parseInt(h[2]);this.nettype=h[3];this.addrtype=h[4];this.address=h[5]}else{this.username="-";this.sessionid=Math.ceil((new Date()).getTime()/1000);this.version=Math.ceil((new Date()).getTime()/1000);this.nettype="IN";this.addrtype="IP4";this.address=(g&&g.address!==undefined?g.address:"127.0.0.1")}}e.prototype.toString=function(){return[this.username,this.sessionid.toString(),this.version.toString(),this.nettype,this.addrtype,this.address].join(" ")};f.originator=e;function b(m){if(m&&typeof m=="string"){parts=m.split(" ");this.nettype=parts[0];this.addrtype=parts[1];var k=parts[2].split("/");this.address=(k.length>0?k[0]:null);this.ttl=(k.length>1?parseInt(k[1]):null);this.count=(k.length>2?parseInt(k[2]):null)}else{var h=["address",null,"nettype","IN","addrtype","IP4","ttl",null,"count",null];for(var j=0;j<h.length;j+=2){var g=h[j];var l=h[j+1];this[g]=(m&&m[g]!==undefined?m[g]:l)}}}b.prototype.toString=function(){return this.nettype+" "+this.addrtype+" "+this.address+(this.ttl===null?"":"/"+this.ttl)+(this.count===null?"":"/"+this.count)};f.connection=b;function c(k){if(k&&typeof k=="string"){var l=k.split(" ");this.media=l.shift();this.port=parseInt(l.shift());this.proto=l.shift();this.fmt=[];for(var h=0;h<l.length;++h){var j=l[h];var g={};if(j.match(/^\d+$/)){g.pt=parseInt(j)}else{g.pt=j}this.fmt.push(g)}}else{this.media=(k&&k.media!==undefined?k.media:null);this.port=(k&&k.port!==undefined?k.port:0);this.proto=(k&&k.proto!==undefined?k.proto:"RTP/AVP");this.fmt=(k&&k.fmt!==undefined?k.fmt:[])}}c.prototype.toString=function(){var s=this.media+" "+this.port+" "+this.proto+" "+a.map(function(i){return i.pt.toString()},this.fmt).join(" ");var q=["i","c","b","k","a"];for(var n=0;n<q.length;++n){var h=q[n];if(this[h]!==undefined){var p=this[h];if(f._multiple.indexOf(h)<0){s+="\r\n"+h+"="+p.toString()}else{for(var m=0;m<p.length;++m){var r=p[m];s+="\r\n"+h+"="+r.toString()}}}}for(var g=0;g<this.fmt.length;++g){var o=this.fmt[g];if(o.name!==undefined){s+="\r\na=rtpmap:"+o.pt+" "+o.name+"/"+o.rate+(o.params?"/"+o.params:"")}}return s};c.prototype.dup=function(){var g=new f.media({media:this.media,port:this.port,proto:this.proto,fmt:a.map(function(i){return{pt:i.pt,name:i.name,rate:i.rate,params:i.params}},this.fmt)});var j=["i","c","b","k","a"];for(var l=0;l<j.length;++l){var h=j[l];if(this[h]!==undefined){var m=this[h];if(a.is_array(m)){g[h]=m.slice()}else{g[h]=m}}}return g};f.media=c;f.prototype._parse=function(q){var y=true;var l=q.replace(/\r\n/g,"\n").split("\n");var p=null;for(var x=0;x<l.length;++x){var n=l[x];var t=a.str_partition(n,"=");var u=t[0];var o=t[2];if(u=="o"){o=new f.originator(o)}else{if(u=="c"){o=new f.connection(o)}else{if(u=="m"){o=new f.media(o)}}}if(u=="m"){if(this["m"]===undefined){this["m"]=[]}this["m"].push(o);p=this["m"][this["m"].length-1]}else{if(this["m"]!==undefined){p=this["m"][this["m"].length-1];if(u=="a"&&o.substr(0,7)=="rtpmap:"){var h=o.substr(7).split(" ");var s=h.shift();var r=h.join(" ");h=a.str_partition(r,"/");var C=h[0];r=h[2];h=a.str_partition(r,"/");var B=h[0];var A=h[2];var m=a.filter(function(g){return g.pt.toString()==s.toString()},p.fmt);for(var w=0;w<m.length;++w){var z=m[w];z.name=C;z.rate=parseInt(B);z.params=A||null}}else{if(f._multiple.indexOf(u)>=0){if(p[u]!==undefined){p[u].push(o)}else{p[u]=[o]}}else{p[u]=o}}}else{p=this;if(f._multiple.indexOf(u)>=0){if(p[u]!==undefined){p[u].push(o)}else{p[u]=[o]}}else{p[u]=o}}}}};f.prototype.toString=function(){var g="";var n=["v","o","s","i","u","e","p","c","b","t","a","m"];for(var o=0;o<n.length;++o){var l=n[o];if(this[l]!==undefined){var p=this[l];if(f._multiple.indexOf(l)<0){g+=l+"="+p.toString()+"\r\n"}else{for(var m=0;m<p.length;++m){var h=p[m];g+=l+"="+h.toString()+"\r\n"}}}}return g};a.SDP=f})(sip);(function(a){a._testOfferAnswer=function(){var f=new a.SDP.media({media:"audio",port:9000});f.fmt=[{pt:0,name:"PCMU",rate:8000},{pt:8,name:"PCMA",rate:8000}];var e=new a.SDP.media({media:"video",port:9002});e.fmt=[{pt:31,name:"H261",rate:90000}];var c=a.createOffer([f,e]);c.o.sessionid=1192000146;c.o.version=1192000146;c.o.address="192.168.1.66";assert(c.toString().replace(/\r/g,"\\r").replace(/\n/g,"\\n")=="v=0\\r\\no=- 1192000146 1192000146 IN IP4 192.168.1.66\\r\\ns=-\\r\\nt=0 0\\r\\nm=audio 9000 RTP/AVP 0 8\\r\\na=rtpmap:0 PCMU/8000\\r\\na=rtpmap:8 PCMA/8000\\r\\nm=video 9002 RTP/AVP 31\\r\\na=rtpmap:31 H261/90000\\r\\n","createOffer()");var b=new a.SDP.media({media:"audio",port:8020});b.fmt=[{pt:0},{pt:3}];var h=a.createAnswer([b],c);h.o.sessionid=1192000146;h.o.version=1192000146;h.o.address="192.168.1.66";assert(h.toString().replace(/\r/g,"\\r").replace(/\n/g,"\\n")=="v=0\\r\\no=- 1192000146 1192000146 IN IP4 192.168.1.66\\r\\ns=-\\r\\nt=0 0\\r\\nm=audio 8020 RTP/AVP 0\\r\\na=rtpmap:0 PCMU/8000\\r\\nm=video 0 RTP/AVP 31\\r\\na=rtpmap:31 H261/90000\\r\\n","createAnswer()");var g=a.createOffer([f],c);assert(g.toString().replace(/\r/g,"\\r").replace(/\n/g,"\\n")=="v=0\\r\\no=- 1192000146 1192000147 IN IP4 192.168.1.66\\r\\ns=-\\r\\nt=0 0\\r\\nm=audio 9000 RTP/AVP 0 8\\r\\na=rtpmap:0 PCMU/8000\\r\\na=rtpmap:8 PCMA/8000\\r\\n","createOffer(revision)")};a.createOffer=function(j,g,c){var f=new a.SDP();f.v="0";if(c!==undefined){var h=["i","e","p"];for(var e=0;e<h.length;++e){var b=h[e];if(c[b]!==undefined){f[b]=c[b]}}}f.o=(g?new a.SDP.originator(g.o.toString()):new a.SDP.originator());if(g){f.o.version=f.o.version+1}f.s="-";f.t=["0 0"];f.m=j;return f};a.createAnswer=function(h,b,p){var n=new a.SDP();n.v="0";if(p!==undefined){var w=["i","e","p"];for(var t=0;t<w.length;++t){var x=w[t];if(p[x]!==undefined){n[x]=p[x]}}}n.o=new a.SDP.originator();n.s="-";n.t=b.t;n.m=[];h=h.slice();for(var r=0;r<b.m.length;++r){var v=b.m[r];var l=null;var t=0;while(t<h.length){if(h[t].media==v.media){l=h[t].dup();h.splice(t,1);var k=[];for(var g=0;g<v.fmt.length;++g){var c=v.fmt[g];for(var q=0;q<l.fmt.length;++q){var f=l.fmt[q];var e=(typeof f.pt=="number"?f.pt:-1);var u=(typeof c.pt=="number"?c.pt:-1);if(e>=0&&e<32&&u>=0&&u<32&&e==u||e<0&&u<0&&f.pt==c.pt||(""+f.name).toLowerCase()==(""+c.name).toLowerCase()&&f.rate==c.rate&&f.count==c.count){k.push([c,f]);break}}}if(k.length>0){l.fmt=a.map(function(i){return i[0]},k)}else{l.fmt=[{pt:0}];l.port=0}break}else{++t}}if(!l){l=new a.SDP.media(v.toString());l.port=0}n.m.push(l)}var o=false;for(var t=0;t<n.m.length;++t){l=n.m[t];if(l.port!=0){o=true;break}}return(o?n:null)}})(sip);(function(a){function b(f){this.app=f;this.delay=0;this.running=false;this.task=null}b.prototype.start=function(f){if(this.running){this.stop()}if(f!==undefined){this.delay=f}this.running=true;var g=this;this.task=setTimeout(function(){g.app.timedout.apply(g.app,[g])},this.delay)};b.prototype.stop=function(){if(this.running){this.running=false}if(this.task){clearTimeout(this.task);this.task=null}};a.TimerImpl=b;function c(f){this.createServer=function(i,h,g){return(i.method!="CANCEL"?new a.UserAgent(this,i):null)};this.sending=function(h,i,g){log("sending\n"+i.toString())};this.receivedRequest=function(h,i,g){log("received\n"+i.toString());f("request",h,i)};this.receivedResponse=function(i,h,g){log("received\n"+request.toString());f("response",i,h)};this.cancelled=function(h,i,g){log("cancelled");f("cancelled",h,i)};this.dialogCreated=function(i,h,g){log("dialog created")};this.authenticate=function(h,i,g){return true};this.createTimer=function(h,g){return new a.TimerImpl(h)};this.send=function(h,i,g){log("send\n"+h)}}a.App=c;function e(i,g,h,j,k,f){this.host=i||"127.0.0.1";this.port=g||(j?5061:5060);this.type=h||"udp";this.hostport=this.host+(g?":"+g:"");this.secure=j===undefined?true:j;this.reliable=k===undefined?true:k;this.congestionControlled=f===undefined?true:f}a.TransportInfo=e;a._testStack=function(){var j=new a.TransportInfo("127.0.0.1",5060,"udp",false,false,false);var h=function(){};var i=new a.App(h);var f=new a.Stack(i,j);var g=new a.UserAgent(f);g.localParty=new a.Address("sip:kundan@iptel.org");g.remoteParty=new a.Address("sip:kundan@iptel.org");g.remoteTarget=new a.URI("sip:kundan@127.0.0.1")}})(sip);
 
 // orca/sipMsrp.js
-(function(){function c(h){var f=this,g;this.comm=h;this.isIncoming=undefined;this.isDataChannelOpen=false;this.chunkManager=new e(this);this.setWrappedCall=function(i){this.addCallbacks()};this.connect=function(){var j,k,i;if(this.comm.wrappedCall){this.isIncoming=true}else{this.isIncoming=false;j=this.comm.type.toLowerCase();i=this.comm.session.callback.createCall([this.comm.to],j);this.comm.setWrappedCall(i)}this.comm.wrappedCall.getCallImp().onDataChannelOnOpen=function(){f.onDataChannelOnOpen()};this.comm.wrappedCall.getCallImp().onDataChannelOnClose=function(){f.onDataChannelOnClose()};this.comm.wrappedCall.createDataChannel();this.comm.wrappedCall.connect()};this.sendMessage=function(i){if(this.chunkManager&&this.comm.type==="Chat"&&this.isDataChannelOpen&&this.comm.status===CommStatus.CONNECTED){return this.chunkManager.send(i+"")}};this.sendFile=function(){if(this.chunkManager&&this.comm.file&&this.isDataChannelOpen&&this.comm.status===CommStatus.CONNECTED){if(this.useBlob){setTimeout(function(){f.chunkManager.send(f.comm.file)},1000)}else{var i=new FileReader();i.onload=function(){arrayBuffer=this.result;if(arrayBuffer instanceof File){console.log("this.result is File")}else{if(arrayBuffer instanceof Blob){console.log("this.result is Blob")}else{if(arrayBuffer instanceof ArrayBuffer){console.log("this.result is ArrayBuffer")}else{console.log("this.result is other")}}}console.log("Converting file to arraybuffer done.. will send it after 1sec. arrayBuffer.length:"+arrayBuffer.byteLength);setTimeout(function(){f.chunkManager.send(arrayBuffer)},1000)};console.log("Ready to send file... converting file to arraybuffer");if(f.comm.file instanceof File){console.log("self.comm.file is File")}else{if(f.comm.file instanceof Blob){console.log("self.comm.file is Blob")}else{console.log("self.comm.file is other")}}i.readAsArrayBuffer(f.comm.file)}}};this.addCallbacks=function(){var i;for(i in this.callbacks){if(this.callbacks.hasOwnProperty(i)){this.comm.wrappedCall[i]=(function(k,j){return function(){j.callbacks[k].apply(j,arguments)}})(i,this)}}};this.clean=function(){var i;if(this.chunkManager.abort()){this.chunkManager=null}};this.onDataChannelOnOpen=function(){this.isDataChannelOpen=true;this.sendFile()};this.onDataChannelOnClose=function(){this.isDataChannelOpen=false;if(this.comm.status===CommStatus.CONNECTED){this.comm.callback.onError(CommError.NETWORK_ERROR,{name:CommError.NETWORK_ERROR});this.comm.callback.disconnect()}};this.callbacks={onConnected:function(){console.log("callbacks.onConnected");if(!this.chunkManager){return}var i;this.comm.status=CommStatus.CONNECTED;if(typeof this.comm.callback.onConnected==="function"){this.comm.callback.onConnected({name:CommStatus.CONNECTED})}i=this.comm.wrappedCall.getCallImp();this.chunkManager.initSession(i);console.log("callbacks.onConnected==>sendFile()");this.sendFile()},onDisconnected:function(){this.comm.status=CommStatus.DISCONNECTED;if(typeof this.comm.callback.onDisconnected==="function"){this.comm.callback.onDisconnected({name:CommStatus.DISCONNECTED})}this.clean()},onError:function(){if(typeof this.comm.callback.onError==="function"){this.comm.callback.onError(CommError.NETWORK_ERROR,{name:CommError.NETWORK_ERROR})}this.clean()},onStatus:function(i,j){switch(i){case CallStatus.REJECTED:this.comm.status=CommStatus.DISCONNECTED;if(typeof this.comm.callback.onStatus==="function"){this.comm.callback.onStatus(CommStatus.REJECTED,{name:CommStatus.REJECTED})}this.clean();break;case CallStatus.CONNECTING:this.comm.status=CommStatus.CONNECTING;if(typeof this.comm.callback.onStatus==="function"){this.comm.callback.onStatus(CommStatus.CONNECTING,{name:CommStatus.CONNECTING})}break}},onMessage:function(i){if(this.chunkManager){this.chunkManager.onMessage(i)}}}}function e(f){var g=this;this.sipmsrp=f;this.events={onMessageReceived:function(j,i,h){console.log("ChunkManager.onMessageReceived "+j+" "+i);if(h instanceof ArrayBuffer){h=new Blob([h],{type:i})}g.sipmsrp.comm.callback.onReceived(h,{name:CommStatus.RECEIVED});if(g.sipmsrp.comm.type!=="Chat"){setTimeout(function(){console.log("MSRP file complete, now auto-disconnect.");g.sipmsrp.comm.callback.disconnect()},500)}},onMessageSent:function(h){console.log("ChunkManager.onMessageSent "+h)},onMessageDelivered:function(h){console.log("ChunkManager.onMessageDelivered "+h);g.progressEvent(h);g.sipmsrp.comm.callback.onStatus(CommStatus.SENDSUCCESS,{name:CommStatus.SENDSUCCESS,id:h});if(g.sipmsrp.comm.type!=="Chat"){setTimeout(function(){console.log("MSRP file complete, now auto-disconnect.");g.sipmsrp.comm.callback.disconnect()},5000)}},onMessageSendFailed:function(l,h,k,j){console.log("ChunkManager.onMessageSendFailed",arguments);var i={name:CommStatus.SENDFAIL,id:l};if(j&&g.sipmsrp.comm.type==="Chat"){i.content=j}g.sipmsrp.comm.callback.onStatus(CommStatus.SENDFAIL,i);if(g.sipmsrp.comm.type!=="Chat"){console.log("MSRP file failed, now auto-disconnect.");g.sipmsrp.comm.callback.disconnect()}},onFirstChunkReceived:function(l,k,h,i,j){console.log("ChunkManager.onFirstChunkReceived",arguments);if(g.sipmsrp.comm.type!=="Chat"){g.totalSize=i;g.progressEvent(l,0)}},onChunkReceived:function(i,h){console.log("ChunkManager.onChunkReceived",arguments);if(g.sipmsrp.comm.type!=="Chat"){g.progressEvent(i,h)}},onMessageReceiveAborted:function(i,h){console.log("ChunkManager.onMessageReceiveAborted "+i);if(g.sipmsrp.comm.type!=="Chat"){console.log("MSRP file aborted, now auto-disconnect.");g.sipmsrp.comm.callback.disconnect()}},onMessageReceiveTimeout:function(h){console.log("ChunkManager.onMessageReceiveTimeout "+h);if(g.sipmsrp.comm.type!=="Chat"){console.log("MSRP file timed out, now auto-disconnect.");g.sipmsrp.comm.callback.disconnect()}},onChunkSent:function(i,h){console.log("ChunkManager.onChunkSent",arguments);if(g.sipmsrp.comm.type!=="Chat"){g.progressEvent(i,h)}}};this.connection=new d(this);this.wswrapper=new a(this.connection,this.sipmsrp);this.session=new b(this.connection,undefined,undefined,this.events);this.connection.ws=this.wswrapper;this.totalSize=0;this.send=function(h){this.session.send(h)};this.onMessage=function(h){this.wswrapper.onMessage(h)};this.abort=function(h){var i;this.session.close()};this.initSession=function(h){this.session.toPath=[h.msrpToPath];this.session.localUri=new CrocMSRP.Uri(h.msrpFromPath);this.session.sessionId=h.msrpSessionId;this.connection.localSessionIds[h.msrpSessionId]=this.session};this.progressEvent=function(i,h){if(this.sipmsrp.comm.type!=="Chat"){if(h===undefined){h=this.totalSize}this.sipmsrp.comm.callback.onStatus(CommStatus.PROGRESS,{name:CommStatus.PROGRESS,id:i,progress:h,size:this.totalSize})}}}function b(h,m,k,l){this.con=h;this.config=h.config;this.sessionId=m;this.localUri=k;this.toPath=[];this.eventObj=l;this.chunkReceivers={};this.receiverCheckInterval=null;this.chunkSenders={};this.send=function(n,r){var p,o,q=this;if(n instanceof String||typeof n==="string"){console.log("Session.body is String");p=r||"text/plain"}else{if(n instanceof Blob){console.log("Session.body is Blob");p=r||n.type||"application/octet-stream"}else{console.log("Session.body is ArrayBuffer or other");p=r||"application/octet-stream"}}console.log("Create chunkSender with contentType "+p);o=new CrocMSRP.ChunkSender(this,n,p);o.onReportTimeout=g(q,o.messageId);this.con.addSender(o);this.chunkSenders[o.messageId]=o;return o.messageId};this.abortReceive=function(o){if(o){var n=this.chunkReceivers[o];if(!n){throw new RangeError("Invalid message id")}n.abort()}else{for(o in this.chunkReceivers){this.chunkReceivers[o].abort()}}};this.abortSend=function(o){if(o){var n=this.chunkSenders[o];if(!n){throw new RangeError("Invalid message id")}n.abort()}else{for(o in this.chunkSenders){this.chunkSenders[o].abort()}}};this.close=function(){this.abortReceive();this.abortSend()};this.onIncomingSend=function(y){var q,A=null,o=null,C=-1,v,t,D,p,B,x,s;var z=this.con.chunkManager.sipmsrp.comm.type;console.log("session.onIncomingSend(). session type: "+z);y.isBase64=false;if(typeof y.body==="string"){if(typeof y.contentTransferEncoding==="string"&&y.contentTransferEncoding.toLowerCase()==="base64"){y.isBase64=true}else{if((/data:.*;base64/).test(y.body)){y.isBase64=true;console.log("onIncomingSend() -- found base64")}}}if(y.byteRange.start===1&&y.contentType&&y.contentType.match(/message\/cpim/i)){CrocMSRP.parseCPIMMessage(y)}try{if(y.byteRange.start===1&&y.continuationFlag===CrocMSRP.Message.Flag.end){if(y.body){q=y.messageId||CrocMSRP.util.newMID();C=y.byteRange.total;if(y.contentDisposition&&(y.contentDisposition.type==="attachment"||y.contentDisposition.type==="render")){A=y.getHeader("content-description");o=y.contentDisposition.param.filename}t=y.body;if(y.isBase64){D=decodeURIComponent(escape(atob(t.split(",")[1])));p=t.slice(t.indexOf(":")+1,t.indexOf(";"));t=new Blob([D])}else{if(typeof t==="string"&&(z==="FileTransfer"||z==="ImageShare")){B=new ArrayBuffer(t.length);x=new Uint8Array(B);for(s=0;s<t.length;s++){x[s]=t.charCodeAt(s)}t=new Blob([B],{type:y.contentType})}}this.eventObj.onFirstChunkReceived(q,y.contentType,o,C,A);if(this.eventObj.onChunkReceived){this.eventObj.onChunkReceived(q,C)}this.eventObj.onMessageReceived(q,y.contentType,t)}}else{q=y.messageId;if(!q||!(q instanceof String||typeof q==="string")){f(y,this.con,this.localUri,CrocMSRP.Status.BAD_REQUEST);return}if(y.byteRange.start===1&&y.continuationFlag===CrocMSRP.Message.Flag.continued){v=new CrocMSRP.ChunkReceiver(y,this.config.recvBuffer);if(y.contentDisposition&&(y.contentDisposition.type==="attachment"||y.contentDisposition.type==="render")){A=y.getHeader("content-description");o=y.contentDisposition.param.filename}this.eventObj.onFirstChunkReceived(q,y.contentType,o,y.byteRange.total,A);this.chunkReceivers[q]=v;if(!this.receiverCheckInterval){var w=this;this.receiverCheckInterval=setInterval(function(){j(w)},1000)}}else{v=this.chunkReceivers[q];if(!v){f(y,this.con,this.localUri,CrocMSRP.Status.STOP_SENDING);return}if(v.firstChunk.isBase64){y.isBase64=true}if(!v.processChunk(y)){delete this.chunkReceivers[q];if(v.remoteAbort){f(y,this.con,this.localUri,CrocMSRP.Status.STOP_SENDING)}else{f(y,this.con,this.localUri,CrocMSRP.Status.STOP_SENDING)}try{this.eventObj.onMessageReceiveAborted(q,v.blob)}catch(u){console.warn("Unexpected application exception: "+u.stack)}return}}console.log("chunkReceiver.size "+v.size+". chunkReceiver.totalBytes "+v.totalBytes);if(v.isComplete()){delete this.chunkReceivers[q];var n=v.blob;if(this.eventObj.onChunkReceived){this.eventObj.onChunkReceived(q,v.size)}this.eventObj.onMessageReceived(q,n.type,n)}else{if(this.eventObj.onChunkReceived){this.eventObj.onChunkReceived(q,v.receivedBytes)}}}}catch(u){var r=CrocMSRP.Status.INTERNAL_SERVER_ERROR;if(u instanceof CrocMSRP.Exceptions.UnsupportedMedia){r=CrocMSRP.Status.UNSUPPORTED_MEDIA}else{console.warn("Unexpected application exception: "+u.stack)}f(y,this.con,this.localUri,r);return}f(y,this.con,this.localUri,CrocMSRP.Status.OK);if(y.getHeader("success-report")==="yes"){i(this,y)}};this.onIncomingReport=function(n){var q,o;q=n.messageId;if(!q){console.log("Invalid REPORT: no message id");return}o=this.chunkSenders[q];if(!o){console.log("Invalid REPORT: unknown message id");return}o.processReport(n);if(!o.isComplete()){return}delete this.chunkSenders[q];if(o.aborted&&!o.remoteAbort){return}try{if(n.status===CrocMSRP.Status.OK){if(this.eventObj.onMessageDelivered){this.eventObj.onMessageDelivered(q)}}else{this.eventObj.onMessageSendFailed(q,n.status,n.comment,o.bodyText)}}catch(p){console.warn("Unexpected application exception: "+p.stack)}};this.onIncomingResponse=function(r){var q;q=r.request.getHeader("message-id");if(!q){console.log("Can't retrieve SEND message id");return}var n=r.request.sender;if(r.status===CrocMSRP.Status.OK){try{if(!n.aborted&&this.eventObj.onChunkSent){this.eventObj.onChunkSent(q,r.request.byteRange.end)}if(r.request.continuationFlag===CrocMSRP.Message.Flag.end&&this.eventObj.onMessageSent){this.eventObj.onMessageSent(q)}}catch(p){console.warn("Unexpected application exception: "+p.stack)}}else{var o=undefined;if(this.chunkSenders[q]){o=this.chunkSenders[q].bodyText}n.abort();n.remoteAbort=true;delete this.chunkSenders[q];try{this.eventObj.onMessageSendFailed(q,r.status,r.comment,o)}catch(p){console.warn("Unexpected application exception: "+p.stack)}}};function g(o,n){return function(){var p=undefined;if(o.chunkSenders[n]){p=o.chunkSenders[n].bodyText}delete o.chunkSenders[n];try{o.eventObj.onMessageSendFailed(n,CrocMSRP.Status.REQUEST_TIMEOUT,"Report Timeout",p)}catch(q){console.warn("Unexpected application exception: "+q.stack)}}}function f(q,o,p,n){if(n===CrocMSRP.Status.OK){if(!q.responseOn.success){return}}else{if(!q.responseOn.failure){return}}o.ws.send(new CrocMSRP.Message.OutgoingResponse(q,p,n))}function i(s,r){var o;o=new CrocMSRP.Message.OutgoingRequest(s,"REPORT");o.addHeader("message-id",r.messageId);o.addHeader("status","000 200 OK");if(r.byteRange||r.continuationFlag===CrocMSRP.Message.Flag.continued){var t=1,n,q=-1;if(r.byteRange){t=r.byteRange.start;q=r.byteRange.total}if(!r.body){n=0}else{if(r.body instanceof ArrayBuffer){console.log("sendReport. req.body is ArrayBuffer");n=t+r.body.byteLength-1}else{if(r.isBase64){console.log("sendReport. req.body is base64");n=t+r.body.length-1}else{console.log("sendReport. req.body is String");var p=new Blob([r.body]);n=t+p.size-1}}}if(n!==r.byteRange.end){console.warn("Report Byte-Range end does not match request. end:"+n+",req.byteRange.end:"+r.byteRange.end)}o.byteRange={start:t,end:n,total:q}}s.con.ws.send(o)}function j(s){var r,p,n=new Date().getTime(),o=s.config.chunkTimeout;for(r in s.chunkReceivers){p=s.chunkReceivers[r];console.log("now: "+n+", lastReceive: "+p.lastReceive+", timeout: "+o);if(n-p.lastReceive>o){p.abort();delete s.chunkReceivers[r];try{s.eventObj.onMessageReceiveTimeout(r,p.blob)}catch(q){console.warn("Unexpected application exception: "+q.stack)}}}if(CrocMSRP.util.isEmpty(s.chunkReceivers)){clearInterval(s.receiverCheckInterval);s.receiverCheckInterval=null}}}function d(j){this.chunkManager=j;this.config=new CrocMSRP.ConnectionConfig();this.ws=null;this.localSessionIds={};this.reconnectTimer=null;this.reducedChunkSize=512;this.bandwidthDelay=200;this.bandwidthRetries=5;this.ramp=2;this.activeSenders=[];this.outstandingSends=0;this.onMsrpRequest=function(l){var k,m;if(l.toPath.length!==1){g(l,this,l.toPath[0],CrocMSRP.Status.SESSION_DOES_NOT_EXIST);return}k=new CrocMSRP.Uri(l.toPath[0]);if(!k){g(l,this,l.toPath[0],CrocMSRP.Status.BAD_REQUEST);return}m=this.localSessionIds[k.sessionId];if(!m||!(m.localUri.authority===k.authority)||!(m.localUri.port===k.port)||!(m.localUri.sessionId===k.sessionId)){g(l,this,l.toPath[0],CrocMSRP.Status.SESSION_DOES_NOT_EXIST);return}switch(l.method){case"SEND":m.onIncomingSend(l);break;case"REPORT":m.onIncomingReport(l);break;default:g(l,this,l.toPath[0],CrocMSRP.Status.NOT_IMPLEMENTED);return}};this.addSender=function(k){this.activeSenders.push(k);h(this)};this.onMsrpResponse=function(k){if(k.request.method==="SEND"){this.outstandingSends--}k.request.session.onIncomingResponse(k);h(this)};function g(n,l,m,k){if(k===CrocMSRP.Status.OK){if(!n.responseOn.success){return}}else{if(!n.responseOn.failure){return}}l.ws.send(new CrocMSRP.Message.OutgoingResponse(n,m,k))}function h(l,n){var o,q,p,k,m;if(!n){n=0}while(l.activeSenders.length>0&&l.outstandingSends<l.config.maxOutstandingSends&&n<l.ramp){o=l.activeSenders[0];if(o.aborted&&o.remoteAbort){l.activeSenders.shift()}l.outstandingSends++;n++;l.chunkManager.totalSize=o.size;q=o.getNextChunk();p=l.ws.send(q);if(p===true||o.aborted){f(l,o)}else{if(p==="BlobForbidden"&&q.byteRange.start===1){i(o,function(r){var t,s;console.log("sendRequests: Trying again with base64 data");l.chunkManager.totalSize=r.size;t=r.getNextChunk();s=l.ws.send(t);if(s==="OtherError"){r.config.chunkSize=l.reducedChunkSize;r.session.config.chunkSize=l.reducedChunkSize;i(r,function(u){console.log("sendRequests: Trying again with reduced chunk size");var v=u.getNextChunk();l.ws.send(v);f(l,u);h(l,n)});return}if(s!==true){console.warn("Unexpected result from WSWrapper.send: "+s)}f(l,r);h(l,n)});return}if(p==="OtherError"){k=0;m=setInterval(function(){k+=1;if(l.ws.send(q)!=="OtherError"||k>=l.bandwidthRetries){clearInterval(m);f(l,o);h(l,n);return}},l.bandwidthDelay);return}console.warn("Unexpected result from WSWrapper.send: "+p);f(l,o)}}}function f(k,l){if(l.isSendComplete()){k.activeSenders.shift()}else{if(k.activeSenders.length>1){k.activeSenders.push(k.activeSenders.shift())}}}function i(l,m){l.sentBytes=0;l.ackedBytes=0;l.incontiguousReports={};l.incontiguousReportCount=0;l.reportTimer=null;l.aborted=false;l.remoteAbort=false;l.getNextChunk=function(){var o;o=new CrocMSRP.Message.OutgoingRequest(this.session,"SEND");o.sender=this;o.addHeader("message-id",this.messageId);o.addHeader("success-report","yes");o.addHeader("failure-report","yes");if(this.aborted){o.continuationFlag=CrocMSRP.Message.Flag.abort}else{var q=this.sentBytes+1,n=Math.min(this.sentBytes+this.config.chunkSize,this.size);o.byteRange={start:q,end:n,total:this.size};if(this.size>0){if(this.sentBytes===0){if(this.disposition){o.addHeader("content-disposition",this.disposition)}else{o.addHeader("content-disposition","inline")}if(this.description){o.addHeader("content-description",this.description)}if(typeof this.bodyText!=="string"){o.addHeader("content-transfer-encoding","base64")}}o.contentType=this.contentType;console.debug("Slicing the blob for next chunk at from "+this.sentBytes+"-"+n);o.body=this.blob.slice(this.sentBytes,n)}if(n<this.size){o.continuationFlag=CrocMSRP.Message.Flag.continued}else{if(this.onReportTimeout){var p=this;this.reportTimer=setTimeout(function(){p.onReportTimeout();p.reportTimer=null},this.config.reportTimeout)}}this.sentBytes=n}return o};if(typeof l.bodyText==="string"&&!(/.*[\u4e00-\u9fa5]+.*$/.test(l.bodyText))){l.blob=l.bodyText;l.size=l.blob.length;m(l)}else{if(typeof l.blob==="string"&&!(/.*[\u4e00-\u9fa5]+.*$/.test(l.blob))){l.size=l.blob.length;m(l)}else{var k=new window.FileReader();k.readAsDataURL(l.blob);k.onload=function(n){l.blob=n.target.result;l.size=l.blob.length;if(typeof m==="function"){m(l)}}}}}}function a(g,f){this.con=g;this.sipmsrp=f;this.transactions={};this.msrpBuffer="";this.send=function(j){var i=this;if(j instanceof CrocMSRP.Message.Request&&j.method!=="REPORT"){}try{this.sipmsrp.comm.wrappedCall.sendMessage(j.encode());if(j.method=="SEND"){j.timer=setTimeout(function(){h(i,j)},30000);this.transactions[j.tid]=j;console.debug("Timer for transaction '"+j.tid+"' set")}}catch(k){console.log("Could not send through DataChannel. Error: "+k);if(k.toString().indexOf("Blob")>-1){return"BlobForbidden"}else{return"OtherError"}}return true};this.onMessage=function(n){this.msrpBuffer=this.msrpBuffer+n;while(this.msrpBuffer!=""){var k,j,l,i,m;k=this.msrpBuffer.indexOf("\r\n");if(k<=0){console.debug("partial MSRP message-no first line: this.msrpBuffer does not have 1st MSRP line yet.. wait for more data:'"+this.msrpBuffer+"'this.msrpBuffer.length: "+this.msrpBuffer.length+"orcaDataChannel index:"+this.msrpBuffer.indexOf("orcaDataChannel"));if(this.msrpBuffer.length==27){console.debug("Ignoring 'orcaDataChannel' MSRP chunk!!");this.msrpBuffer=""}return}j=this.msrpBuffer.substring(0,k);l=j.split(" ");if(l.length<3||l[0]!=="MSRP"||l[1].length===0||l[2].length===0){console.log("Error parsing message: unexpected first line format: "+j);return}m=l[1];i=this.msrpBuffer.indexOf("-------"+m);console.debug("chunkEndIndex: "+i);if(i<0){console.debug("partial MSRP message: End of chunk NOT found for transaction "+m+" wait for more data");return}i=i+m.length+10;n=this.msrpBuffer.substring(0,i);this.msrpBuffer=this.msrpBuffer.substring(i);if(n.length>0){console.debug("processing new MSRP chunk "+n)}if(this.msrpBuffer.length>0){console.debug("partial MSRP msg remaining in this.msrpBuffer '"+this.msrpBuffer+"'")}var n=CrocMSRP.parseMessage(n);if(!n){console.warn("Parsing error on incoming message. Ignoring message.");return}if(n instanceof CrocMSRP.Message.Response){n.request=this.transactions[n.tid];if(n.request){console.debug("Clearing timeout for transaction '"+n.tid+"'");clearTimeout(n.request.timer);delete n.request.timer;delete this.transactions[n.tid];this.con.onMsrpResponse(n)}else{console.log("Unexpected response received; not in transaction list")}return}this.con.onMsrpRequest(n)}};function h(i,j){console.error("timeout happened for transaction request.tid: "+j.tid);delete j.timer;delete i.transactions[j.tid];var k=new CrocMSRP.Message.IncomingResponse(j.tid,408,CrocMSRP.StatusComment[408]);k.request=j;i.con.onMsrpResponse(k)}}orcaALU.SipMsrp=c;if(orcaALU.SipAdapter){orcaALU.SipAdapter.Msrp=orcaALU.SipMsrp}})();
+(function(){function c(h){var f=this,g;this.comm=h;this.isIncoming=undefined;this.isDataChannelOpen=false;this.chunkManager=new e(this);this.setWrappedCall=function(i){this.addCallbacks()};this.connect=function(){var j,k,i;if(this.comm.wrappedCall){this.isIncoming=true}else{this.isIncoming=false;j=this.comm.type.toLowerCase();i=this.comm.session.callback.createCall([this.comm.to],j);this.comm.setWrappedCall(i)}this.comm.wrappedCall.getCallImp().onDataChannelOnOpen=function(){f.onDataChannelOnOpen()};this.comm.wrappedCall.getCallImp().onDataChannelOnClose=function(){f.onDataChannelOnClose()};this.comm.wrappedCall.createDataChannel();this.comm.wrappedCall.connect()};this.sendMessage=function(i){if(this.chunkManager&&this.comm.type==="Chat"&&this.isDataChannelOpen&&this.comm.status===CommStatus.CONNECTED){return this.chunkManager.send(i+"")}};this.sendFile=function(){if(this.chunkManager&&this.comm.file&&this.isDataChannelOpen&&this.comm.status===CommStatus.CONNECTED){if(this.useBlob){setTimeout(function(){f.chunkManager.send(f.comm.file)},1000)}else{var i=new FileReader();i.onload=function(){arrayBuffer=this.result;if(arrayBuffer instanceof File){console.log("this.result is File")}else{if(arrayBuffer instanceof Blob){console.log("this.result is Blob")}else{if(arrayBuffer instanceof ArrayBuffer){console.log("this.result is ArrayBuffer")}else{console.log("this.result is other")}}}console.log("Converting file to arraybuffer done.. will send it after 1sec. arrayBuffer.length:"+arrayBuffer.byteLength);setTimeout(function(){f.chunkManager.send(arrayBuffer)},1000)};console.log("Ready to send file... converting file to arraybuffer");if(f.comm.file instanceof File){console.log("self.comm.file is File")}else{if(f.comm.file instanceof Blob){console.log("self.comm.file is Blob")}else{console.log("self.comm.file is other")}}i.readAsArrayBuffer(f.comm.file)}}};this.addCallbacks=function(){var i;for(i in this.callbacks){if(this.callbacks.hasOwnProperty(i)){this.comm.wrappedCall[i]=(function(k,j){return function(){j.callbacks[k].apply(j,arguments)}})(i,this)}}};this.clean=function(){var i;if(this.chunkManager.abort()){this.chunkManager=null}};this.onDataChannelOnOpen=function(){this.isDataChannelOpen=true;this.sendFile()};this.onDataChannelOnClose=function(){this.isDataChannelOpen=false;if(this.comm.status===CommStatus.CONNECTED){this.comm.callback.onError(CommError.NETWORK_ERROR,{name:CommError.NETWORK_ERROR});this.comm.callback.disconnect()}};this.callbacks={onConnected:function(){console.log("callbacks.onConnected");if(!this.chunkManager){return}var i;this.comm.status=CommStatus.CONNECTED;if(typeof this.comm.callback.onConnected==="function"){this.comm.callback.onConnected({name:CommStatus.CONNECTED})}i=this.comm.wrappedCall.getCallImp();this.chunkManager.initSession(i);console.log("callbacks.onConnected==>sendFile()");this.sendFile()},onDisconnected:function(){this.comm.status=CommStatus.DISCONNECTED;if(typeof this.comm.callback.onDisconnected==="function"){this.comm.callback.onDisconnected({name:CommStatus.DISCONNECTED})}this.clean()},onError:function(){if(typeof this.comm.callback.onError==="function"){this.comm.callback.onError(CommError.NETWORK_ERROR,{name:CommError.NETWORK_ERROR})}this.clean()},onStatus:function(i,j){switch(i){case CallStatus.REJECTED:this.comm.status=CommStatus.DISCONNECTED;if(typeof this.comm.callback.onStatus==="function"){this.comm.callback.onStatus(CommStatus.REJECTED,{name:CommStatus.REJECTED})}this.clean();break;case CallStatus.CONNECTING:this.comm.status=CommStatus.CONNECTING;if(typeof this.comm.callback.onStatus==="function"){this.comm.callback.onStatus(CommStatus.CONNECTING,{name:CommStatus.CONNECTING})}break}},onMessage:function(i){if(this.chunkManager){this.chunkManager.onMessage(i)}}}}function e(f){var g=this;this.sipmsrp=f;this.events={onMessageReceived:function(j,i,h){console.log("ChunkManager.onMessageReceived "+j+" "+i);if(h instanceof ArrayBuffer){h=new Blob([h],{type:i})}g.sipmsrp.comm.callback.onReceived(h,{name:CommStatus.RECEIVED});if(g.sipmsrp.comm.type!=="Chat"){setTimeout(function(){console.log("MSRP file complete, now auto-disconnect.");g.sipmsrp.comm.callback.disconnect()},500)}},onMessageSent:function(h){console.log("ChunkManager.onMessageSent "+h)},onMessageDelivered:function(h){console.log("ChunkManager.onMessageDelivered "+h);g.progressEvent(h);g.sipmsrp.comm.callback.onStatus(CommStatus.SENDSUCCESS,{name:CommStatus.SENDSUCCESS,id:h});if(g.sipmsrp.comm.type!=="Chat"){setTimeout(function(){console.log("MSRP file complete, now auto-disconnect.");g.sipmsrp.comm.callback.disconnect()},5000)}},onMessageSendFailed:function(l,h,k,j){console.log("ChunkManager.onMessageSendFailed",arguments);var i={name:CommStatus.SENDFAIL,id:l};if(j&&g.sipmsrp.comm.type==="Chat"){i.content=j}g.sipmsrp.comm.callback.onStatus(CommStatus.SENDFAIL,i);if(g.sipmsrp.comm.type!=="Chat"){console.log("MSRP file failed, now auto-disconnect.");g.sipmsrp.comm.callback.disconnect()}},onFirstChunkReceived:function(l,k,h,i,j){console.log("ChunkManager.onFirstChunkReceived",arguments);if(g.sipmsrp.comm.type!=="Chat"){g.totalSize=i;g.progressEvent(l,0)}},onChunkReceived:function(i,h){console.log("ChunkManager.onChunkReceived",arguments);if(g.sipmsrp.comm.type!=="Chat"){g.progressEvent(i,h)}},onMessageReceiveAborted:function(i,h){console.log("ChunkManager.onMessageReceiveAborted "+i);if(g.sipmsrp.comm.type!=="Chat"){console.log("MSRP file aborted, now auto-disconnect.");g.sipmsrp.comm.callback.disconnect()}},onMessageReceiveTimeout:function(h){console.log("ChunkManager.onMessageReceiveTimeout "+h);if(g.sipmsrp.comm.type!=="Chat"){console.log("MSRP file timed out, now auto-disconnect.");g.sipmsrp.comm.callback.disconnect()}},onChunkSent:function(i,h){console.log("ChunkManager.onChunkSent",arguments);if(g.sipmsrp.comm.type!=="Chat"){g.progressEvent(i,h)}}};this.connection=new d(this);this.wswrapper=new a(this.connection,this.sipmsrp);this.session=new b(this.connection,undefined,undefined,this.events);this.connection.ws=this.wswrapper;this.totalSize=0;this.send=function(h){this.session.send(h)};this.onMessage=function(h){this.wswrapper.onMessage(h)};this.abort=function(h){var i;this.session.close()};this.initSession=function(h){this.session.toPath=[h.msrpToPath];this.session.localUri=new CrocMSRP.Uri(h.msrpFromPath);this.session.sessionId=h.msrpSessionId;this.connection.localSessionIds[h.msrpSessionId]=this.session};this.progressEvent=function(i,h){if(this.sipmsrp.comm.type!=="Chat"){if(h===undefined){h=this.totalSize}this.sipmsrp.comm.callback.onStatus(CommStatus.PROGRESS,{name:CommStatus.PROGRESS,id:i,progress:h,size:this.totalSize})}}}function b(h,m,k,l){this.con=h;this.config=h.config;this.sessionId=m;this.localUri=k;this.toPath=[];this.eventObj=l;this.chunkReceivers={};this.receiverCheckInterval=null;this.chunkSenders={};this.send=function(n,r){var p,o,q=this;if(n instanceof String||typeof n==="string"){console.log("Session.body is String");p=r||"text/plain"}else{if(n instanceof Blob){console.log("Session.body is Blob");p=r||n.type||"application/octet-stream"}else{console.log("Session.body is ArrayBuffer or other");p=r||"application/octet-stream"}}console.log("Create chunkSender with contentType "+p);o=new CrocMSRP.ChunkSender(this,n,p);o.onReportTimeout=g(q,o.messageId);this.con.addSender(o);this.chunkSenders[o.messageId]=o;return o.messageId};this.abortReceive=function(o){if(o){var n=this.chunkReceivers[o];if(!n){throw new RangeError("Invalid message id")}n.abort()}else{for(o in this.chunkReceivers){this.chunkReceivers[o].abort()}}};this.abortSend=function(o){if(o){var n=this.chunkSenders[o];if(!n){throw new RangeError("Invalid message id")}n.abort()}else{for(o in this.chunkSenders){this.chunkSenders[o].abort()}}};this.close=function(){this.abortReceive();this.abortSend()};this.onIncomingSend=function(y){var q,A=null,o=null,C=-1,v,t,D,p,B,x,s;var z=this.con.chunkManager.sipmsrp.comm.type;console.log("session.onIncomingSend(). session type: "+z);y.isBase64=false;if(typeof y.body==="string"){if(typeof y.contentTransferEncoding==="string"&&y.contentTransferEncoding.toLowerCase()==="base64"){y.isBase64=true}else{if((/data:.*;base64/).test(y.body)){y.isBase64=true;console.log("onIncomingSend() -- found base64")}}}if(y.byteRange.start===1&&y.contentType&&y.contentType.match(/message\/cpim/i)){CrocMSRP.parseCPIMMessage(y)}try{if(y.byteRange.start===1&&y.continuationFlag===CrocMSRP.Message.Flag.end){if(y.body){q=y.messageId||CrocMSRP.util.newMID();C=y.byteRange.total;if(y.contentDisposition&&(y.contentDisposition.type==="attachment"||y.contentDisposition.type==="render")){A=y.getHeader("content-description");o=y.contentDisposition.param.filename}t=y.body;if(y.isBase64){D=decodeURIComponent(escape(atob(t.split(",")[1])));p=t.slice(t.indexOf(":")+1,t.indexOf(";"));t=new Blob([D])}else{if(typeof t==="string"&&(z==="FileTransfer"||z==="ImageShare")){B=new ArrayBuffer(t.length);x=new Uint8Array(B);for(s=0;s<t.length;s++){x[s]=t.charCodeAt(s)}t=new Blob([B],{type:y.contentType})}}this.eventObj.onFirstChunkReceived(q,y.contentType,o,C,A);if(this.eventObj.onChunkReceived){this.eventObj.onChunkReceived(q,C)}this.eventObj.onMessageReceived(q,y.contentType,t)}}else{q=y.messageId;if(!q||!(q instanceof String||typeof q==="string")){f(y,this.con,this.localUri,CrocMSRP.Status.BAD_REQUEST);return}if(y.byteRange.start===1&&y.continuationFlag===CrocMSRP.Message.Flag.continued){v=new CrocMSRP.ChunkReceiver(y,this.config.recvBuffer);if(y.contentDisposition&&(y.contentDisposition.type==="attachment"||y.contentDisposition.type==="render")){A=y.getHeader("content-description");o=y.contentDisposition.param.filename}this.eventObj.onFirstChunkReceived(q,y.contentType,o,y.byteRange.total,A);this.chunkReceivers[q]=v;if(!this.receiverCheckInterval){var w=this;this.receiverCheckInterval=setInterval(function(){j(w)},1000)}}else{v=this.chunkReceivers[q];if(!v){f(y,this.con,this.localUri,CrocMSRP.Status.STOP_SENDING);return}if(v.firstChunk.isBase64){y.isBase64=true}if(!v.processChunk(y)){delete this.chunkReceivers[q];if(v.remoteAbort){f(y,this.con,this.localUri,CrocMSRP.Status.STOP_SENDING)}else{f(y,this.con,this.localUri,CrocMSRP.Status.STOP_SENDING)}try{this.eventObj.onMessageReceiveAborted(q,v.blob)}catch(u){console.warn("Unexpected application exception: "+u.stack)}return}}console.log("chunkReceiver.size "+v.size+". chunkReceiver.totalBytes "+v.totalBytes);if(v.isComplete()){delete this.chunkReceivers[q];var n=v.blob;if(this.eventObj.onChunkReceived){this.eventObj.onChunkReceived(q,v.size)}this.eventObj.onMessageReceived(q,n.type,n)}else{if(this.eventObj.onChunkReceived){this.eventObj.onChunkReceived(q,v.receivedBytes)}}}}catch(u){var r=CrocMSRP.Status.INTERNAL_SERVER_ERROR;if(u instanceof CrocMSRP.Exceptions.UnsupportedMedia){r=CrocMSRP.Status.UNSUPPORTED_MEDIA}else{console.warn("Unexpected application exception: "+u.stack)}f(y,this.con,this.localUri,r);return}f(y,this.con,this.localUri,CrocMSRP.Status.OK);if(y.getHeader("success-report")==="yes"){i(this,y)}};this.onIncomingReport=function(n){var q,o;q=n.messageId;if(!q){console.log("Invalid REPORT: no message id");return}o=this.chunkSenders[q];if(!o){console.log("Invalid REPORT: unknown message id");return}o.processReport(n);if(!o.isComplete()){return}delete this.chunkSenders[q];if(o.aborted&&!o.remoteAbort){return}try{if(n.status===CrocMSRP.Status.OK){if(this.eventObj.onMessageDelivered){this.eventObj.onMessageDelivered(q)}}else{this.eventObj.onMessageSendFailed(q,n.status,n.comment,o.bodyText)}}catch(p){console.warn("Unexpected application exception: "+p.stack)}};this.onIncomingResponse=function(r){var q;q=r.request.getHeader("message-id");if(!q){console.log("Can't retrieve SEND message id");return}var n=r.request.sender;if(r.status===CrocMSRP.Status.OK){try{if(!n.aborted&&this.eventObj.onChunkSent){this.eventObj.onChunkSent(q,r.request.byteRange.end)}if(r.request.continuationFlag===CrocMSRP.Message.Flag.end&&this.eventObj.onMessageSent){this.eventObj.onMessageSent(q)}}catch(p){console.warn("Unexpected application exception: "+p.stack)}}else{var o=undefined;if(this.chunkSenders[q]){o=this.chunkSenders[q].bodyText}n.abort();n.remoteAbort=true;delete this.chunkSenders[q];try{this.eventObj.onMessageSendFailed(q,r.status,r.comment,o)}catch(p){console.warn("Unexpected application exception: "+p.stack)}}};function g(o,n){return function(){var p=undefined;if(o.chunkSenders[n]){p=o.chunkSenders[n].bodyText}delete o.chunkSenders[n];try{o.eventObj.onMessageSendFailed(n,CrocMSRP.Status.REQUEST_TIMEOUT,"Report Timeout",p)}catch(q){console.warn("Unexpected application exception: "+q.stack)}}}function f(q,o,p,n){if(n===CrocMSRP.Status.OK){if(!q.responseOn.success){return}}else{if(!q.responseOn.failure){return}}o.ws.send(new CrocMSRP.Message.OutgoingResponse(q,p,n))}function i(s,r){var o;o=new CrocMSRP.Message.OutgoingRequest(s,"REPORT");o.addHeader("message-id",r.messageId);o.addHeader("status","000 200 OK");if(r.byteRange||r.continuationFlag===CrocMSRP.Message.Flag.continued){var t=1,n,q=-1;if(r.byteRange){t=r.byteRange.start;q=r.byteRange.total}if(!r.body){n=0}else{if(r.body instanceof ArrayBuffer){console.log("sendReport. req.body is ArrayBuffer");n=t+r.body.byteLength-1}else{if(r.isBase64){console.log("sendReport. req.body is base64");n=t+r.body.length-1}else{console.log("sendReport. req.body is String");var p=new Blob([r.body]);n=t+p.size-1}}}if(n!==r.byteRange.end){console.warn("Report Byte-Range end does not match request. end:"+n+",req.byteRange.end:"+r.byteRange.end)}o.byteRange={start:t,end:n,total:q}}s.con.ws.send(o)}function j(s){var r,p,n=new Date().getTime(),o=s.config.chunkTimeout;for(r in s.chunkReceivers){p=s.chunkReceivers[r];console.log("now: "+n+", lastReceive: "+p.lastReceive+", timeout: "+o);if(n-p.lastReceive>o){p.abort();delete s.chunkReceivers[r];try{s.eventObj.onMessageReceiveTimeout(r,p.blob)}catch(q){console.warn("Unexpected application exception: "+q.stack)}}}if(CrocMSRP.util.isEmpty(s.chunkReceivers)){clearInterval(s.receiverCheckInterval);s.receiverCheckInterval=null}}}function d(j){this.chunkManager=j;this.config=new CrocMSRP.ConnectionConfig();this.ws=null;this.localSessionIds={};this.reconnectTimer=null;this.reducedChunkSize=512;this.bandwidthDelay=200;this.bandwidthRetries=5;this.ramp=2;this.activeSenders=[];this.outstandingSends=0;this.onMsrpRequest=function(l){var k,m;if(l.toPath.length!==1){g(l,this,l.toPath[0],CrocMSRP.Status.SESSION_DOES_NOT_EXIST);return}k=new CrocMSRP.Uri(l.toPath[0]);if(!k){g(l,this,l.toPath[0],CrocMSRP.Status.BAD_REQUEST);return}m=this.localSessionIds[k.sessionId];if(!m||!(m.localUri.authority===k.authority)||!(m.localUri.port===k.port)||!(m.localUri.sessionId===k.sessionId)){g(l,this,l.toPath[0],CrocMSRP.Status.SESSION_DOES_NOT_EXIST);return}switch(l.method){case"SEND":m.onIncomingSend(l);break;case"REPORT":m.onIncomingReport(l);break;default:g(l,this,l.toPath[0],CrocMSRP.Status.NOT_IMPLEMENTED);return}};this.addSender=function(k){this.activeSenders.push(k);h(this)};this.onMsrpResponse=function(k){if(k.request.method==="SEND"){this.outstandingSends--}k.request.session.onIncomingResponse(k);h(this)};function g(n,l,m,k){if(k===CrocMSRP.Status.OK){if(!n.responseOn.success){return}}else{if(!n.responseOn.failure){return}}l.ws.send(new CrocMSRP.Message.OutgoingResponse(n,m,k))}function h(l,n){var o,q,p,k,m;if(!n){n=0}while(l.activeSenders.length>0&&l.outstandingSends<l.config.maxOutstandingSends&&n<l.ramp){o=l.activeSenders[0];if(o.aborted&&o.remoteAbort){l.activeSenders.shift()}l.outstandingSends++;n++;l.chunkManager.totalSize=o.size;q=o.getNextChunk();p=l.ws.send(q);if(p===true||o.aborted){f(l,o)}else{if(p==="BlobForbidden"&&q.byteRange.start===1){i(o,function(r){var t,s;console.log("sendRequests: Trying again with base64 data");l.chunkManager.totalSize=r.size;t=r.getNextChunk();s=l.ws.send(t);if(s==="OtherError"){r.config.chunkSize=l.reducedChunkSize;r.session.config.chunkSize=l.reducedChunkSize;i(r,function(u){console.log("sendRequests: Trying again with reduced chunk size");var v=u.getNextChunk();l.ws.send(v);f(l,u);h(l,n)});return}if(s!==true){console.warn("Unexpected result from WSWrapper.send: "+s)}f(l,r);h(l,n)});return}if(p==="OtherError"){k=0;m=setInterval(function(){k+=1;if(l.ws.send(q)!=="OtherError"||k>=l.bandwidthRetries){clearInterval(m);f(l,o);h(l,n);return}},l.bandwidthDelay);return}console.warn("Unexpected result from WSWrapper.send: "+p);f(l,o)}}}function f(k,l){if(l.isSendComplete()){k.activeSenders.shift()}else{if(k.activeSenders.length>1){k.activeSenders.push(k.activeSenders.shift())}}}function i(l,m){l.sentBytes=0;l.ackedBytes=0;l.incontiguousReports={};l.incontiguousReportCount=0;l.reportTimer=null;l.aborted=false;l.remoteAbort=false;l.getNextChunk=function(){var o;o=new CrocMSRP.Message.OutgoingRequest(this.session,"SEND");o.sender=this;o.addHeader("message-id",this.messageId);o.addHeader("success-report","yes");o.addHeader("failure-report","yes");if(this.aborted){o.continuationFlag=CrocMSRP.Message.Flag.abort}else{var q=this.sentBytes+1,n=Math.min(this.sentBytes+this.config.chunkSize,this.size);o.byteRange={start:q,end:n,total:this.size};if(this.size>0){if(this.sentBytes===0){if(this.disposition){o.addHeader("content-disposition",this.disposition)}else{o.addHeader("content-disposition","inline")}if(this.description){o.addHeader("content-description",this.description)}if(typeof this.bodyText!=="string"){o.addHeader("content-transfer-encoding","base64")}}o.contentType=this.contentType;console.debug("Slicing the blob for next chunk at from "+this.sentBytes+"-"+n);o.body=this.blob.slice(this.sentBytes,n)}if(n<this.size){o.continuationFlag=CrocMSRP.Message.Flag.continued}else{if(this.onReportTimeout){var p=this;this.reportTimer=setTimeout(function(){p.onReportTimeout();p.reportTimer=null},this.config.reportTimeout)}}this.sentBytes=n}return o};if(typeof l.bodyText==="string"&&!(/.*[\u4e00-\u9fa5]+.*$/.test(l.bodyText))){l.blob=l.bodyText;l.size=l.blob.length;m(l)}else{if(typeof l.blob==="string"&&!(/.*[\u4e00-\u9fa5]+.*$/.test(l.blob))){l.size=l.blob.length;m(l)}else{var k=new window.FileReader();k.readAsDataURL(l.blob);k.onload=function(n){l.blob=n.target.result;l.size=l.blob.length;if(typeof m==="function"){m(l)}}}}}}function a(g,f){this.con=g;this.sipmsrp=f;this.transactions={};this.msrpBuffer="";this.send=function(l,i){var k=this,o,m,j;if(l instanceof CrocMSRP.Message.Request&&l.method!=="REPORT"){}if(i){o=i}else{o=l.encode();m=window.cordova;if(m&&m.plugins&&m.plugins.iosrtc&&o instanceof Blob){console.log("iosrtc plugin does not allow send Blob. convert to ArrayBuffer.");j=new FileReader();j.onload=function(){k.send(l,this.result)};j.readAsArrayBuffer(o);return true}}try{this.sipmsrp.comm.wrappedCall.sendMessage(o);if(l.method=="SEND"){l.timer=setTimeout(function(){h(k,l)},30000);this.transactions[l.tid]=l;console.debug("Timer for transaction '"+l.tid+"' set")}}catch(n){console.log("Could not send through DataChannel. Error: "+n);if(n.toString().indexOf("Blob")>-1){return"BlobForbidden"}else{return"OtherError"}}return true};this.onMessage=function(n){this.msrpBuffer=this.msrpBuffer+n;while(this.msrpBuffer!=""){var k,j,l,i,m;k=this.msrpBuffer.indexOf("\r\n");if(k<=0){console.debug("partial MSRP message-no first line: this.msrpBuffer does not have 1st MSRP line yet.. wait for more data:'"+this.msrpBuffer+"'this.msrpBuffer.length: "+this.msrpBuffer.length+"orcaDataChannel index:"+this.msrpBuffer.indexOf("orcaDataChannel"));if(this.msrpBuffer.length==27){console.debug("Ignoring 'orcaDataChannel' MSRP chunk!!");this.msrpBuffer=""}return}j=this.msrpBuffer.substring(0,k);l=j.split(" ");if(l.length<3||l[0]!=="MSRP"||l[1].length===0||l[2].length===0){console.log("Error parsing message: unexpected first line format: "+j);return}m=l[1];i=this.msrpBuffer.indexOf("-------"+m);console.debug("chunkEndIndex: "+i);if(i<0){console.debug("partial MSRP message: End of chunk NOT found for transaction "+m+" wait for more data");return}i=i+m.length+10;n=this.msrpBuffer.substring(0,i);this.msrpBuffer=this.msrpBuffer.substring(i);if(n.length>0){console.debug("processing new MSRP chunk "+n)}if(this.msrpBuffer.length>0){console.debug("partial MSRP msg remaining in this.msrpBuffer '"+this.msrpBuffer+"'")}var n=CrocMSRP.parseMessage(n);if(!n){console.warn("Parsing error on incoming message. Ignoring message.");return}if(n instanceof CrocMSRP.Message.Response){n.request=this.transactions[n.tid];if(n.request){console.debug("Clearing timeout for transaction '"+n.tid+"'");clearTimeout(n.request.timer);delete n.request.timer;delete this.transactions[n.tid];this.con.onMsrpResponse(n)}else{console.log("Unexpected response received; not in transaction list")}return}this.con.onMsrpRequest(n)}};function h(i,j){console.error("timeout happened for transaction request.tid: "+j.tid);delete j.timer;delete i.transactions[j.tid];var k=new CrocMSRP.Message.IncomingResponse(j.tid,408,CrocMSRP.StatusComment[408]);k.request=j;i.con.onMsrpResponse(k)}}orcaALU.SipMsrp=c;if(orcaALU.SipAdapter){orcaALU.SipAdapter.Msrp=orcaALU.SipMsrp}})();
 
 // orca/sipAdapter.js
-(function(){function c(d,g,f,e,i){this.Msrp=orcaALU.SipMsrp;this.stack=undefined;this.uaReg=null;this.transport="ws";this.userAgent="ALU ORCA Agent ";if(typeof orcaVersion!=="undefined"){this.userAgent+=orcaVersion}var h=navigator.userAgent.match(/(Firefox|Chrome)\/(\d|\.)+/);if(h&&h.length>=2){this.userAgent=this.userAgent+" "+h[0]}this.listenIp="r"+Math.floor(Math.random()*10000000000)+".invalid";this.listenPort=0;this.instanceId=undefined;this.sessionExpires=isNaN(e.providerConfig.expires)?600:parseInt(e.providerConfig.expires);this.refreshInProgress=false;this.refresh_timer=0;this.timeouts_allowed=1;this.presenceExpires=300;this.presenceRefreshTimer=undefined;this.presenceEtag=undefined;this.presencePendingUpdates=[];this.localAOR=g;this.session=i;this.config=e;this.token=f;this.ws=d;this.updateToken=function(j){console.debug("sipAdapter.updateToken"+f);this.token.key=j};this.setSessionStatus=function(j){console.debug("setSessionStatus() session status -> "+j);this.session.setSessionStatus(j)};this.createSession=function(){if(!this.stack){this.createStack()}if(this.session.ws_only){console.log("Setting status to connected for ws only session");this.setSessionStatus(SessionStatus.CONNECTED)}else{this.register();this.setSessionStatus(SessionStatus.CONNECTING)}};this.terminateSession=function(){this.unregister()};this.createCallSession=function(l,k,j,m){console.debug("createCallSession() dest: "+k);if(this.session.sessionStatus!==SessionStatus.CONNECTED){console.error("sessionStatus is: "+this.session.sessionStatus);l.clean();return}this.createAndSendInviteRequest(l,k,j)};this.acceptCallSession=function(k,j){this.sendResponse(k,200,"OK",j)};this.rejectCallSession=function(k,l,j){if(l&&j){this.sendResponse(k,l,j)}else{this.sendResponse(k,480,"Temporarily Unavailable")}};this.cancelCallSession=function(j){this.cancel(j)};this.terminateCallSession=function(j){this.bye(j)};this.cleanCallSession=function(j){console.debug("cleanCallSession()");if(j.uaCall!==null){if(j.uaCall instanceof sip.Dialog){j.uaCall.close()}j.uaCall=null}};this.sendResponse=function(l,m,k,j){console.debug("sendResponse(): "+m+" "+k);if(m===200){this.sendInviteResponse(l,m,k,j)}else{this.sendInviteResponse(l,m,k)}};this.createStack=function(){console.debug("Session.createStack()");var j=new sip.TransportInfo(this.listenIp,this.listenPort,this.transport,false,true,true);this.stack=new sip.Stack(this,j)};this.register=function(){var m,o;if(!this.stack){this.createStack()}console.debug("Session.register()");this.uaReg=new sip.UserAgent(this.stack,undefined,undefined,this.config.providerConfig.breaker);this.uaReg.localParty=new sip.Address(this.localAOR);this.uaReg.remoteParty=new sip.Address(this.localAOR);m=this.getRouteHeader();m.value.uri.param.transport=this.transport;o=this.createRegister();o.setItem("Expires",new sip.Header(this.sessionExpires.toString(),"Expires"));o.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));console.log("userId = "+g);console.log("token.id = "+f.id);if(this.token.authtype=="SSO-Auth"){var n=this.token.key;var l=n.authorizationHeader;var p=n.pAccessNetworkInfoHeader;console.log("authorizationHeader = "+l);console.log("pAccessNetworkInfoHeader = "+p);o.setItem("Authorization",new sip.Header(l,"Authorization"));if(p){o.setItem("P-Access-Network-Info",new sip.Header(p,"P-Access-Network-Info"))}}else{var k={username:'"'+f.id+'"',uri:'"sip:'+g.slice(g.indexOf("@")+1)+'"',realm:'"'+g.slice(g.indexOf("@")+1)+'"',nonce:'""',response:'""'};o.setItem("Authorization",new sip.Header("Digest username="+k.username+",realm="+k.realm+",uri="+k.uri+",nonce="+k.nonce+",response="+k.response+",algorithm=MD5","Authorization"))}this.uaReg.sendRequest(o);if(this.config.providerConfig.registerResponseTime>0){var j=this;this.registerResponseTimer=setTimeout(function(){j.registerTimeout()},this.config.providerConfig.registerResponseTime*1000)}};this.register_refresh=function(){var m,o;console.debug("["+new Date().toUTCString()+"] Session.register_refresh()");o=this.createRegister();o.setItem("Expires",new sip.Header(this.sessionExpires.toString(),"Expires"));o.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));o.setItem("Call-ID",new sip.Header(this.savedCallId.toString(),"Call-ID"));if(this.token.authtype=="SSO-Auth"){var n=this.token.key;var l=n.authorizationHeader;var p=n.pAccessNetworkInfoHeader;console.log("authorizationHeader = "+l);console.log("pAccessNetworkInfoHeader = "+p);o.setItem("Authorization",new sip.Header(l,"Authorization"));if(p){o.setItem("P-Access-Network-Info",new sip.Header(p,"P-Access-Network-Info"))}}else{var k={username:'"'+f.id+'"',uri:'"sip:'+g.slice(g.indexOf("@")+1)+'"',realm:'"'+g.slice(g.indexOf("@")+1)+'"',nonce:'""',response:'""'};o.setItem("Authorization",new sip.Header("Digest username="+k.username+",realm="+k.realm+",uri="+k.uri+",nonce="+k.nonce+",response="+k.response,"Authorization"))}this.uaReg.sendRequest(o);this.refreshInProgress=true;if(this.config.providerConfig.registerResponseTime>0){var j=this;this.registerResponseTimer=setTimeout(function(){j.registerTimeout()},this.config.providerConfig.registerResponseTime*1000)}if(this.session.mdsp.isFeatureEnabled()){this.session.mdsp.logContacts("at end register_refresh",true)}};this.registerTimeout=function(){if(this.session.socketStatus==this.session.WebSocketStatus.CONNECTED){console.log("Registration response timeout");this.session.onWebSocketError();this.session.closePending=true;this.ws.close()}else{console.log("Ignoring registration timeout because ws connection is already disconnected ")}};this.unregister=function(){console.debug("Session.unregister()");clearTimeout(this.presenceRefreshTimer);this.sendUpdatePresence("",false,false,true);var l=this.createRegister();l.setItem("Expires",new sip.Header("0","Expires"));l.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));if(this.token.authtype=="SSO-Auth"){var k=this.token.key;var j=k.authorizationHeader;var m=k.pAccessNetworkInfoHeader;console.log("authorizationHeader = "+j);console.log("pAccessNetworkInfoHeader = "+m);l.setItem("Authorization",new sip.Header(j,"Authorization"));if(m){l.setItem("P-Access-Network-Info",new sip.Header(m,"P-Access-Network-Info"))}}this.uaReg.sendRequest(l);if(this.refresh_timer){clearTimeout(this.refresh_timer)}this.savedCallId=undefined};this.createContactHeader=function(j){var l;console.debug("adapter.createContactHeader()");if(j=="REGISTER"){l=new sip.Header(this.stack.uri.toString(),"Contact");l.setItem("reg-id","1");this.createInstanceId()}else{l=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact")}l.value.uri.user=this.getUsername(this.localAOR);l.value.displayName=this.token.displayName;if(this.config.providerConfig.breaker){l.value.uri.param.transport="ws";l.value.uri.param["rtcweb-breaker"]="yes"}if((j=="REGISTER")||(this.session.mdsp.isFeatureEnabled())){l.setItem("+sip.instance",this.instanceId)}if(this.session.mdsp.isFeatureEnabled()){var k=this.session.mdsp.getSecDeviceId();if(k!=""){l.setItem(k)}if(this.session.mdsp.myOwnGruu!=""){l.value.uri.param.gr=this.session.mdsp.myOwnGruu}}return l};this.createRegister=function(){var j,k;console.debug("Session.createRegister()");j=this.uaReg.createRequest("REGISTER");k=this.createContactHeader("REGISTER");j.setItem("Supported",new sip.Header("path, gruu","Supported"));j.setItem("Contact",k);if(this.token.authtype=="Token-Auth"){console.debug("token.authtype: Token-Auth, token.key: "+this.token.key);j.setItem("X-ALU-Authorization",new sip.Header('access-token="'+this.token.key+'"',"X-ALU-Authorization"))}return j};this.getUsername=function(n){var m,l,k,j;m=n.split("<")[1];if(m===undefined){m=n}l=m.split(">")[0];if(l===undefined){l=m}k=l.split(":")[1];if(k===undefined){k=l}j=k.split("@")[0];if(j===undefined){j=k}return j};this.getRouteHeader=function(k){var j=this.config.uri.split("/")[2].trim()+";transport="+this.transport;return new sip.Header("<sip:"+(k?k+"@":"")+j+";lr>","Route")};this.createUUID4=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(l){var k=Math.random()*16|0,j=l==="x"?k:(k&3|8);return j.toString(16)})};this.createInstanceId=function(){if(!this.instanceId&&localStorage!=="undefined"){this.instanceId=localStorage.getItem("instance_id_"+this.token.id);if(!this.instanceId){this.instanceId="<urn:uuid:"+this.createUUID4()+">";localStorage.setItem("instance_id_"+this.token.id,this.instanceId);console.debug("New instanceId generated = "+this.instanceId)}else{console.debug("Existing instanceId from localStorage = "+this.instanceId)}}if(this.session.mdsp.myOwnGruu==""){this.session.mdsp.myOwnGruu=this.instanceId.substring(1,this.instanceId.length-1)}};this.createTimer=function(k,j){return new sip.TimerImpl(k)};this.debug=function(j){console.debug("[SIP] "+j)};this.send=function(l,n,j){var k="=> "+n[0]+":"+n[1]+"\n"+l;console.debug("["+new Date().toUTCString()+"] Session.send() message "+k);try{this.ws.send(l,n[0],n[1])}catch(m){this.ws.send(l)}};this.received=function(j){console.debug("\n["+new Date().toUTCString()+"] sipAdapter.received()\n");this.stack.received(j,["127.0.0.1",0])};this.receivedResponse=function(l,k,j){console.debug("\n["+new Date().toUTCString()+"] sipAdapter.receivedResponse()");var o,n,m;o=l.request.method;if(o==="REGISTER"){this.receivedRegisterResponse(l,k)}else{if(o==="MESSAGE"){this.receivedPageModeMessageResponse(l,k)}else{if(o==="PUBLISH"){this.receivedUpdatePresenceResponse(l,k)}else{if(o==="SUBSCRIBE"){if(l.request._headers.event.value=="dialog"){this.receivedSubscribeDialogResponse(l,k)}else{if(l.request._headers.event.value=="presence"){this.receivedSubscribePresenceResponse(l,k)}}}else{n=k.getItem("call-id").value;m=this.session.getCall(n);if(m===null||m.uaCall.callId!==l.callId){console.warn("Session.ReceivedResponse() Receive a SIP response for a unknow call. Ignore it.");return}if(o==="INVITE"){this.receivedInviteResponse(m,l,k)}else{if(o==="BYE"){m.terminatedCallSessionEvent({name:CallStatus.DISCONNECTED})}else{if(o==="CANCEL"){m.terminatedCallSessionEvent({name:CallStatus.DISCONNECTED})}else{console.warn("Session.receivedResponse() Ignoring SIP response for method="+o)}}}}}}}};this.receivedRequest=function(k,o,j){console.debug("\n["+new Date().toUTCString()+"] sipAdapter.receivedRequest()");var m,l,p;p=o.method;if(p==="INVITE"){this.receivedInvite(k,o)}else{if(p==="BYE"){this.receivedBye(k,o)}else{if(p==="ACK"){this.receivedAck(k,o)}else{if(p==="INFO"){this.receivedInfo(k,o)}else{if(p==="NOTIFY"){var n=o.getItem("event").value;if(n=="presence"){this.receivedPresenceNotify(k,o)}else{if(n=="dialog"){this.receivedDialogNotify(k,o)}else{this.receivedNotify(k,o)}}}else{if(p==="MESSAGE"){this.receivedPageModeChatMessage(k,o)}else{console.warn("Session.receivedRequest() ignoring received request [method= "+p+", callID = "+o.getItem("call-id").value+"]");if(p!=="ACK"){k.sendResponse(k.createResponse(501,"Not Implemented"))}}}}}}}};this.receivedRegisterResponse=function(k,l){console.debug("\n["+new Date().toUTCString()+"] sipAdapter.receivedRegisterResponse() ua="+k);if(l.response!=408){console.log("Clearing registration response timer");clearTimeout(this.registerResponseTimer)}var j,p,q,m,n,o;if(l.isfinal()){if(l.is2xx()){if(this.session.sessionStatus===SessionStatus.CONNECTING||this.refreshInProgress){if(!this.savedCallId){if(l.hasItem("call-id")){this.savedCallId=l.getItem("call-id").value;console.debug("Saving initial register call id = "+this.savedCallId)}}if(this.refreshInProgress){this.refreshInProgress=false;console.debug("Register refresh completed successfully");if(this.session.sessionStatus!=SessionStatus.CONNECTED){console.debug("Setting session status to connected");this.setSessionStatus(SessionStatus.CONNECTED)}}else{this.setSessionStatus(SessionStatus.CONNECTED)}if(l.hasItem("expires").value){p=parseInt(l.getItem("expires").value)}else{o=l.getItem("contact");if(o instanceof Array){p=this.sessionExpires;for(n=0;n<o.length;n+=1){if(o[n]["+sip.instance"]===this.instanceId){p=parseInt(o[n].expires);break}}}else{p=parseInt(o.expires)}}console.debug("i_expires = "+p);if(p>0){if(p>1200){q=p-600}else{q=p/2}if(this.config.providerConfig.registerRefreshTime>0){q=this.config.providerConfig.registerRefreshTime}console.debug("refresh_time = "+q);var r=this;this.refresh_timer=setTimeout(function(){r.register_refresh()},q*1000)}else{console.debug("invalid i_expires = "+p);return}}else{if(this.session.sessionStatus===SessionStatus.CONNECTED){this.setSessionStatus(SessionStatus.DISCONNECTED);this.ws.close()}else{console.warn("Session.receivedRegisterResponse() Ignore SIP REGISTER response (session status = "+this.session.sessionStatus+")")}}if(this.session.mdsp.isFeatureEnabled()){this.processMDSPContactHeaders(l)}}else{console.debug("Session.receivedRegisterResponse() failed response = "+l.response+" "+l.responsetext);if(l.response==423){m=l.getItem("min-expires").value;this.sessionExpires=m;console.debug("Re-trying register with expires = "+m);this.register();return}if(l.response==408){if(this.timeouts_allowed>0){this.session.timeouts_allowed--;return}}if(l.response==403){if(this.token.authtype==="SSO-Auth"){console.debug("receive 403 response and authtype is SSO Auth, set sessionStatus to AUTHENTICATING");this.setSessionStatus(SessionStatus.AUTHENTICATING);return}}if(this.session.sessionStatus===SessionStatus.AUTHENTICATING){console.debug("sessionStatus == SessionStatus.AUTHENTICATING, don't set SessionError.AUTHENTICATION_FAILED")}else{this.setSessionStatus(SessionStatus.DISCONNECTED,SessionError.AUTHENTICATION_FAILED)}}}};this.processMDSPContactHeaders=function(m){console.debug("sipAdapter.processMDSPContactHeaders()\n");var o;var j;var k;var t;var w;var l=false;var r=m.getItem("contact");var q=[];if((r instanceof Array)==false){q.push(r)}else{console.debug("array of Contact Headers found.\n");q=r}for(o=0;o<q.length;++o){j="";k="";t="";w=false;if(q[o].value.displayName!=undefined){console.debug("contact["+o+"].displayName = "+q[o].value.displayName);t=q[o].value.displayName}if(q[o]["pub-gruu"]!=undefined){j=this.getGruuFromPubGruu(q[o]["pub-gruu"]);k=this.getSipUriFromPubGruu(q[o]["pub-gruu"]);console.debug("contact["+o+"].pub-gruu = "+q[o]["pub-gruu"]);this.session.mdsp.setGRUUsupport(true)}else{if(q[o]["+sip.instance"]!=undefined){var n=q[o]["+sip.instance"];console.debug("contact["+o+"].+sip.instance = "+n);if((q[o].value.uri.scheme!=undefined)&&(q[o].value.uri.user!=undefined)&&(q[o].value.uri.host!=undefined)){var x=q[o].value.uri.scheme;var v=q[o].value.uri.user;var p=q[o].value.uri.host;k=x+":"+v+"@"+p;if(q[o].value.uri.port!=undefined){k=k+":"+q[o].value.uri.port.toString()}console.debug("contact["+o+"].(constructed sipUri) = "+k)}j=n.substring(1,n.length-1);console.debug("contact["+o+"].(constructed gruu) = "+j);this.session.mdsp.setGRUUsupport(false)}else{console.debug("contact["+o+"] bears neither pub-gruu nor +sip.instance.\n");continue}}if((q[o]["+g.gsma.rcs.ipcall"]!=undefined)||((q[o].mobility!=undefined)&&(q[o].mobility=="fixed"))){w=true}if(this.session.mdsp.addContact(j,k,t,w)){l=true}}if(l){setTimeout(this.session.mdsp.subscribeToMDSPContactDialogs.bind(this.session.mdsp),2000);this.session.mdsp.onContactsUpdate()}};this.getGruuFromPubGruu=function(j){j=j.split(";gr=");if(j.length!=2){console.debug('Invalid pub-gruu received.  Unable to extract GRUU. pub-gruu="'+j+'"');return("GRUU-Unknown")}return(j[1])};this.getSipUriFromPubGruu=function(j){j=j.split(";gr=");if(j.length!=2){console.debug('Invalid pub-gruu received.  Unable to extract sip-uri. pub-gruu="'+j+'"');return("sip-uri-Unknown")}return(j[0])};this.sendSubscribeDialog=function(l){console.debug("sendSubscribeDialog(), sipUri = <"+l+">");var k,j,m;k=new sip.UserAgent(this.stack);k.remoteParty=new sip.Address(l);k.localParty=new sip.Address(this.localAOR);j=k.createRequest("SUBSCRIBE");m=this.createContactHeader("SUBSCRIBE");j.setItem("Contact",m);j.setItem("Event",new sip.Header("dialog","Event"));j.setItem("Supported",new sip.Header("gruu","Supported"));j.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));j.setItem("Expires",new sip.Header("3600","Expires"));k.sendRequest(j)};this.receivedSubscribeDialogResponse=function(k,j){console.debug("Session.receivedSubscribeDialogResponse() response "+j.response)};this.receivedDialogNotify=function(l,m){var k=l.createResponse(200,"OK");var j=this.createContactHeader("200 OK");k.setItem("Contact",j);k.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));l.sendResponse(k);this.session.mdsp.onDialogNotify(m.body)};this.authenticate=function(k,l,j){console.debug("authenticate() username = "+this.token.id+", password = "+this.token.key+", authtype = "+this.token.authtype);if(this.token.authtype==="Token-Auth"){this.setSessionStatus(SessionStatus.AUTHENTICATING);return false}else{l.username=this.token.id;l.password=this.token.key;return true}};this.createServer=function(l,k,j){console.debug("createServer() create new UAS instance for method = "+l.method);return(l.method!=="CANCEL"?new sip.UserAgent(j,l):null)};this.dialogCreated=function(l,k,j){var n,m;n=l.callId;m=this.session.getCall(n);if(m!==null){if(k===m.uaCall){m.uaCall=l}}else{console.warn("Session.dialogCreated() A dialog has been created but it's not linked with any created Call instance")}};this.cancelled=function(k,n,j){console.debug("Session.cancelled()");var m,l;m=n.getItem("call-id").value;l=this.getCall(m);if(l!==null){l.cancelled(k,n,j)}else{console.warn("Session.canceled() A request has been canceled, but it's not linked with any created Call instance")}};this.sendDTMFSip=function(m,k){var o,n,j;console.debug("sendDTMFSip "+k);var l=m.session.config.providerConfig.dtmfDuration;console.debug("sendDTMFSip dtmfDuration: "+l);if(m.uaCall){if(typeof k!=="string"||k.length!==1){console.error("sendDTMFSip() Input must be a single DTMF character.");return}o="1234567890#*ABCDabcd";if(o.indexOf(k)<0){console.error('sendDTMFSip() Character "'+k+'" is not a DTMF tone, ignoring.');return}n=m.uaCall.createRequest("INFO");j=this.createContactHeader("INFO");n.setItem("Contact",j);if(this.userAgent){n.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"))}n.setItem("Content-Type",new sip.Header("application/dtmf-relay","Content-Type"));body="Signal="+k+"\r\n";body=body+"Duration="+l+"\r\n";n.setBody(body);m.uaCall.sendRequest(n)}};this.resolve=function(n,m,q,k){console.debug("Entered resolve() host = "+n+" type = "+m);var j=this.config.uri.lastIndexOf("//");if(j>-1){j+=1}var p=this.config.uri.lastIndexOf(":");var o=this.config.uri.substring(j+1,p);console.debug("resolve() ip_address = "+o);dns_candidate=new Object();dns_candidate.address=o;var l=new Array();l[0]=dns_candidate;q(n,l)};this.sendPageModeChatMessage=function(r,o,q){var n,k,m,j,p,l;n=new sip.UserAgent(this.stack);if(o.length===1){n.remoteParty=new sip.Address(o[0])}else{n.remoteParty=new sip.Address(this.session.config.providerConfig.conferenceFactoryURI)}n.localParty=new sip.Address(this.localAOR);if(this.config.providerConfig.breaker){n.breaker=true}k=n.createRequest("MESSAGE");r.callId=k.getItem("call-id").value;m=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");m.setItem("gr",this.session.instanceId);k.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));if(o.length===1){k.setItem("Content-Type",new sip.Header("text/plain","Content-Type"));k.setBody(q)}else{j=new b();for(p=0;p<o.length;p+=1){j.addResource({uri:o[p]})}l=new a();l.addPart({contentType:"text/plain",data:q});l.addPart({contentType:"application/resource-lists+xml",contentDisposition:"recipient-list",data:j.toString()});k.setItem("Content-Type",new sip.Header("multipart/mixed;boundary="+l.getBoundary(),"Content-Type"));k.setItem("Require",new sip.Header("recipient-list-invite","Require"));k.setBody(l.toString())}n.sendRequest(k)};this.sendUpdatePresence=function(n,m,k,q){var p,o,j,l;clearTimeout(this.presenceRefreshTimer);if(m&&this.presencePendingUpdates.length>0){return}if(q&&!this.presenceEtag){return}if(n===true){console.info("sendUpdatePresence() Use a default online presence XML");n='<?xml version="1.0" encoding="UTF-8"?>\r\n<presence xmlns="urn:ietf:params:xml:ns:pidf" entity="'+this.localAOR+'">\r\n\t<tuple id="orca1">\r\n\t\t<status>\r\n\t\t\t<basic>open</basic>\r\n\t\t</status>\r\n\t\t<contact priority="0.8">'+this.localAOR+'</contact>\r\n\t\t<note xml:lang="en">Logged in with Orca ALU</note>\r\n\t\t<timestamp>'+(new Date()).toISOString()+"</timestamp>\r\n\t</tuple>\r\n</presence>\r\n"}else{if(n===false){console.info("sendUpdatePresence() Use a default offline presence XML");n='<?xml version="1.0" encoding="UTF-8"?>\r\n<presence xmlns="urn:ietf:params:xml:ns:pidf" entity="'+this.localAOR+'">\r\n\t<tuple id="orca1">\r\n\t\t<status>\r\n\t\t\t<basic>closed</basic>\r\n\t\t</status>\r\n\t\t<contact priority="0.8">'+this.localAOR+'</contact>\r\n\t\t<note xml:lang="en">Logged in with Orca ALU</note>\r\n\t\t<timestamp>'+(new Date()).toISOString()+"</timestamp>\r\n\t</tuple>\r\n</presence>\r\n"}}this.presencePendingUpdates.push(n);if(!k&&this.presencePendingUpdates.length>1){return}p=new sip.UserAgent(this.stack);p.remoteParty=new sip.Address(this.localAOR);p.localParty=new sip.Address(this.localAOR);o=p.createRequest("PUBLISH");j=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");j.value.uri.param.gr=this.session.mdsp.myOwnGruu;o.setItem("Contact",j);o.setItem("Event",new sip.Header("presence","Event"));o.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));o.setItem("Content-Type",new sip.Header((""+n).toLowerCase().indexOf("pidf-diff")>-1?"application/pidf-diff+xml":"application/pidf+xml","Content-Type"));if(this.presenceEtag){o.setItem("SIP-If-Match",new sip.Header(this.presenceEtag,"SIP-If-Match"))}if(n){o.setBody(n)}if(!m&&this.presenceEtag){this.presenceEtag=undefined}if(q){o.setItem("Expires",new sip.Header("0","Expires"))}else{if(this.presenceExpires>0){o.setItem("Expires",new sip.Header(""+this.presenceExpires,"Expires"))}}p.sendRequest(o)};this.receivedUpdatePresenceResponse=function(m,l){console.debug("Session.receivedUpdatePresenceResponse() response "+l.response);var o=this.presencePendingUpdates.shift(),k=this,n,j=0;if(o===undefined){console.warn("receivedUpdatePresenceResponse() Original request not found");o=""}if(l.is2xx()){n=l.getItem("SIP-ETag");if(n){this.presenceEtag=n.value}else{this.presenceEtag=undefined}n=l.getItem("Expires");if(n){j=parseInt(n.value);if(j>0){this.presenceExpires=j}}if(j>0&&this.presencePendingUpdates.length===0){this.presenceRefreshTimer=setTimeout(function(){k.sendUpdatePresence("",true)},((j>1200)?(j-600):(j/2))*1000)}this.session.onUpdatePresenceSuccess({name:SessionStatus.UPDATEPRESENCESUCCESS,content:o})}else{if(this.presencePendingUpdates.length===0){if(l.response===412&&this.presenceEtag!=undefined){this.presenceEtag=undefined;this.sendUpdatePresence(o,true);return}if(l.response===423){this.presenceExpires=parseInt(l.getItem("Min-Expires").value);this.sendUpdatePresence(o,true);return}}this.session.onUpdatePresenceFail({name:SessionStatus.UPDATEPRESENCEFAIL,content:o})}if(this.presencePendingUpdates.length>0){this.sendUpdatePresence(this.presencePendingUpdates[0],false,true)}};this.sendSubscribePresence=function(n,k){var m,l,j;m=new sip.UserAgent(this.stack);m.remoteParty=new sip.Address(n);m.localParty=new sip.Address(this.localAOR);l=m.createRequest("SUBSCRIBE");j=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");l.setItem("Contact",j);l.setItem("Event",new sip.Header("presence","Event"));l.setItem("Accept",new sip.Header("application/rlmi+xml, application/pidf+xml, application/pidf-diff+xml","Accept"));l.setItem("Supported",new sip.Header("eventlist","Supported"));l.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));if(k!=undefined){l.setItem("Expires",new sip.Header(""+k,"Expires"))}else{l.setItem("Expires",new sip.Header(""+this.presenceExpires,"Expires"))}m.sendRequest(l)};this.receivedSubscribePresenceResponse=function(k,n){console.debug("Session.receivedSubscribePresenceResponse() response "+n.response);var m=0;var r=n.getItem("Expires");if(r){m=parseInt(r.value)}var j,p,q,o,l;p=n.getItem("From").value.uri.toString();q=n.getItem("To").value.uri.toString();o=n.getItem("Call-ID").value;l=n.getItem("CSeq").value;console.log("receivedSubscribePresenceResponse(). from: "+p+", to: "+q+", callId: "+o+", cSeq: "+l);j={responseCode:n.responseText,from:p,to:q,callId:o,cSeq:l,expires:m};if(n.is2xx()){if(m>0){this.session.onSubscribePresenceSuccess(j)}else{this.session.onGetPresenceSuccess(j)}}else{if(m>0){this.session.onSubscribePresenceFailed(j)}else{this.session.onGetPresenceFailed(j)}}};this.receivedPresenceNotify=function(l,s){var v,w,t,n;v=s.getItem("From").value.uri.toString();w=s.getItem("To").value.uri.toString();t=s.getItem("Call-ID").value;n=s.getItem("CSeq").value;var p=this.session.getPresenceSubscription(v,t,n);if(!p){console.warn("receivedPresenceNotify() no subscribe found");l.sendResponse(l.createResponse(481,"Subscription does not exist"))}else{var r=l.createResponse(200,"OK");contact=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");r.setItem("Contact",contact);r.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));l.sendResponse(r);var k,o,j,x=null,u,m;o=s.getItem("Subscription-State").value;var j=parseInt(s.getItem("Content-Length").value);if(j>0){var q=s.getItem("Content-Type");if(q){x=q.value;u=q.type;m=q.boundary}}k={from:v,to:w,callId:t,cSeq:n,subscriptionState:o,contentLength:j,contentType:x,contentType_type:u,boundary:m};this.session.onPresenceNotify(s.body,k)}};this.createAndSendInviteRequest=function(r,p,k){console.debug("Call.createAndSendInviteRequest()");var l,n,j,q,m;if(r.pullCallInfo!=undefined){p.length=0;p.push(r.session.mdsp.getToUriForPull(r.pullCallInfo))}if(r.uaCall===null){r.uaCall=new sip.UserAgent(this.stack);if(p.length===1){r.uaCall.remoteParty=new sip.Address(p[0])}else{r.uaCall.remoteParty=new sip.Address(this.session.config.providerConfig.conferenceFactoryURI)}r.uaCall.localParty=new sip.Address(this.localAOR);if(this.config.providerConfig.breaker){r.uaCall.breaker=true}}if(r.restoredCall){r.uaCall.stack=this.stack}l=r.uaCall.createRequest("INVITE");if(r.pullCallInfo!=undefined){l.uri.user=r.session.mdsp.getRequestUriUserForPull()}r.callId=l.getItem("call-id").value;n=this.createContactHeader("INVITE");l.setItem("Contact",n);l.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));if(k!==undefined){if(p.length===1){l.setItem("Content-Type",new sip.Header("application/sdp","Content-Type"));l.setBody(k)}else{j=new b();for(q=0;q<p.length;q+=1){j.addResource({uri:p[q]})}m=new a();m.addPart({contentType:"application/sdp",data:k});m.addPart({contentType:"application/resource-lists+xml",contentDisposition:"recipient-list",data:j.toString()});l.setItem("Content-Type",new sip.Header("multipart/mixed;boundary="+m.getBoundary(),"Content-Type"));l.setItem("Require",new sip.Header("recipient-list-invite","Require"));l.setBody(m.toString())}}if(r.pullCallInfo!=undefined){var o=r.session.mdsp.getReplacesUriForPull(r.pullCallInfo);l.setItem("Replaces",new sip.Header(o,"Replaces"))}r.uaCall.sendRequest(l)};this.sendInviteResponse=function(n,o,l,k){console.debug("sendInviteResponse()");if(!n.uaCall){console.error("uaCall is null");return}if(o!==200){n.uaCall.sendResponse(n.uaCall.createResponse(o,l));return}var m,j;m=n.uaCall.createResponse(200,"OK");j=this.createContactHeader("200 OK");m.setItem("Contact",j);m.setItem("Content-Type",new sip.Header("application/sdp","Content-Type"));m.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));if(k!==undefined){m.setItem("Content-Type",new sip.Header("application/sdp","Content-Type"));m.setBody(k)}n.uaCall.sendResponse(m)};this.sendPageModeChatMessageResponse=function(n,m,k){console.debug("sendMessageResponse()");if(!n){console.error("uaCall is null");return}if(m!==200){n.sendResponse(n.createResponse(m,k));return}var l,j;l=n.createResponse(200,"OK");j=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");j.value.uri.param.gr=this.session.mdsp.myOwnGruu;l.setItem("Contact",j);l.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));n.sendResponse(l)};this.getRouteHeader=function(k){var j=this.config.uri.split("/")[2].trim()+";transport="+this.transport;return new sip.Header("<sip:"+(k?k+"@":"")+j+";lr>","Route")};this.receivedInvite=function(l,m,n){console.debug("Call.receivedInvite");var j=m.first("From").value.uri.toString();var k={name:"invitation",callId:l.callId,from:j,sdp:m.body,uaCall:l,uaString:m.first("User-Agent").value};this.session.incomingSessionEvent(k)};this.receivedPageModeChatMessage=function(l,m){console.log("Call.received page mode chat message");var j=m.first("From").value.uri.toString();console.log("From: "+j);var k={name:"message",callId:l.callId,from:j,message:m.body,uaCall:l,uaString:m.first("User-Agent").value,contentType:m.getItem("Content-Type").value};this.session.incomingSessionEvent(k)};this.receivedAck=function(j,m){console.debug("Call.receivedAck()");var l;var k=this.session.getCall(j.callId);if(k){if(m.body!==undefined&&m.body!==null){l={name:"confirmed",sdp:m.body}}else{l={name:"confirmed"}}k.incomingCallSessionEvent(l)}};this.receivedInfo=function(j,k){console.debug("receivedInfo() auto respond");j.sendResponse(j.createResponse(200,"OK"))};this.receivedNotify=function(j,m){var k=this.session.getCall(j.callId);if(!k){console.warn("receivedNotify() no call found");j.sendResponse(j.createResponse(200,"OK"));return}j.sendResponse(j.createResponse(200,"OK"));var l=m.getItem("event").value;switch(l){case"refer":break;case"conference":break;default:console.debug("receivedNotify() event not supported: "+l);break}};this.receivedBye=function(j,l){console.debug("Call.receivedBye()");var k=this.session.getCall(j.callId);if(!k){console.warn("receivedBye() no call found");return}if(k.uaCall){k.terminatedCallSessionEvent({name:CallStatus.DISCONNECTED});j.sendResponse(j.createResponse(200,"OK"))}};this.receivedInviteResponse=function(n,m,l){console.debug("Call.receivedInviteResponse() response "+l.response);var o,k,j;if(l.is1xx()){if(l.response!==100){console.debug("Call.receivedInviteResponse() Progressing [response = "+l.response+", text = "+l.responsetext+"]");if(l.response>=180){o={name:CallStatus.CONNECTING};n.ringingCallSessionEvent(o)}}return}if(!l.is2xx()){o={name:CallStatus.REJECTED};n.rejectedCallSessionEvent(o);return}o={name:CallStatus.CONNECTED};o.sdp=l.body;n.acceptedCallSessionEvent(o)};this.receivedPageModeMessageResponse=function(k,j){console.debug("Call.receivedPageModeMessageResponse() response "+j.response);event={callId:k.callId};if(!j.is2xx()){this.session.onPageModeChatMessageFailed(event)}else{this.session.onPageModeChatMessageSent(event)}};this.receivedByeResponse=function(l,k,j){console.debug("receivedByeResponse()");var m={name:CallStatus.DISCONNECTED};l.terminatedCallSessionEvent(m)};this.doRefer=function(k,m,n){console.debug("doRefer() uri="+m+", isAdded="+n);if(k.uaCall===null){return}var l=k.uaCall.createRequest("REFER");var j=this.createContactHeader("REFER");l.setItem("Contact",j);if(this.userAgent){l.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"))}if(n===true){l.setItem("Refer-To",new sip.Header(m,"Refer-To"))}else{l.setItem("Refer-To",new sip.Header("<"+m+";method=BYE>","Refer-To"))}k.uaCall.sendRequest(l)};this.doPush=function(k,j,l){this.doRefer(k,"<"+j+";gr="+l+">",true)};this.cancelled=function(j){console.debug("Call.cancelled()");var k=this.session.getCall(j.callId);if(k&&k.uaCall&&k.uaCall.servers[0]&&j===k.uaCall.servers[0].app){k.incomingCallSessionEvent({name:"canceled"})}else{console.warn("Call.canceled() Invalid User Agent for cancel")}};this.cancel=function(j){console.debug("Call.cancel()");if(j&&j.uaCall){j.uaCall.sendCancel()}else{console.warn("Call.cancel() user agent is not instancied")}};this.bye=function(j){console.debug("bye()");if(j&&j.uaCall){var k=j.uaCall.createRequest("BYE");j.uaCall.sendRequest(k)}else{console.warn("Call.bye() user agent is not instancied")}}}function b(e){var h="to",g="cc",d="bcc",f=[];this.parse=function(k){var j,n,m,o,l,i;if(window.DOMParser){o=new DOMParser();l=o.parseFromString(k,"text/xml");i=l.getElementsByTagName("entry");for(j=0;j<i.length;j+=1){n=false;if(i[j].getAttribute("cp:anonymize")==="true"){n=true}if(n!==true){m={uri:i[j].getAttribute("uri"),copyControl:i[j].getAttribute("cp:copyControl"),anonymous:n};f.push(m)}}}};this.addResource=function(i){if(i.copyControl===undefined){i.copyControl="to"}if(i.anonymous===undefined){i.anonymous=false}f.push(i)};this.getResources=function(){return f};this.delResource=function(k){var i,j;for(i=0;i<f.length;i+=1){j=f[i].uri;if(k.uri===j){f.splice(i,1);return}}};this.toString=function(){var j="",i=this.toXML();if(i.xml){j=i.xml}else{j=(new XMLSerializer()).serializeToString(i)}return j};this.toXML=function(){var l,q,i,p,o,j,m,n,k;l='<?xml version="1.0" encoding="UTF-8"?>';l=l+'<resource-lists xmlns="urn:ietf:params:xml:ns:resource-lists" xmlns:cp="urn:ietf:params:xml:ns:copyControl">';l=l+"<list>";l=l+"</list>";l=l+"</resource-lists>";if(window.DOMParser){i=new DOMParser();q=i.parseFromString(l,"text/xml")}else{q=new ActiveXObject("Microsoft.XMLDOM");q.async=false;q.loadXML(l)}for(p=0;p<f.length;p+=1){o=q.createElement("entry");j=document.createAttribute("uri");j.value=f[p].uri;o.setAttributeNode(j);m=document.createAttribute("cp:copyControl");m.value=f[p].copyControl;o.setAttributeNode(m);if(f[p].anonymous===true){n=document.createAttribute("cp:anonymize");n.value="true";o.setAttributeNode(n)}k=q.getElementsByTagName("list")[0];k.appendChild(o)}return q};if(e!==undefined){this.parse(e)}}function a(){var e,d=[];this.createBoundary=function(){var h="0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz",j=16,k="",g,f;for(g=0;g<j;g+=1){f=Math.floor(Math.random()*h.length);k+=h.substring(f,f+1)}return k};this.getBoundary=function(){return e};this.toString=function(){var g,f;g="";if(d.length!==0){g="--"+e+"\r\n";for(f=0;f<d.length;f+=1){g=g+"Content-Type: "+d[f].contentType;if(d[f].contentDisposition!==undefined){g=g+"\r\nContent-Disposition: "+d[f].contentDisposition}g=g+"\r\n\r\n";g=g+d[f].data;if(f===d.length-1){g=g+"\r\n--"+e+"--\r\n"}else{g=g+"\r\n--"+e+"\r\n"}}}return g};this.addPart=function(f){var g;if(f.contentType===undefined){g=new Error();g.message="Content-Type not defined";throw g}if(f.data===undefined){g=new Error();g.message="data not defined";throw g}d.push(f)};e=this.createBoundary()}orcaALU.SipAdapter=c}());
+(function(){function d(e,h,g,f,j){this.Msrp=orcaALU.SipMsrp;this.stack=undefined;this.uaReg=null;this.transport="ws";this.userAgent="ALU ORCA Agent ";if(typeof orcaVersion!=="undefined"){this.userAgent+=orcaVersion}var i=navigator.userAgent.match(/(Firefox|Chrome)\/(\d|\.)+/);if(i&&i.length>=2){this.userAgent=this.userAgent+" "+i[0]}this.listenIp="r"+Math.floor(Math.random()*10000000000)+".invalid";this.listenPort=0;this.instanceId=undefined;this.sessionExpires=isNaN(f.providerConfig.expires)?600:parseInt(f.providerConfig.expires);this.refreshInProgress=false;this.refresh_timer=0;this.timeouts_allowed=1;this.presenceExpires=300;this.presenceRefreshTimer=undefined;this.presenceEtag=undefined;this.presencePendingUpdates=[];this.localAOR=h;this.session=j;this.config=f;this.token=g;this.ws=e;this.updateToken=function(k){console.debug("sipAdapter.updateToken"+g);this.token.key=k};this.setSessionStatus=function(k){console.debug("setSessionStatus() session status -> "+k);this.session.setSessionStatus(k)};this.createSession=function(){if(!this.stack){this.createStack()}if(this.session.ws_only){console.log("Setting status to connected for ws only session");this.setSessionStatus(SessionStatus.CONNECTED)}else{this.register();this.setSessionStatus(SessionStatus.CONNECTING)}};this.terminateSession=function(){this.unregister()};this.createCallSession=function(m,l,k,n){console.debug("createCallSession() dest: "+l);if(this.session.sessionStatus!==SessionStatus.CONNECTED){console.error("sessionStatus is: "+this.session.sessionStatus);m.clean();return}this.createAndSendInviteRequest(m,l,k)};this.acceptCallSession=function(l,k){this.sendResponse(l,200,"OK",k)};this.rejectCallSession=function(l,m,k){if(m&&k){this.sendResponse(l,m,k)}else{this.sendResponse(l,480,"Temporarily Unavailable")}};this.cancelCallSession=function(k){this.cancel(k)};this.terminateCallSession=function(k){this.bye(k)};this.cleanCallSession=function(k){console.debug("cleanCallSession()");if(k.uaCall!==null){if(k.uaCall instanceof sip.Dialog){k.uaCall.close()}k.uaCall=null}};this.sendResponse=function(m,n,l,k){console.debug("sendResponse(): "+n+" "+l);if(n===200){this.sendInviteResponse(m,n,l,k)}else{this.sendInviteResponse(m,n,l)}};this.createStack=function(){console.debug("Session.createStack()");var k=new sip.TransportInfo(this.listenIp,this.listenPort,this.transport,false,true,true);this.stack=new sip.Stack(this,k)};this.register=function(){var n,p;if(!this.stack){this.createStack()}console.debug("Session.register()");this.uaReg=new sip.UserAgent(this.stack,undefined,undefined,this.config.providerConfig.breaker);this.uaReg.localParty=new sip.Address(this.localAOR);this.uaReg.remoteParty=new sip.Address(this.localAOR);n=this.getRouteHeader();n.value.uri.param.transport=this.transport;p=this.createRegister();p.setItem("Expires",new sip.Header(this.sessionExpires.toString(),"Expires"));p.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));console.log("userId = "+h);console.log("token.id = "+g.id);if(this.token.authtype=="SSO-Auth"){var o=this.token.key;var m=o.authorizationHeader;var q=o.pAccessNetworkInfoHeader;console.log("authorizationHeader = "+m);console.log("pAccessNetworkInfoHeader = "+q);p.setItem("Authorization",new sip.Header(m,"Authorization"));if(q){p.setItem("P-Access-Network-Info",new sip.Header(q,"P-Access-Network-Info"))}}else{if((this.session.autoAnswerTimer)||(this.config.providerConfig.sendAuthOnInitReg)){var l={username:'"'+g.id+'"',uri:'"sip:'+h.slice(h.indexOf("@")+1)+'"',realm:'"'+h.slice(h.indexOf("@")+1)+'"',nonce:'""',response:'""'};p.setItem("Authorization",new sip.Header("Digest username="+l.username+",realm="+l.realm+",uri="+l.uri+",nonce="+l.nonce+",response="+l.response+",algorithm=MD5","Authorization"))}}this.uaReg.sendRequest(p);if(this.config.providerConfig.registerResponseTime>0){var k=this;this.registerResponseTimer=setTimeout(function(){k.registerTimeout()},this.config.providerConfig.registerResponseTime*1000)}};this.register_refresh=function(){var n,p;console.debug("["+new Date().toUTCString()+"] Session.register_refresh()");p=this.createRegister();p.setItem("Expires",new sip.Header(this.sessionExpires.toString(),"Expires"));p.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));if(this.config.providerConfig.reUseCallidInReregDereg){p.setItem("Call-ID",new sip.Header(this.savedCallId.toString(),"Call-ID"))}if(this.token.authtype=="SSO-Auth"){var o=this.token.key;var m=o.authorizationHeader;var q=o.pAccessNetworkInfoHeader;console.log("authorizationHeader = "+m);console.log("pAccessNetworkInfoHeader = "+q);p.setItem("Authorization",new sip.Header(m,"Authorization"));if(q){p.setItem("P-Access-Network-Info",new sip.Header(q,"P-Access-Network-Info"))}}else{if((this.session.needAuthOnReRegister)||(this.config.providerConfig.sendAuthOnReregDereg)){var l={username:'"'+g.id+'"',uri:'"sip:'+h.slice(h.indexOf("@")+1)+'"',realm:'"'+h.slice(h.indexOf("@")+1)+'"',nonce:'""',response:'""'};p.setItem("Authorization",new sip.Header("Digest username="+l.username+",realm="+l.realm+",uri="+l.uri+",nonce="+l.nonce+",response="+l.response,"Authorization"))}}this.uaReg.sendRequest(p);this.refreshInProgress=true;if(this.config.providerConfig.registerResponseTime>0){var k=this;this.registerResponseTimer=setTimeout(function(){k.registerTimeout()},this.config.providerConfig.registerResponseTime*1000)}if(this.session.mdsp.isFeatureEnabled()){this.session.mdsp.logContacts("at end register_refresh",true)}};this.registerTimeout=function(){if(this.session.socketStatus==this.session.WebSocketStatus.CONNECTED){console.log("Registration response timeout");this.session.onWebSocketError();this.session.closePending=true;this.ws.close()}else{console.log("Ignoring registration timeout because ws connection is already disconnected ")}};this.unregister=function(){console.debug("Session.unregister()");clearTimeout(this.presenceRefreshTimer);this.sendUpdatePresence("",false,false,true);var n=this.createRegister();n.setItem("Expires",new sip.Header("0","Expires"));n.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));if(this.config.providerConfig.reUseCallidInReregDereg){n.setItem("Call-ID",new sip.Header(this.savedCallId.toString(),"Call-ID"))}if(this.token.authtype=="SSO-Auth"){var m=this.token.key;var l=m.authorizationHeader;var o=m.pAccessNetworkInfoHeader;console.log("authorizationHeader = "+l);console.log("pAccessNetworkInfoHeader = "+o);n.setItem("Authorization",new sip.Header(l,"Authorization"));if(o){n.setItem("P-Access-Network-Info",new sip.Header(o,"P-Access-Network-Info"))}}else{if(this.config.providerConfig.sendAuthOnReregDereg){var k={username:'"'+g.id+'"',uri:'"sip:'+h.slice(h.indexOf("@")+1)+'"',realm:'"'+h.slice(h.indexOf("@")+1)+'"',nonce:'""',response:'""'};n.setItem("Authorization",new sip.Header("Digest username="+k.username+",realm="+k.realm+",uri="+k.uri+",nonce="+k.nonce+",response="+k.response,"Authorization"))}}this.uaReg.sendRequest(n);if(this.refresh_timer){clearTimeout(this.refresh_timer)}this.savedCallId=undefined};this.createContactHeader=function(k){var m;console.debug("adapter.createContactHeader()");if(k=="REGISTER"){m=new sip.Header(this.stack.uri.toString(),"Contact");m.setItem("reg-id","1");this.createInstanceId()}else{m=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact")}m.value.uri.user=this.getUsername(this.localAOR);m.value.displayName=this.token.displayName;if(this.config.providerConfig.breaker){m.value.uri.param.transport="ws";m.value.uri.param["rtcweb-breaker"]="yes"}if((k=="REGISTER")||(this.session.mdsp.isFeatureEnabled())){m.setItem("+sip.instance",this.instanceId)}if(this.session.mdsp.isFeatureEnabled()){var l=this.session.mdsp.getSecDeviceId();if(l!=""){m.setItem(l)}if(this.session.mdsp.myOwnGruu!=""){m.value.uri.param.gr=this.session.mdsp.myOwnGruu}}return m};this.createRegister=function(){var k,l;console.debug("Session.createRegister()");k=this.uaReg.createRequest("REGISTER");l=this.createContactHeader("REGISTER");k.setItem("Supported",new sip.Header("path, gruu","Supported"));k.setItem("Contact",l);if(this.token.authtype=="Token-Auth"){console.debug("token.authtype: Token-Auth, token.key: "+this.token.key);k.setItem("X-ALU-Authorization",new sip.Header('access-token="'+this.token.key+'"',"X-ALU-Authorization"))}return k};this.getUsername=function(o){var n,m,l,k;n=o.split("<")[1];if(n===undefined){n=o}m=n.split(">")[0];if(m===undefined){m=n}l=m.split(":")[1];if(l===undefined){l=m}k=l.split("@")[0];if(k===undefined){k=l}return k};this.getRouteHeader=function(l){var k=this.config.uri.split("/")[2].trim()+";transport="+this.transport;return new sip.Header("<sip:"+(l?l+"@":"")+k+";lr>","Route")};this.createUUID4=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(m){var l=Math.random()*16|0,k=m==="x"?l:(l&3|8);return k.toString(16)})};this.createInstanceId=function(){if(!this.instanceId&&localStorage!=="undefined"){this.instanceId=localStorage.getItem("instance_id_"+this.token.id);if(!this.instanceId){this.instanceId="<urn:uuid:"+this.createUUID4()+">";localStorage.setItem("instance_id_"+this.token.id,this.instanceId);console.debug("New instanceId generated = "+this.instanceId)}else{console.debug("Existing instanceId from localStorage = "+this.instanceId)}}if(this.session.mdsp.myOwnGruu==""){this.session.mdsp.myOwnGruu=this.instanceId.substring(1,this.instanceId.length-1)}};this.createTimer=function(l,k){return new sip.TimerImpl(l)};this.debug=function(k){console.debug("[SIP] "+k)};this.send=function(m,o,k){var l="=> "+o[0]+":"+o[1]+"\n"+m;console.debug("["+new Date().toUTCString()+"] Session.send() message "+l);try{this.ws.send(m,o[0],o[1])}catch(n){this.ws.send(m)}};this.received=function(k){console.debug("\n["+new Date().toUTCString()+"] sipAdapter.received()\n");this.stack.received(k,["127.0.0.1",0])};this.receivedResponse=function(n,m,l){console.debug("\n["+new Date().toUTCString()+"] sipAdapter.receivedResponse()");var r,p,o;r=n.request.method;if(r==="REGISTER"){this.receivedRegisterResponse(n,m)}else{if(r==="MESSAGE"){if(n.request.getItem("Content-Type").value==="message/cpim"){console.info("ua.request.body: "+n.request.body);var k=this.parseGetMessageBody(n.request.body);var q=this.parseGetMessageContentType(n.request.body).trim();console.log("message body: "+k);console.log("bodyContentType:"+q);if(q.trim()==="message/imdn+xml"){this.receivedSmsIMDNMessageResponse(n,m)}else{this.receivedSmsMessageResponse(n,m)}}else{this.receivedPageModeMessageResponse(n,m)}}else{if(r==="PUBLISH"){this.receivedUpdatePresenceResponse(n,m)}else{if(r==="SUBSCRIBE"){if(n.request._headers.event.value=="dialog"){this.receivedSubscribeDialogResponse(n,m)}else{if(n.request._headers.event.value=="presence"){this.receivedSubscribePresenceResponse(n,m)}}}else{p=m.getItem("call-id").value;o=this.session.getCall(p);if(o===null||o.uaCall.callId!==n.callId){console.warn("Session.ReceivedResponse() Receive a SIP response for a unknow call. Ignore it.");return}if(r==="INVITE"){this.receivedInviteResponse(o,n,m)}else{if(r==="BYE"){o.terminatedCallSessionEvent({name:CallStatus.DISCONNECTED})}else{if(r==="CANCEL"){o.terminatedCallSessionEvent({name:CallStatus.DISCONNECTED})}else{console.warn("Session.receivedResponse() Ignoring SIP response for method="+r)}}}}}}}};this.receivedRequest=function(m,n,q){console.debug("\n["+new Date().toUTCString()+"] sipAdapter.receivedRequest()");var o,s,k;k=n.method;if(k==="INVITE"){this.receivedInvite(m,n)}else{if(k==="BYE"){this.receivedBye(m,n)}else{if(k==="ACK"){this.receivedAck(m,n)}else{if(k==="INFO"){this.receivedInfo(m,n)}else{if(k==="NOTIFY"){var l=n.getItem("event").value;if(l=="presence"){this.receivedPresenceNotify(m,n)}else{if(l=="dialog"){this.receivedDialogNotify(m,n)}else{this.receivedNotify(m,n)}}}else{if(k==="MESSAGE"){var r=n.getItem("Content-Type").value;if(r=="message/cpim"){var p=this.parseGetMessageContentType(n.body);console.info("received request bodyContentType: "+p);if(p.trim()==="message/imdn+xml"){this.receivedSmsIMDNMessage(m,n)}else{this.receivedSmsMessage(m,n)}}else{this.receivedPageModeChatMessage(m,n)}}else{console.warn("Session.receivedRequest() ignoring received request [method= "+k+", callID = "+n.getItem("call-id").value+"]");if(k!=="ACK"){m.sendResponse(m.createResponse(501,"Not Implemented"))}}}}}}}};this.receivedRegisterResponse=function(l,m){console.debug("\n["+new Date().toUTCString()+"] sipAdapter.receivedRegisterResponse() ua="+l);if(m.response!=408){console.log("Clearing registration response timer");clearTimeout(this.registerResponseTimer)}var k,q,r,n,o,p;if(m.isfinal()){if(m.is2xx()){if(this.session.sessionStatus===SessionStatus.CONNECTING||this.refreshInProgress){if(!this.savedCallId){if(m.hasItem("call-id")){this.savedCallId=m.getItem("call-id").value;console.debug("Saving initial register call id = "+this.savedCallId)}}if(this.refreshInProgress){this.refreshInProgress=false;console.debug("Register refresh completed successfully");if(this.session.sessionStatus!=SessionStatus.CONNECTED){console.debug("Setting session status to connected");this.setSessionStatus(SessionStatus.CONNECTED)}}else{this.setSessionStatus(SessionStatus.CONNECTED)}if(m.hasItem("expires").value){q=parseInt(m.getItem("expires").value)}else{p=m.getItem("contact");if(p instanceof Array){q=this.sessionExpires;for(o=0;o<p.length;o+=1){if(p[o]["+sip.instance"]===this.instanceId){q=parseInt(p[o].expires);break}}}else{q=parseInt(p.expires)}}console.debug("i_expires = "+q);if(q>0){if(q>1200){r=q-600}else{r=q/2}if(this.config.providerConfig.registerRefreshTime>0){r=this.config.providerConfig.registerRefreshTime}console.debug("refresh_time = "+r);var s=this;this.refresh_timer=setTimeout(function(){s.register_refresh()},r*1000)}else{console.debug("invalid i_expires = "+q);return}}else{if(this.session.sessionStatus===SessionStatus.CONNECTED){this.setSessionStatus(SessionStatus.DISCONNECTED);this.ws.close()}else{console.warn("Session.receivedRegisterResponse() Ignore SIP REGISTER response (session status = "+this.session.sessionStatus+")")}}if(this.session.mdsp.isFeatureEnabled()){this.processMDSPContactHeaders(m)}}else{console.debug("Session.receivedRegisterResponse() failed response = "+m.response+" "+m.responsetext);if(m.response==423){n=m.getItem("min-expires").value;this.sessionExpires=n;console.debug("Re-trying register with expires = "+n);this.register();return}if(m.response==408){if(this.timeouts_allowed>0){this.session.timeouts_allowed--;return}}if(m.response==403){if(this.token.authtype==="SSO-Auth"){console.debug("receive 403 response and authtype is SSO Auth, set sessionStatus to AUTHENTICATING");this.setSessionStatus(SessionStatus.AUTHENTICATING);return}}if(this.session.sessionStatus===SessionStatus.AUTHENTICATING){console.debug("sessionStatus == SessionStatus.AUTHENTICATING, don't set SessionError.AUTHENTICATION_FAILED")}else{this.setSessionStatus(SessionStatus.DISCONNECTED,SessionError.AUTHENTICATION_FAILED)}}}};this.processMDSPContactHeaders=function(n){console.debug("sipAdapter.processMDSPContactHeaders()\n");var p;var k;var l;var v;var x;var m=false;var t=n.getItem("contact");var r=[];if((t instanceof Array)==false){r.push(t)}else{console.debug("array of Contact Headers found.\n");r=t}for(p=0;p<r.length;++p){k="";l="";v="";x=false;if(r[p].value.displayName!=undefined){console.debug("contact["+p+"].displayName = "+r[p].value.displayName);v=r[p].value.displayName}if(r[p]["pub-gruu"]!=undefined){k=this.getGruuFromPubGruu(r[p]["pub-gruu"]);l=this.getSipUriFromPubGruu(r[p]["pub-gruu"]);console.debug("contact["+p+"].pub-gruu = "+r[p]["pub-gruu"]);this.session.mdsp.setGRUUsupport(true)}else{if(r[p]["+sip.instance"]!=undefined){var o=r[p]["+sip.instance"];console.debug("contact["+p+"].+sip.instance = "+o);if((r[p].value.uri.scheme!=undefined)&&(r[p].value.uri.user!=undefined)&&(r[p].value.uri.host!=undefined)){var y=r[p].value.uri.scheme;var w=r[p].value.uri.user;var q=r[p].value.uri.host;l=y+":"+w+"@"+q;if(r[p].value.uri.port!=undefined){l=l+":"+r[p].value.uri.port.toString()}console.debug("contact["+p+"].(constructed sipUri) = "+l)}k=o.substring(1,o.length-1);console.debug("contact["+p+"].(constructed gruu) = "+k);this.session.mdsp.setGRUUsupport(false)}else{console.debug("contact["+p+"] bears neither pub-gruu nor +sip.instance.\n");continue}}if((r[p]["+g.gsma.rcs.ipcall"]!=undefined)||((r[p].mobility!=undefined)&&(r[p].mobility=="fixed"))){x=true}if(this.session.mdsp.addContact(k,l,v,x)){m=true}}if(m){setTimeout(this.session.mdsp.subscribeToMDSPContactDialogs.bind(this.session.mdsp),2000);this.session.mdsp.onContactsUpdate()}};this.getGruuFromPubGruu=function(k){k=k.split(";gr=");if(k.length!=2){console.debug('Invalid pub-gruu received.  Unable to extract GRUU. pub-gruu="'+k+'"');return("GRUU-Unknown")}return(k[1])};this.getSipUriFromPubGruu=function(k){k=k.split(";gr=");if(k.length!=2){console.debug('Invalid pub-gruu received.  Unable to extract sip-uri. pub-gruu="'+k+'"');return("sip-uri-Unknown")}return(k[0])};this.sendSubscribeDialog=function(m){console.debug("sendSubscribeDialog(), sipUri = <"+m+">");var l,k,n;l=new sip.UserAgent(this.stack);l.remoteParty=new sip.Address(m);l.localParty=new sip.Address(this.localAOR);k=l.createRequest("SUBSCRIBE");n=this.createContactHeader("SUBSCRIBE");k.setItem("Contact",n);k.setItem("Event",new sip.Header("dialog","Event"));k.setItem("Supported",new sip.Header("gruu","Supported"));k.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));k.setItem("Expires",new sip.Header("3600","Expires"));l.sendRequest(k)};this.receivedSubscribeDialogResponse=function(l,k){console.debug("Session.receivedSubscribeDialogResponse() response "+k.response)};this.receivedDialogNotify=function(m,n){var l=m.createResponse(200,"OK");var k=this.createContactHeader("200 OK");l.setItem("Contact",k);l.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));m.sendResponse(l);this.session.mdsp.onDialogNotify(n.body)};this.authenticate=function(l,m,k){console.debug("authenticate() username = "+this.token.id+", password = "+this.token.key+", authtype = "+this.token.authtype);if(this.token.authtype==="Token-Auth"){this.setSessionStatus(SessionStatus.AUTHENTICATING);return false}else{m.username=this.token.id;m.password=this.token.key;if(!(m.hasItem("algorithm"))){m.algorithm="MD5"}return true}};this.createServer=function(m,l,k){console.debug("createServer() create new UAS instance for method = "+m.method);return(m.method!=="CANCEL"?new sip.UserAgent(k,m):null)};this.dialogCreated=function(m,l,k){var o,n;o=m.callId;n=this.session.getCall(o);if(n!==null){if(l===n.uaCall){n.uaCall=m}}else{console.warn("Session.dialogCreated() A dialog has been created but it's not linked with any created Call instance")}};this.cancelled=function(l,o,k){console.debug("Session.cancelled()");var n,m;n=o.getItem("call-id").value;m=this.getCall(n);if(m!==null){m.cancelled(l,o,k)}else{console.warn("Session.canceled() A request has been canceled, but it's not linked with any created Call instance")}};this.sendDTMFSip=function(n,l){var p,o,k;console.debug("sendDTMFSip "+l);var m=n.session.config.providerConfig.dtmfDuration;console.debug("sendDTMFSip dtmfDuration: "+m);if(n.uaCall){if(typeof l!=="string"||l.length!==1){console.error("sendDTMFSip() Input must be a single DTMF character.");return}p="1234567890#*ABCDabcd";if(p.indexOf(l)<0){console.error('sendDTMFSip() Character "'+l+'" is not a DTMF tone, ignoring.');return}o=n.uaCall.createRequest("INFO");k=this.createContactHeader("INFO");o.setItem("Contact",k);if(this.userAgent){o.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"))}o.setItem("Content-Type",new sip.Header("application/dtmf-relay","Content-Type"));body="Signal="+l+"\r\n";body=body+"Duration="+m+"\r\n";o.setBody(body);n.uaCall.sendRequest(o)}};this.resolve=function(o,n,r,l){console.debug("Entered resolve() host = "+o+" type = "+n);var k=this.config.uri.lastIndexOf("//");if(k>-1){k+=1}var q=this.config.uri.lastIndexOf(":");var p=this.config.uri.substring(k+1,q);console.debug("resolve() ip_address = "+p);dns_candidate=new Object();dns_candidate.address=p;var m=new Array();m[0]=dns_candidate;r(o,m)};this.sendPageModeChatMessage=function(s,p,r){var o,l,n,k,q,m;o=new sip.UserAgent(this.stack);if(p.length===1){o.remoteParty=new sip.Address(p[0])}else{o.remoteParty=new sip.Address(this.session.config.providerConfig.conferenceFactoryURI)}o.localParty=new sip.Address(this.localAOR);if(this.config.providerConfig.breaker){o.breaker=true}l=o.createRequest("MESSAGE");s.callId=l.getItem("call-id").value;n=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");n.setItem("gr",this.session.instanceId);l.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));if(p.length===1){l.setItem("Content-Type",new sip.Header("text/plain","Content-Type"));l.setBody(r)}else{k=new c();for(q=0;q<p.length;q+=1){k.addResource({uri:p[q]})}m=new b();m.addPart({contentType:"text/plain",data:r});m.addPart({contentType:"application/resource-lists+xml",contentDisposition:"recipient-list",data:k.toString()});l.setItem("Content-Type",new sip.Header("multipart/mixed;boundary="+m.getBoundary(),"Content-Type"));l.setItem("Require",new sip.Header("recipient-list-invite","Require"));l.setBody(m.toString())}o.sendRequest(l)};this.sendSmsMessage=function(v,s,k,t,u){console.info("sipAdapter.sendSmsMessage");var q,n,p,l,r,o;q=new sip.UserAgent(this.stack);if(s.length===1){q.remoteParty=new sip.Address(s[0])}else{q.remoteParty=new sip.Address(this.session.config.providerConfig.conferenceFactoryURI)}q.localParty=new sip.Address(this.localAOR);if(this.config.providerConfig.breaker){q.breaker=true}n=q.createRequest("MESSAGE");v.callId=n.getItem("call-id").value;p=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");p.setItem("gr",this.session.instanceId);n.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));var m="";m+="From: <"+this.localAOR+">\r\n";m+="To: <"+s[0]+">\r\n";m+="DateTime:"+t+"\r\n";m+="NS: imdn <urn:ietf:params:imdn>\r\n";m+="imdn.Message-ID:"+k+"\r\n";m+="imdn.Disposition-Notification: positive-delivery, negative-delivery\r\n";m+="Content-type: text/plain\r\n";m+="Content-Length:"+u.length+"\r\n\r\n";m+=u+"\r\n";console.info(m.length);if(s.length===1){n.setItem("Content-Type",new sip.Header("message/cpim","Content-Type"));n.setBody(m)}else{console.info("multiple dest")}q.sendRequest(n)};this.sendSmsIMDNMessage=function(y,v,k,p,x){console.info("sipAdapter.sendSmsIMDNMessage");var s,o,r,l,u,q;s=new sip.UserAgent(this.stack);if(v.length===1){s.remoteParty=new sip.Address(v[0])}else{s.remoteParty=new sip.Address(this.session.config.providerConfig.conferenceFactoryURI)}s.localParty=new sip.Address(this.localAOR);if(this.config.providerConfig.breaker){s.breaker=true}o=s.createRequest("MESSAGE");y.callId=o.getItem("call-id").value;r=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");r.setItem("gr",this.session.instanceId);o.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));var m=this.localAOR.indexOf(":");var t="";if(m>=0){t="im:"+this.localAOR.substr(m+1)}else{t="im:"+this.localAOR}var w='<?xml version="1.0" encoding="UTF-8"?>\r\n<imdn xmlns="urn:ietf:params:xml:ns:imdn">\r\n<message-id>'+k+"</message-id>\r\n<datetime>"+x+"</datetime>\r\n<recipient-uri>"+t+"</recipient-uri>\r\n<original-recipient-uri>"+t+"</original-recipient-uri>\r\n<delivery-notification>\r\n<status><"+p+"/></status>\r\n</delivery-notification>\r\n</imdn>\r\n";var n="";n+="From: <"+this.localAOR+">\r\n";n+="To: <"+v[0]+">\r\n";n+="NS: imdn <urn:ietf:params:imdn>\r\n";n+="imdn.Message-ID:"+k+"\r\n";n+="Content-type: message/imdn+xml\r\n";n+="Content-Disposition: notification\r\n";n+="Content-Length:"+w.length+"\r\n\r\n";n+=w+"\r\n";console.info(n.length);if(v.length===1){o.setItem("Content-Type",new sip.Header("message/cpim","Content-Type"));o.setBody(n)}else{console.info("multiple dest")}s.sendRequest(o)};this.sendUpdatePresence=function(o,n,l,r){var q,p,k,m;clearTimeout(this.presenceRefreshTimer);if(n&&this.presencePendingUpdates.length>0){return}if(r&&!this.presenceEtag){return}if(o===true){console.info("sendUpdatePresence() Use a default online presence XML");o='<?xml version="1.0" encoding="UTF-8"?>\r\n<presence xmlns="urn:ietf:params:xml:ns:pidf" entity="'+this.localAOR+'">\r\n\t<tuple id="orca1">\r\n\t\t<status>\r\n\t\t\t<basic>open</basic>\r\n\t\t</status>\r\n\t\t<contact priority="0.8">'+this.localAOR+'</contact>\r\n\t\t<note xml:lang="en">Logged in with Orca ALU</note>\r\n\t\t<timestamp>'+(new Date()).toISOString()+"</timestamp>\r\n\t</tuple>\r\n</presence>\r\n"}else{if(o===false){console.info("sendUpdatePresence() Use a default offline presence XML");o='<?xml version="1.0" encoding="UTF-8"?>\r\n<presence xmlns="urn:ietf:params:xml:ns:pidf" entity="'+this.localAOR+'">\r\n\t<tuple id="orca1">\r\n\t\t<status>\r\n\t\t\t<basic>closed</basic>\r\n\t\t</status>\r\n\t\t<contact priority="0.8">'+this.localAOR+'</contact>\r\n\t\t<note xml:lang="en">Logged in with Orca ALU</note>\r\n\t\t<timestamp>'+(new Date()).toISOString()+"</timestamp>\r\n\t</tuple>\r\n</presence>\r\n"}}this.presencePendingUpdates.push(o);if(!l&&this.presencePendingUpdates.length>1){return}q=new sip.UserAgent(this.stack);q.remoteParty=new sip.Address(this.localAOR);q.localParty=new sip.Address(this.localAOR);p=q.createRequest("PUBLISH");k=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");k.value.uri.param.gr=this.session.mdsp.myOwnGruu;p.setItem("Contact",k);p.setItem("Event",new sip.Header("presence","Event"));p.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));p.setItem("Content-Type",new sip.Header((""+o).toLowerCase().indexOf("pidf-diff")>-1?"application/pidf-diff+xml":"application/pidf+xml","Content-Type"));if(this.presenceEtag){p.setItem("SIP-If-Match",new sip.Header(this.presenceEtag,"SIP-If-Match"))}if(o){p.setBody(o)}if(!n&&this.presenceEtag){this.presenceEtag=undefined}if(r){p.setItem("Expires",new sip.Header("0","Expires"))}else{if(this.presenceExpires>0){p.setItem("Expires",new sip.Header(""+this.presenceExpires,"Expires"))}}q.sendRequest(p)};this.receivedUpdatePresenceResponse=function(n,m){console.debug("Session.receivedUpdatePresenceResponse() response "+m.response);var p=this.presencePendingUpdates.shift(),l=this,o,k=0;if(p===undefined){console.warn("receivedUpdatePresenceResponse() Original request not found");p=""}if(m.is2xx()){o=m.getItem("SIP-ETag");if(o){this.presenceEtag=o.value}else{this.presenceEtag=undefined}o=m.getItem("Expires");if(o){k=parseInt(o.value);if(k>0){this.presenceExpires=k}}if(k>0&&this.presencePendingUpdates.length===0){this.presenceRefreshTimer=setTimeout(function(){l.sendUpdatePresence("",true)},((k>1200)?(k-600):(k/2))*1000)}this.session.onUpdatePresenceSuccess({name:SessionStatus.UPDATEPRESENCESUCCESS,content:p})}else{if(this.presencePendingUpdates.length===0){if(m.response===412&&this.presenceEtag!=undefined){this.presenceEtag=undefined;this.sendUpdatePresence(p,true);return}if(m.response===423){this.presenceExpires=parseInt(m.getItem("Min-Expires").value);this.sendUpdatePresence(p,true);return}}this.session.onUpdatePresenceFail({name:SessionStatus.UPDATEPRESENCEFAIL,content:p})}if(this.presencePendingUpdates.length>0){this.sendUpdatePresence(this.presencePendingUpdates[0],false,true)}};this.sendSubscribePresence=function(o,l){var n,m,k;n=new sip.UserAgent(this.stack);n.remoteParty=new sip.Address(o);n.localParty=new sip.Address(this.localAOR);m=n.createRequest("SUBSCRIBE");k=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");m.setItem("Contact",k);m.setItem("Event",new sip.Header("presence","Event"));m.setItem("Accept",new sip.Header("application/rlmi+xml, application/pidf+xml, application/pidf-diff+xml","Accept"));m.setItem("Supported",new sip.Header("eventlist","Supported"));m.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));if(l!=undefined){m.setItem("Expires",new sip.Header(""+l,"Expires"))}else{m.setItem("Expires",new sip.Header(""+this.presenceExpires,"Expires"))}n.sendRequest(m)};this.receivedSubscribePresenceResponse=function(l,o){console.debug("Session.receivedSubscribePresenceResponse() response "+o.response);var n=0;var s=o.getItem("Expires");if(s){n=parseInt(s.value)}var k,q,r,p,m;q=o.getItem("From").value.uri.toString();r=o.getItem("To").value.uri.toString();p=o.getItem("Call-ID").value;m=o.getItem("CSeq").value;console.log("receivedSubscribePresenceResponse(). from: "+q+", to: "+r+", callId: "+p+", cSeq: "+m);k={responseCode:o.responseText,from:q,to:r,callId:p,cSeq:m,expires:n};if(o.is2xx()){if(n>0){this.session.onSubscribePresenceSuccess(k)}else{this.session.onGetPresenceSuccess(k)}}else{if(n>0){this.session.onSubscribePresenceFailed(k)}else{this.session.onGetPresenceFailed(k)}}};this.receivedPresenceNotify=function(m,t){var w,x,u,o;w=t.getItem("From").value.uri.toString();x=t.getItem("To").value.uri.toString();u=t.getItem("Call-ID").value;o=t.getItem("CSeq").value;var q=this.session.getPresenceSubscription(w,u,o);if(!q){console.warn("receivedPresenceNotify() no subscribe found");m.sendResponse(m.createResponse(481,"Subscription does not exist"))}else{var s=m.createResponse(200,"OK");contact=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");s.setItem("Contact",contact);s.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));m.sendResponse(s);var l,p,k,y=null,v,n;p=t.getItem("Subscription-State").value;var k=parseInt(t.getItem("Content-Length").value);if(k>0){var r=t.getItem("Content-Type");if(r){y=r.value;v=r.type;n=r.boundary}}l={from:w,to:x,callId:u,cSeq:o,subscriptionState:p,contentLength:k,contentType:y,contentType_type:v,boundary:n};this.session.onPresenceNotify(t.body,l)}};this.createAndSendInviteRequest=function(s,q,l){console.debug("Call.createAndSendInviteRequest()");var m,o,k,r,n;if(s.pullCallInfo!=undefined){q.length=0;q.push(s.session.mdsp.getToUriForPull(s.pullCallInfo))}if(s.uaCall===null){s.uaCall=new sip.UserAgent(this.stack);if(q.length===1){s.uaCall.remoteParty=new sip.Address(q[0])}else{s.uaCall.remoteParty=new sip.Address(this.session.config.providerConfig.conferenceFactoryURI)}s.uaCall.localParty=new sip.Address(this.localAOR);if(this.config.providerConfig.breaker){s.uaCall.breaker=true}}if(s.restoredCall){s.uaCall.stack=this.stack}m=s.uaCall.createRequest("INVITE");if(s.pullCallInfo!=undefined){m.uri.user=s.session.mdsp.getRequestUriUserForPull()}s.callId=m.getItem("call-id").value;o=this.createContactHeader("INVITE");m.setItem("Contact",o);m.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));if(l!==undefined){if(q.length===1){m.setItem("Content-Type",new sip.Header("application/sdp","Content-Type"));m.setBody(l)}else{k=new c();for(r=0;r<q.length;r+=1){k.addResource({uri:q[r]})}n=new b();n.addPart({contentType:"application/sdp",data:l});n.addPart({contentType:"application/resource-lists+xml",contentDisposition:"recipient-list",data:k.toString()});m.setItem("Content-Type",new sip.Header("multipart/mixed;boundary="+n.getBoundary(),"Content-Type"));m.setItem("Require",new sip.Header("recipient-list-invite","Require"));m.setBody(n.toString())}}if(s.pullCallInfo!=undefined){var p=s.session.mdsp.getReplacesUriForPull(s.pullCallInfo);m.setItem("Replaces",new sip.Header(p,"Replaces"))}s.uaCall.sendRequest(m)};this.sendInviteResponse=function(o,p,m,l){console.debug("sendInviteResponse()");if(!o.uaCall){console.error("uaCall is null");return}if(p!==200){o.uaCall.sendResponse(o.uaCall.createResponse(p,m));return}var n,k;n=o.uaCall.createResponse(200,"OK");k=this.createContactHeader("200 OK");n.setItem("Contact",k);n.setItem("Content-Type",new sip.Header("application/sdp","Content-Type"));n.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));if(l!==undefined){n.setItem("Content-Type",new sip.Header("application/sdp","Content-Type"));n.setBody(l)}o.uaCall.sendResponse(n)};this.sendPageModeChatMessageResponse=function(o,n,l){console.debug("sendMessageResponse()");if(!o){console.error("uaCall is null");return}if(n!==200){o.sendResponse(o.createResponse(n,l));return}var m,k;m=o.createResponse(200,"OK");k=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");k.value.uri.param.gr=this.session.mdsp.myOwnGruu;m.setItem("Contact",k);m.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));o.sendResponse(m)};this.sendSmsMessageResponse=function(o,n,l){console.debug("sendSmsMessageResponse()");if(!o){console.error("uaCall is null");return}if(n!==200){o.sendResponse(o.createResponse(n,l));return}var m,k;m=o.createResponse(200,"OK");k=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");k.value.uri.param.gr=this.session.mdsp.myOwnGruu;m.setItem("Contact",k);m.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));o.sendResponse(m)};this.sendSmsIMDNMessageResponse=function(o,n,l){console.debug("sendSmsIMDNMessageResponse()");if(!o){console.error("uaCall is null");return}if(n!==200){o.sendResponse(o.createResponse(n,l));return}var m,k;m=o.createResponse(200,"OK");k=new sip.Header((new sip.Address(this.localAOR)).uri.toString(),"Contact");k.value.uri.param.gr=this.session.mdsp.myOwnGruu;m.setItem("Contact",k);m.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"));o.sendResponse(m)};this.getRouteHeader=function(l){var k=this.config.uri.split("/")[2].trim()+";transport="+this.transport;return new sip.Header("<sip:"+(l?l+"@":"")+k+";lr>","Route")};this.receivedInvite=function(m,n,o){console.debug("Call.receivedInvite");var k=n.first("From").value.uri.toString();var l={name:"invitation",callId:m.callId,from:k,sdp:n.body,uaCall:m,uaString:n.first("User-Agent").value};this.session.incomingSessionEvent(l)};this.receivedPageModeChatMessage=function(m,n){console.log("Call.received page mode chat message");var k=n.first("From").value.uri.toString();console.log("From: "+k);var l={name:"message",callId:m.callId,from:k,message:n.body,uaCall:m,uaString:n.first("User-Agent").value,contentType:n.getItem("Content-Type").value};this.session.incomingSessionEvent(l)};this.receivedSmsMessage=function(m,o){console.log("Call.receivedSmsMessage sms message");var k=o.first("From").value.uri.toString();var q=this.parseGetMessageBody(o.body);console.log("From: "+k);console.log("message: "+q);var n=this.parseGetMessageImdnID(m.request.body);var p=this.parseGetMessageDateTime(m.request.body);console.log("imdnMessageID: "+n);console.log("dateTime: "+p);var l={name:"message",callId:m.callId,from:k,message:q,uaCall:m,uaString:o.first("User-Agent").value,contentType:o.getItem("Content-Type").value,bodyContentType:"text/plain",imdnMessageID:n,dateTime:p};this.session.incomingSessionEvent(l)};this.receivedSmsIMDNMessage=function(m,n){console.log("Call.receivedSmsIMDNMessage sms imdn message");var k=n.first("From").value.uri.toString();console.log("From fromAddr: "+k);console.log("message: "+n.body);var p=this.parseGetMessageBody(n.body);var o=new Object();this.parseElemImdnMessage(p,o);console.log("xml messageId: "+o.messageId);console.log("xml datetime: "+o.datetime);console.log("xml status: "+o.status);var l={name:"message",callId:m.callId,from:k,message:n.body,uaCall:m,uaString:n.first("User-Agent").value,contentType:n.getItem("Content-Type").value,bodyContentType:"message/imdn+xml",messageBody:p,imdnMessageID:o.messageId,dateTime:o.datetime,status:o.status};this.session.incomingSessionEvent(l)};this.parseElemImdnMessage=function(l,p){if(window.DOMParser){var r=new DOMParser();var o=r.parseFromString(l,"application/xml");var m=o.getElementsByTagName("message-id")[0].childNodes[0].nodeValue;var q=o.getElementsByTagName("datetime")[0].childNodes[0].nodeValue;var n=o.getElementsByTagName("status")[0];this.cleanWhitespace(n);var k="";if(n.childNodes[0] instanceof Element){console.info("childNode is element");k=o.getElementsByTagName("status")[0].childNodes[0].tagName}else{if(n.childNodes[0] instanceof Text){console.info("childNodes is text")}}p.messageId=m;p.datetime=q;p.status=k;console.log("xml messageId: "+m);console.log("xml datetime: "+q);console.log("xml status: "+k)}};this.cleanWhitespace=function(l){for(var k=0;k<l.childNodes.length;k++){var m=l.childNodes[k];if(m.nodeType==3&&!/\S/.test(m.nodeValue)){m.parentNode.removeChild(m)}}};this.parseGetMessageBody=function(m){var l=m.indexOf("\r\n\r\n");var k="";if(l>=0){k=m.substr(l+4)}return k};this.parseGetMessageFrom=function(p){var q=p.indexOf("From:");var m="";var r="";if(q>=0){m=p.substr(q);var l=m.indexOf("\r\n");var o=m.substring(5,l).trim();console.info("fromStr: "+o);var k=o.indexOf("<");var n=o.indexOf(">");if(k>=0){r=o.substring(k+1,n)}else{r=o}}return r};this.parseGetMessageContentType=function(m){var n=m.indexOf("Content-type:");var l="";var o="";if(n>=0){l=m.substr(n);var k=l.indexOf("\r\n");o=l.substring(13,k)}return o};this.parseGetMessageImdnID=function(n){var m=n.indexOf("imdn.Message-ID:");var l="";var o="";if(m>=0){l=n.substr(m);var k=l.indexOf("\r\n");o=l.substring(16,k)}return o};this.parseGetMessageDateTime=function(l){var n=l.indexOf("DateTime:");var m="";var o="";if(n>=0){m=l.substr(n);var k=m.indexOf("\r\n");o=m.substring(9,k)}return o};this.receivedAck=function(k,n){console.debug("Call.receivedAck()");var m;var l=this.session.getCall(k.callId);if(l){if(n.body!==undefined&&n.body!==null){m={name:"confirmed",sdp:n.body}}else{m={name:"confirmed"}}l.incomingCallSessionEvent(m)}};this.receivedInfo=function(k,l){console.debug("receivedInfo() auto respond");k.sendResponse(k.createResponse(200,"OK"))};this.receivedNotify=function(k,n){var l=this.session.getCall(k.callId);if(!l){console.warn("receivedNotify() no call found");k.sendResponse(k.createResponse(200,"OK"));return}k.sendResponse(k.createResponse(200,"OK"));var m=n.getItem("event").value;switch(m){case"refer":break;case"conference":break;default:console.debug("receivedNotify() event not supported: "+m);break}};this.receivedBye=function(k,m){console.debug("Call.receivedBye()");var l=this.session.getCall(k.callId);if(!l){console.warn("receivedBye() no call found");return}if(l.uaCall){l.terminatedCallSessionEvent({name:CallStatus.DISCONNECTED});k.sendResponse(k.createResponse(200,"OK"))}};this.receivedInviteResponse=function(o,n,m){console.debug("Call.receivedInviteResponse() response "+m.response);var p,l,k;if(m.is1xx()){if(m.response!==100){console.debug("Call.receivedInviteResponse() Progressing [response = "+m.response+", text = "+m.responsetext+"]");if(m.response>=180){p={name:CallStatus.CONNECTING};o.ringingCallSessionEvent(p)}}return}if(!m.is2xx()){p={name:CallStatus.REJECTED};o.rejectedCallSessionEvent(p);return}p={name:CallStatus.CONNECTED};p.sdp=m.body;o.acceptedCallSessionEvent(p)};this.receivedPageModeMessageResponse=function(l,k){console.debug("Call.receivedPageModeMessageResponse() response "+k.response);event={callId:l.callId};if(!k.is2xx()){this.session.onPageModeChatMessageFailed(event)}else{this.session.onPageModeChatMessageSent(event)}};this.receivedSmsMessageResponse=function(l,k){console.debug("Call.receivedSmsMessageResponse() response "+k.response);var m=this.parseGetMessageImdnID(l.request.body);var n=this.parseGetMessageDateTime(l.request.body);var p=k.getItem("From").value.uri.toString();var o=k.getItem("To").value.uri.toString();console.log("imdnMessageID: "+m);console.log("dateTime: "+n);console.log("from: "+p);event={callId:l.callId,from:p,imdnMessageID:m,dateTime:n};if(!k.is2xx()){this.session.onSmsMessageFailed(event)}else{this.session.onSmsMessageSent(event)}};this.receivedSmsIMDNMessageResponse=function(l,k){console.debug("Call.receivedSmsIMDNMessageResponse() response "+k.response);var p=k.getItem("From").value.uri.toString();var o=k.getItem("To").value.uri.toString();console.log("from: "+p);var n=this.parseGetMessageBody(l.request.body);var m=new Object();this.parseElemImdnMessage(n,m);console.log("imdnMessageID: "+m.messageId);console.log("dateTime: "+m.datetime);console.log("status: "+m.status);event={callId:l.callId,from:p,imdnMessageID:m.messageId,dateTime:m.datetime,status:m.status};if(!k.is2xx()){this.session.onSmsIMDNMessageFailed(event)}else{this.session.onSmsIMDNMessageSent(event)}};this.receivedByeResponse=function(m,l,k){console.debug("receivedByeResponse()");var n={name:CallStatus.DISCONNECTED};m.terminatedCallSessionEvent(n)};this.doRefer=function(l,n,o){console.debug("doRefer() uri="+n+", isAdded="+o);if(l.uaCall===null){return}var m=l.uaCall.createRequest("REFER");var k=this.createContactHeader("REFER");m.setItem("Contact",k);if(this.userAgent){m.setItem("User-Agent",new sip.Header(this.userAgent,"User-Agent"))}if(o===true){m.setItem("Refer-To",new sip.Header(n,"Refer-To"))}else{m.setItem("Refer-To",new sip.Header("<"+n+";method=BYE>","Refer-To"))}l.uaCall.sendRequest(m)};this.doPush=function(l,k,m){this.doRefer(l,"<"+k+";gr="+m+">",true)};this.cancelled=function(k){console.debug("Call.cancelled()");var l=this.session.getCall(k.callId);if(l&&l.uaCall&&l.uaCall.servers[0]&&k===l.uaCall.servers[0].app){l.incomingCallSessionEvent({name:"canceled"})}else{console.warn("Call.canceled() Invalid User Agent for cancel")}};this.cancel=function(k){console.debug("Call.cancel()");if(k&&k.uaCall){k.uaCall.sendCancel()}else{console.warn("Call.cancel() user agent is not instancied")}};this.bye=function(k){console.debug("bye()");if(k&&k.uaCall){var l=k.uaCall.createRequest("BYE");k.uaCall.sendRequest(l)}else{console.warn("Call.bye() user agent is not instancied")}}}function c(f){var i="to",h="cc",e="bcc",g=[];this.parse=function(l){var k,o,n,p,m,j;if(window.DOMParser){p=new DOMParser();m=p.parseFromString(l,"text/xml");j=m.getElementsByTagName("entry");for(k=0;k<j.length;k+=1){o=false;if(j[k].getAttribute("cp:anonymize")==="true"){o=true}if(o!==true){n={uri:j[k].getAttribute("uri"),copyControl:j[k].getAttribute("cp:copyControl"),anonymous:o};g.push(n)}}}};this.addResource=function(j){if(j.copyControl===undefined){j.copyControl="to"}if(j.anonymous===undefined){j.anonymous=false}g.push(j)};this.getResources=function(){return g};this.delResource=function(l){var j,k;for(j=0;j<g.length;j+=1){k=g[j].uri;if(l.uri===k){g.splice(j,1);return}}};this.toString=function(){var k="",j=this.toXML();if(j.xml){k=j.xml}else{k=(new XMLSerializer()).serializeToString(j)}return k};this.toXML=function(){var m,r,j,q,p,k,n,o,l;m='<?xml version="1.0" encoding="UTF-8"?>';m=m+'<resource-lists xmlns="urn:ietf:params:xml:ns:resource-lists" xmlns:cp="urn:ietf:params:xml:ns:copyControl">';m=m+"<list>";m=m+"</list>";m=m+"</resource-lists>";if(window.DOMParser){j=new DOMParser();r=j.parseFromString(m,"text/xml")}else{r=new ActiveXObject("Microsoft.XMLDOM");r.async=false;r.loadXML(m)}for(q=0;q<g.length;q+=1){p=r.createElement("entry");k=document.createAttribute("uri");k.value=g[q].uri;p.setAttributeNode(k);n=document.createAttribute("cp:copyControl");n.value=g[q].copyControl;p.setAttributeNode(n);if(g[q].anonymous===true){o=document.createAttribute("cp:anonymize");o.value="true";p.setAttributeNode(o)}l=r.getElementsByTagName("list")[0];l.appendChild(p)}return r};if(f!==undefined){this.parse(f)}}function b(){var f,e=[];this.createBoundary=function(){var j="0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz",k=16,l="",h,g;for(h=0;h<k;h+=1){g=Math.floor(Math.random()*j.length);l+=j.substring(g,g+1)}return l};this.getBoundary=function(){return f};this.toString=function(){var h,g;h="";if(e.length!==0){h="--"+f+"\r\n";for(g=0;g<e.length;g+=1){h=h+"Content-Type: "+e[g].contentType;if(e[g].contentDisposition!==undefined){h=h+"\r\nContent-Disposition: "+e[g].contentDisposition}h=h+"\r\n\r\n";h=h+e[g].data;if(g===e.length-1){h=h+"\r\n--"+f+"--\r\n"}else{h=h+"\r\n--"+f+"\r\n"}}}return h};this.addPart=function(g){var h;if(g.contentType===undefined){h=new Error();h.message="Content-Type not defined";throw h}if(g.data===undefined){h=new Error();h.message="data not defined";throw h}e.push(g)};f=this.createBoundary()}function a(f,g,e){this.messageId=f;this.datetime=g;this.status=e}orcaALU.SipAdapter=d}());
 
 // orca/restAdapter.js
 (function(){function b(f,e,d,c,h){var g=null;this.userId=e;this.session=h;this.config=c;this.token=d;this.ws=f;this.registerURL="/vvoip/v1/user001/registrations";this.callURL="/vvoip/v1/user001/sessions";this.updateToken=function(i){console.debug("restAdapter.updateToken");this.token.key=i};this.regResourceURL=null;this.setSessionStatus=function(i){console.debug("RestAdapter.setSessionStatus() session status: "+i);this.session.setSessionStatus(i)};this.createSession=function(){console.debug("RestAdapter.createSession()");this.sendRegister();this.setSessionStatus(SessionStatus.CONNECTING)};this.terminateSession=function(){console.debug("RestAdapter.terminateSession()");this.setSessionStatus(SessionStatus.DISCONNECTED);this.ws.close()};this.createCallSession=function(k,j,i,l){console.debug("RestAdapter.createCallSession() to "+j);if(j.length===1){this.createVvoipSession(k,j[0],"Anonymous",i)}else{if(j.length>1){console.error("not support conference now");if(k){k.terminatedCallSessionEvent({name:CallStatus.DISCONNECTED})}return}else{console.error("address unsupported. "+typeof(j))}}};this.acceptCallSession=function(j,i){console.debug("RestAdapter.acceptCallSession()");if(j.uaCall.isOfferless){this.answerOfferlessVvoipSession(j,i);j.uaCall.isOfferless=false}else{this.answerVvoipSession(j,i)}this.updateVvoipSessionStatus(j,"Connected");j.incomingCallSessionEvent({name:"confirmed"})};this.rejectCallSession=function(j,k,i){console.debug("RestAdapter.rejectCallSession()");this.terminateVvoipSessoin(j)};this.cancelCallSession=function(i){console.debug("RestAdapter.cancelCallSession()");this.terminateVvoipSessoin(i)};this.terminateCallSession=function(i){console.debug("RestAdapter.terminateCallSession()");this.terminateVvoipSessoin(i)};this.cleanCallSession=function(i){console.debug("RestAdapter.cleanCallSession()")};this.sendResponse=function(k,l,j,i){console.debug("RestAdapter.sendResponse: "+l);if(l===180){this.updateVvoipSessionStatus(k,"Ringing")}else{if(l===200){this.acceptCallSession(k,i)}else{this.terminateVvoipSessoin(k)}}};this.sendRegister=function(){var j={vvoipRegistration:{userId:e,token:d.id}};var i=new a(this.ws);i.send("POST",this.registerURL,JSON.stringify(j));this.request=i};this.sendActiveQuery=function(){if(!this.regResourceURL||this.regResourceURL.length<1){console.error("Empty regResourceURL!");return}var i=new a(this.ws);if(this.regResourceURL.indexOf("ws")>-1){this.regResourceURL=this.regResourceURL.replace(/ws.*:\/\//,"/")}i.send("GET",this.regResourceURL+"/notifications")};this.createVvoipSession=function(l,n,k,j){var m={vvoipSession:{tParticipantAddress:n,tParticipantName:k,offer:{sdp:j}}};var i=new a(this.ws);i.send("POST",this.callURL,JSON.stringify(m));l.uaCall=i;l.callId=1};this.answerVvoipSession=function(l,j){var k={vvoipAnswer:{sdp:j}};if(!l.uaCall){var i=new a(this.ws);l.uaCall=i}l.uaCall.send("PUT",l.uaCall.callResourceURL,JSON.stringify(k))};this.answerOfferlessVvoipSession=function(l,k){var i={vvoipOffer:{sdp:k}};if(!l.uaCall){var j=new a(this.ws);l.uaCall=j}l.uaCall.send("PUT",l.uaCall.callResourceURL,JSON.stringify(i))};this.updateVvoipSessionStatus=function(k,i){if(!k||!k.uaCall||!k.uaCall.callResourceURL){console.error("no call to update");if(k){k.terminatedCallSessionEvent({name:CallStatus.DISCONNECTED})}return}var j={vvoipSessionStatus:{status:i}};k.uaCall.send("PUT",k.uaCall.callResourceURL,JSON.stringify(j))};this.terminateVvoipSessoin=function(i){if(!i||!i.uaCall||!i.uaCall.callResourceURL){console.warn("no call to terminate");if(i){i.terminatedCallSessionEvent({name:CallStatus.DISCONNECTED})}return}i.uaCall.send("DELETE",i.uaCall.callResourceURL)};this.received=function(m){var j=m.match(/HTTP\/1.1 (\d{3}) (.*)/);if(!j||j.length<3){console.error("Unexpected response: "+m);return}console.debug("received response: "+j[1]+" "+j[2]);var k;var i=null;if(m.indexOf("\r\n\r\n")!==-1){i=m.substring(m.indexOf("\r\n\r\n")+2)}if(i&&i.trim().length>2){k=JSON.parse(i)}else{console.debug("Empty payload");k=null}if(m.indexOf("Connection:")!==-1){this.sendActiveQuery();if(!k){console.debug("Empty notification");return}this.notifyCallback(k)}else{if(!k){var l=this.session.getCall(1);if(l){l.terminatedCallSessionEvent({name:CallStatus.DISCONNECTED})}return}if(k.vvoipRegistration){this.regResourceURL=k.vvoipRegistration.resourceURL;this.sendActiveQuery()}else{if(k.vvoipSession){var l=this.session.getCall(1);if(l&&l.uaCall){l.uaCall.callResourceURL=k.vvoipSession.resourceURL}}else{console.log("response: "+i)}}}};this.notifyCallback=function(j){console.debug("received vvoip event notification: "+j);if(j.vvoipRegEventNotification){console.debug("received vvoipRegEventNotification");if(j.vvoipRegEventNotification.eventType==="RegSuccess"){this.setSessionStatus(SessionStatus.CONNECTED)}else{this.setSessionStatus(SessionStatus.DISCONNECTED)}return}else{if(j.vvoipSessionInvitationNotification){console.debug("received vvoipSessionInvitationNotification");var i=new a(this.ws);i.callResourceURL=j.vvoipSessionInvitationNotification.link.href;var m;if(j.vvoipSessionInvitationNotification.offer&&j.vvoipSessionInvitationNotification.offer.sdp){m={name:"invitation",callId:1,from:j.vvoipSessionInvitationNotification.originatorAddress,sdp:j.vvoipSessionInvitationNotification.offer.sdp,uaCall:i}}else{i.isOfferless=true;m={name:"invitation",callId:1,from:j.vvoipSessionInvitationNotification.originatorAddress,uaCall:i}}this.session.incomingSessionEvent(m);var k=this.session.getCall(1);if(k){k.uaCall=i}else{console.error("call is null")}return}}var l=this.session.getCall(1);if(!l||!l.uaCall){console.warn("no active call to receive call notification");return}if(j.vvoipEventNotification){if(j.vvoipEventNotification.eventType==="SessionEnded"){console.debug("received SessionEnded");l.terminatedCallSessionEvent({name:CallStatus.DISCONNECTED})}else{if(j.vvoipEventNotification.eventType==="Cancelled"){console.debug("received Cancelled");l.terminatedCallSessionEvent({name:CallStatus.CANCELED})}else{if(j.vvoipEventNotification.eventType==="Declined"){console.debug("received Declined");l.rejectedCallSessionEvent({name:CallStatus.REJECTED})}else{if(j.vvoipEventNotification.eventType==="Ringing"){console.debug("received Ringing");l.ringingCallSessionEvent({name:CallStatus.CONNECTING})}else{console.warn("received unknown vvoipEventNotification!")}}}}}else{if(j.vvoipAcceptanceNotification){console.debug("received vvoipAcceptanceNotification");var m={name:CallStatus.CONNECTED,sdp:j.vvoipAcceptanceNotification.answer.sdp};l.acceptedCallSessionEvent(m)}else{if(j.vvoipOfferNotification){console.debug("received vvoipOfferNotification");var m={name:"invitation",sdp:j.vvoipOfferNotification.offer.sdp};l.incomingCallSessionEvent(m)}else{if(j.vvoipAnswerNotification){console.debug("received vvoipAnswerNotification");var m={name:"confirmed",sdp:j.vvoipAnswerNotification.answer.sdp};l.incomingCallSessionEvent(m)}else{console.debug("received unknown notification!")}}}}}}function a(c){var d={Accept:"application/json","Content-Type":"application/json"};var e=d;this.callResourceURL=null;this.ws=c;this.request=null;this.method="";this.response=null;this.responseJson=null;this.status=null;this.statusText="";this.isOfferless=false;this.setRequestHeader=function(g,f){e[g]=f};this.send=function(j,f,i){if(j==="GET"||j==="DELETE"){i=null}this.method=j;headerStr="";for(var g in e){headerStr+=g+": "+e[g]+"\r\n"}text=j+" "+f+" HTTP/1.1\r\n";text+=headerStr;if(i!==null){text+="\r\n";text+=i}console.debug("ws send:\r\n"+text);this.ws.send(text)}}orcaALU.RestAdapter=b}());
Index: orca_version.js
===================================================================
--- orca_version.js	(revision 62)
+++ orca_version.js	(working copy)
@@ -1 +1 @@
-var orcaVersion = "27.11.00:1435241426 spwl";
+var orcaVersion = "27.11.00:1441236612 spwl hackathon01";
Index: orcaALU.js
===================================================================
--- orcaALU.js	(revision 62)
+++ orcaALU.js	(working copy)
@@ -913,6 +913,39 @@
         	 this.calls.push(pageModeChat);
         	 pageModeChat.sendMessage();
          };
+         
+         /**
+         * Creates a new sms message instance for communication with the specified recipient
+         * @param {string} to The user identifier of the chat invitee. In Orca ALU, this is the user's public ID.
+         * @param {string} message The message content user sent
+         * @param {Object} smsIMDNMessageInfo Message attributes
+         */
+         this.sendSmsMessage = function (to, message, smsIMDNMessageInfo) {
+         	var imdnMessageID = generateImdnMessageID(9);
+         	var dateTime = ISODateString(new Date());
+         	console.info("generate imdnMessageID:" + imdnMessageID);
+         	console.info("ISO dateTime:" + dateTime);
+         	
+			var smsMessage = new SmsMessage(to, this, imdnMessageID, dateTime, message);
+			this.calls.push(smsMessage);
+			smsMessage.sendMessage();
+			smsIMDNMessageInfo.setSmsIMDNMessageID(imdnMessageID);
+			smsIMDNMessageInfo.setDateTime(dateTime);
+         };
+         
+         /**
+         * Creates a new IMDN message instance for communication with the specified recipient
+         * @param {string} to The user identifier of the chat invitee. In Orca ALU, this is the
+         * @param {string} imdnMessageID The message ID
+         * @param {string} status The message sent status
+         * @param {string} dateTime The message sent time
+         * user's public ID.
+         */
+         this.sendSmsIMDNMessage = function (to, imdnMessageID, status, dateTime) {
+			var smsIMDNMessage = new SmsIMDNMessage(to, this, imdnMessageID, status, dateTime);
+			this.calls.push(smsIMDNMessage);
+			smsIMDNMessage.sendMessage();
+         };
 
 
         /**
@@ -1199,7 +1232,109 @@
 			}
 		}
 
+		/**
+		* @summary Triggered when a sms message is sent to the callee successfully
+		* @event
+		* @param {Event} evt event
+		*/		
+		this.onSmsMessageSent = function (evt) {
+			console.info("call onSmsMessageSent");
+			var call = this.getCall(evt.callId);
+			if (call === null) {
+				console.warn("Session received a SIP response for an unknown sms message. Ignore it.");
+				return;
+			}
+			
+			var event = {to: call.to, from: evt.from, imdnMessageID: evt.imdnMessageID, dateTime: evt.dateTime, status:evt.status};
+			console.info("call.to: " + call.to);
+			console.info("evt.from: " + evt.from);
+			console.info("call.message: " + call.message);
+			this.callback.onSmsMessageSent(call.message, event);
+			
+			for(var i=0; i < this.calls.length; i++) {
+				if(this.calls[i].callId === call.callId){
+					this.calls.splice(i, 1);
+					break;
+				}
+			}
+		}
+
+		/**
+		* @summary Triggered when a sms message fails to be sent to the callee
+		* @event
+		* @param {Event} evt event
+		*/
+		this.onSmsMessageFailed = function (evt) {
+			var call = this.getCall(evt.callId);
+			var imdnMessageID = evt.imdnMessageID;
+			if (call === null) {
+				console.warn("Session received a SIP response for an unknown sms message. Ignore it.");
+				return;
+			}
+			var event = {to: call.to, imdnMessageID:imdnMessageID};
+			console.info("call.message: " + call.message);
+			this.callback.onSmsMessageFailed(call.message, event);
+			
+			for(var i=0; i < this.calls.length; i++) {
+				if(this.calls[i].callId === call.callId){
+					this.calls.splice(i, 1);
+					break;
+				}
+			}
+		}
 		
+		/**
+		* @summary Triggered when a sms IMDN message is sent to the callee successfully
+		* @event
+		* @param {Event} evt event
+		*/	
+		this.onSmsIMDNMessageSent = function (evt) {
+			var call = this.getCall(evt.callId);
+			if (call === null) {
+				console.warn("Session received a SIP response for an unknown sms imdn message. Ignore it.");
+				return;
+			}
+
+			var event = {from: evt.from, imdnMessageID: evt.imdnMessageID, dateTime: evt.dateTime, status:evt.status};
+			console.info("call.to: " + call.to);
+			console.info("evt.from: " + evt.from);
+			this.callback.onSmsIMDNMessageSent(event);
+			
+			for(var i=0; i < this.calls.length; i++) {
+				if(this.calls[i].callId === call.callId){
+					this.calls.splice(i, 1);
+					break;
+				}
+			}
+		}
+		
+		/**
+		* @summary Triggered when a sms IMDN message fails to be sent to the callee
+		* @event
+		* @param {Event} evt event
+		*/
+		this.onSmsIMDNMessageFailed = function (evt) {
+			console.info("call onSmsIMDNMessageFailed");
+			var call = this.getCall(evt.callId);
+			var imdnMessageID = evt.imdnMessageID;
+			if (call === null) {
+				console.warn("Session received a SIP response for an unknown sms imdn message. Ignore it.");
+				return;
+			}
+			
+			var event = {from: evt.from, imdnMessageID: evt.imdnMessageID, dateTime: evt.dateTime, status:evt.status};
+			console.info("call.to: " + call.to);
+			console.info("evt.from: " + evt.from);
+			this.callback.onSmsIMDNMessageFailed(event);
+			
+			for(var i=0; i < this.calls.length; i++) {
+				if(this.calls[i].callId === call.callId){
+					this.calls.splice(i, 1);
+					break;
+				}
+			}
+		}
+		
         /**
         * Triggered when presence information is received.
         * This is a callback function that needs to be implemented 
@@ -1367,6 +1502,20 @@
 					call.getCallImp().incomingCallSessionEvent(evt);
 				}
 				else if (evt.name === 'message'){
+					if (evt.contentType === 'message/cpim') {
+						//sms message or imdn message: imdn:message/imdn+xml												
+						if (evt.bodyContentType === 'message/imdn+xml') {
+							//receive imdn message							
+							this.adapter.sendSmsIMDNMessageResponse(evt.uaCall, 200);// send 200OK for receiving IMDN message
+							var event = {callId: evt.callId, from: evt.from, message: evt.message, imdnMessageID: evt.imdnMessageID, dateTime: evt.dateTime, status: evt.status};
+							this.callback.onIncomingSmsIMDNMessage(event);
+						} else {
+							//receive sms message
+							this.adapter.sendSmsMessageResponse(evt.uaCall, 200);// check parameter, if error send 4xx/5xx
+							this.callback.onIncomingSmsMessage(evt);
+						}
+						return;						
+					}
 					this.adapter.sendPageModeChatMessageResponse(evt.uaCall, 200);
 					//Nothing to do if it is indication message
 					if (evt.contentType === 'application/im-iscomposing+xml' &&
@@ -1623,8 +1772,8 @@
 		this.telephoneEvent = null;
 		this.crypto = null;
 
-		this.inviteCount = 0 ;
-		this.initialHoldOffer = false ;
+		this.inviteCount = 0;
+		this.initialHoldOffer = false;
 
 		/*
 		 * MSID semantic
@@ -2166,7 +2315,7 @@
 //				for (var i=0; i < fileSelector.length; i++) {
 //					console.log("file-selector " + i + ": " + fileSelector[i] + "\n");
 //				}
-				fileName = fileSelector[1];
+				fileName = decodeURIComponent(fileSelector[1]);
 				fileType = fileSelector[2];
 				console.log("parsed file-selector name: " + fileName + ", type: " + fileType);
 			}
@@ -2402,11 +2551,11 @@
 
 			switch ( self.session.config.providerConfig.msidHandling ) {
 			case '0':
+				/* With this setting, 'ssrc mapping' must also be disabled in SBLP profile. */
 				console.debug("updateMSID(), msidHandling is 'Strip Incoming MSID (default)'.\n") ;
 				sdp=sdp.replace(/a=msid-semantic.*\r\n/g, "");
 				sdp=sdp.replace(/a=ssrc:.* label:.*\r\n/g, "") ; console.debug("a=ssrc.* label:.* -removed") ;
 				sdp=sdp.replace(/a=ssrc:.* mslabel:.*\r\n/g, "") ; console.debug("a=ssrc.* mslabel:.* -removed") ;
-				sdp=sdp.replace(/a=ssrc:.* msid:.*\r\n/g, "") ; console.debug("a=ssrc.* msid:.* -removed") ;
 				return sdp;
 			case '1':
 				break;
@@ -2511,6 +2660,63 @@
 			return sdp ;
 
 		}
+		
+		/**
+		 * @summary Return whether an SDP has the given direction at all levels (session and media), or for the media specified
+		 * @param {string} sdp The SDP to check
+		 * @param {string} direction The direction to check for. Can be 'sendrecv', 'sendonly', 'recvonly', or 'inactive'.
+		 * @param {string} media The specific media type to check (optional)
+		 * @private
+		 */
+		this.sdpHasDirection = function (sdp, direction, media) {
+			var m, i, hasSessionAttribute,
+				other = ['\r\na=sendrecv', '\r\na=sendonly', '\r\na=recvonly', '\r\na=inactive'];
+			if (typeof sdp === 'string') {
+				for (i = 0; i < other.length; i += 1) {
+					if (other[i].slice(4) === direction) {
+						other.splice(i, 1);
+						break;
+					}
+				}
+				if (other.length === 4) {
+					console.warn('sdpHasDirection() Invalid direction ' + direction);
+					return false;
+				}
+				function hasDirection(str) {
+					return (str.indexOf('\r\na=' + direction) > -1);
+				}
+				function hasOther(str) {
+					return (str.indexOf(other[0]) > -1 || str.indexOf(other[1]) > -1 || str.indexOf(other[2]) > -1);
+				}
+				m = sdp.split('\r\nm=');
+				// Check session attribute
+				hasSessionAttribute = hasDirection(m[0]) || (direction === 'sendrecv' && !hasOther(m[0]));
+				if (m.length === 1) {
+					if (media) {
+						return undefined;
+					}
+					return hasSessionAttribute;
+				}
+				if (!media && !hasSessionAttribute && hasOther(m[0])) {
+					return false;
+				}
+				// Check media attributes
+				for (i = 1; i < m.length; i += 1) {
+					if (media) {
+						if (m[i].indexOf(media) === 0) {
+							return (hasSessionAttribute ? !hasOther(m[i]) : hasDirection(m[i]));
+						}
+					} else if (hasSessionAttribute ? hasOther(m[i]) : !hasDirection(m[i])) {
+						return false;
+					}
+				}
+				if (media) {
+					return undefined;
+				}
+				return true;
+			}
+			return false;
+		};
 
 		/**
 		* @summary Internal function called when a stable state is entered by the browser (to allow for multiple AddStream calls or
@@ -2710,9 +2916,12 @@
 		 * @private
 		 */
 		this.onRTCPeerConnectionOnIceCandidate = function (evt) {
+			var cc;
 			if (evt.candidate === null) {
 				console.debug("Call.onRTCPeerConnectionIceCandidate() end of candidates [status = " + self.callStatus + ", callDirection = " + self.callDirection + ", activeCall = " + self.activeCall + "]");
-				if ((self.callStatus === self.CallStatus.PREPARING_OFFER) || (self.callStatus === self.CallStatus.PREPARING_ANSWER)) {
+				if ((self.callStatus === self.CallStatus.PREPARING_OFFER || self.callStatus === self.CallStatus.PREPARING_ANSWER)
+						&& (!self.session.config.providerConfig.useFirstCandidate || !self.gotFirstCandidate)) {
+					self.gotFirstCandidate = true;
 					self.waitingIce = false;
 					self.markActionNeeded();
 				} else {
@@ -2724,10 +2933,20 @@
 					", callDirection = " + self.callDirection +
 					", activeCall = " + self.activeCall + "]");
 
-				if (self.session.config.providerConfig.useFirstCandidate
+				if (self.session.config.providerConfig.useFirstCandidate && !self.gotFirstCandidate
 						&& (self.callStatus === self.CallStatus.PREPARING_OFFER || self.callStatus === self.CallStatus.PREPARING_ANSWER)) {
-					self.waitingIce = false;
-					self.markActionNeeded();
+					if (self.session.config.providerConfig.removeIPV6Candidates) {
+						cc = evt.candidate.candidate.split(' ');
+						if (cc[4] && cc[4].indexOf(':') < 0) {
+							self.gotFirstCandidate = true;
+							self.waitingIce = false;
+							self.markActionNeeded();
+						}
+					} else {
+						self.gotFirstCandidate = true;
+						self.waitingIce = false;
+						self.markActionNeeded();
+					}
 				}
 			}
 		};
@@ -4807,7 +5026,7 @@
 		 */
 		this.updateSDPForTempWorkarounds = function (sdp, type) {
 			console.debug("updateSDPForTempWorkarounds(). type=" + type);
-			var outsdp, idx, changed ;
+			var outsdp, idx, changed, rtpmap, mstart;
 			if (RTCSessionDescription && sdp instanceof RTCSessionDescription) {
 				outsdp = sdp.sdp;
 			} else if (window.SessionDescription && sdp instanceof SessionDescription) {
@@ -4842,20 +5061,28 @@
 			}
 			//changing rtpmap number in re-INVITE seems causing Chrome error. Currently only for telephone-event
 			if(type === 'offer'){
-				var rtpmap = outsdp.match(/a=rtpmap:(\d+) telephone-event/);
+				rtpmap = outsdp.match(/a=rtpmap:(\d+) telephone-event/);
 				console.debug("this.telephoneEvent=" + this.telephoneEvent);
 				if(rtpmap && rtpmap.length > 1){
 					if(this.telephoneEvent){
 						console.debug('this.telephone-event: ' + this.telephoneEvent + ' and rtpmap in SDP is: ' + rtpmap);
-						// if the telephone-event payload type number is used by other codec, remove it for now.
-						if(this.telephoneEvent!==rtpmap[1]){
-							if(outsdp.indexOf('a=rtpmap:'+this.telephoneEvent) !== -1){
-								outsdp = outsdp.replace(' '+this.telephoneEvent, '');
-								outsdp = outsdp.replace(new RegExp('a=rtpmap:'+this.telephoneEvent+'.*\r\n'), '');
+						if (this.telephoneEvent !== rtpmap[1]) {
+							if (outsdp.indexOf('\r\na=rtpmap:' + this.telephoneEvent) > -1) {
+								// If the telephone-event payload type number is used by other codec, replace with an available dynamic payload type
+								for (idx = 96 ; idx <= 127; idx += 1) {
+									if (outsdp.indexOf('a=rtpmap:' + idx) < 0 && idx !== this.telephoneEvent) {
+										mstart = '(\r\nm=[a-zA-Z]+ [0-9]+ [\/a-zA-Z]+[ 0-9]* )' + this.telephoneEvent + '( |\r\n)([ 0-9]*\r?\n?)';
+										outsdp = outsdp.replace(new RegExp(mstart, 'g'), '$1' + idx + '$2$3')
+											.replace(new RegExp('\r\na=rtpmap:' + this.telephoneEvent, 'g'), '\r\na=rtpmap:' + idx)
+											.replace(new RegExp('\r\na=fmtp:' + this.telephoneEvent, 'g'), '\r\na=fmtp:' + idx);
+										break;
+									}
+								}
 							}
-							outsdp = outsdp.replace(' '+rtpmap[1], ' '+this.telephoneEvent);
-							outsdp = outsdp.replace('a=rtpmap:'+rtpmap[1], 'a=rtpmap:'+this.telephoneEvent);
-							outsdp = outsdp.replace('a=fmtp:'+rtpmap[1], 'a=fmtp:'+this.telephoneEvent);
+							mstart = '(\r\nm=[a-zA-Z]+ [0-9]+ [\/a-zA-Z]+[ 0-9]* )' + rtpmap[1] + '( |\r\n)([ 0-9]*\r?\n?)';
+							outsdp = outsdp.replace(new RegExp(mstart, 'g'), '$1' + this.telephoneEvent + '$2$3')
+								.replace(new RegExp('\r\na=rtpmap:' + rtpmap[1], 'g'), '\r\na=rtpmap:' + this.telephoneEvent)
+								.replace(new RegExp('\r\na=fmtp:' + rtpmap[1], 'g'), '\r\na=fmtp:' + this.telephoneEvent);
 							changed = true;
 						}
 					}
@@ -5045,14 +5272,14 @@
 							addlines += 'a=dcsa:' + payloadtype + ':0 path:' + this.msrpFromPath + '\r\n';
 						}
 					}
-                    if (this.msrpFile && !(/a=dcsa:[^\s]* file-selector:/).test(m[i])) {
-                        fname = this.msrpFile.name || 'file';
-                        fsize = this.msrpFile.size || 0;
-                        ftype = this.msrpFile.type || 'application/octet-stream';
-                        addlines += 'a=dcsa:' + payloadtype + ':0 file-selector:name:"'
-                                + fname + '" type:' + ftype + ' size:' + fsize + '\r\n';
-                        //TODO hash value
-                    }
+					if (this.msrpFile && !(/a=dcsa:[^\s]* file-selector:/).test(m[i])) {
+						fname = encodeURIComponent(this.msrpFile.name || 'file');
+						fsize = this.msrpFile.size || 0;
+						ftype = this.msrpFile.type || 'application/octet-stream';
+						addlines += 'a=dcsa:' + payloadtype + ':0 file-selector:name:"'
+								+ fname + '" type:' + ftype + ' size:' + fsize + '\r\n';
+						//TODO hash value
+					}
 					if (m[i].indexOf('a=connection:new') < 0) {
 						addlines += 'a=connection:new\r\n';
 					}
@@ -5080,6 +5307,34 @@
 			}
 			return sdp;
 		};
+
+		/**
+		* Modify SDP of initial hold
+		* @private
+		*/
+		this.updateSDPInitialHold = function (sdp) {
+			var m, i, a, changed;
+			// If session description has a=sendonly, but media descriptions omit it, Chrome responds with sendrecv.
+			// Force explicit sendonly in media descriptions so Chrome should respond with recvonly.
+			m = sdp.split('\r\nm=');
+			for (i = 1; i < m.length; i += 1) {
+				if (m[i].indexOf('\r\na=sendonly') < 0) {
+					a = m[i].indexOf('\r\na=');
+					if (a < 0) {
+						a = m[i].indexOf('\r\n');
+					}
+					m[i] = m[i].slice(0, a) + '\r\na=sendonly' + m[i].slice(a);
+					changed = true;
+				}
+			}
+			if (changed) {
+				sdp = m.join('\r\nm=');
+				console.debug('updateSDPInitialHold() SDP has been updated:' + sdp);
+			} else {
+				console.debug('updateSDPInitialHold() No change');
+			}
+			return sdp;
+		};
 		
 		/**
 		* Update SDP media description with a bandwidth value
@@ -5277,7 +5532,9 @@
 		* @summary Notifies call event. Called by adapter
 		*/
 		this.incomingCallSessionEvent = function(evt) {
-			var event, res, sdp, comm;
+			var event, res, sdp, comm,
+				offerMLineCount, answerMLineCount, offerHasRemovedVideo,
+				answerHasRemovedVideo, currentInviteSendOnly, previousResponseRecvOnly;
 			console.debug("Call.incomingCallSessionEvent() event: " + evt.name + " status: " + this.callStatus);
 			//received ACK. no ACK for REST, needs to be called internally in restAdapter
 			if(evt.name === 'confirmed'){
@@ -5349,10 +5606,8 @@
 
 			//received INVITE or REST call
 			if (this.session.config.providerConfig.confWorkaroundChrome) {
-				this.inviteCount = this.inviteCount + 1 ; 
-				console.log("doing inviteCounting.inviteCount ="+this.inviteCount) ;
+				this.inviteCount += 1;
 			}
-			
 			this.callDirection = this.CallDirection.INCOMING;
 			if ((this.callStatus === this.CallStatus.IDLE) || ((this.activeCall === true) && 
 				(this.callStatus === this.CallStatus.CONFIRMED || 
@@ -5374,14 +5629,7 @@
 					// save current media direction
 					old_audioMediaDirection = this.audioMediaDirection;
 					old_videoMediaDirection = this.videoMediaDirection;
-					
-					if (this.session.config.providerConfig.confWorkaroundChrome) {
-						if(this.inviteCount == 1) {
-							this.initialHoldOffer = this.sdpOffer.indexOf("a=sendonly") == -1 ? false:true ;
-							console.debug("this.initialHoldOffer = " + this.initialHoldOffer) ;
-						}
-					}
-					
+
 					res = this.parseSDP();
 					if (res === false) {
 						console.warn("Call.receivedInvite() received a SDP offer with unsupported media");
@@ -5388,6 +5636,17 @@
 						this.session.sendResponse(this, 488, 'Not Acceptable Here');
 						return;
 					}
+ 					if (this.session.config.providerConfig.confWorkaroundChrome
+							&& this.inviteCount === 1 && typeof this.mediaTypes === 'string'
+ 							&& (this.mediaTypes.indexOf('audio') > -1 || this.mediaTypes.indexOf('video') > -1)) {
+ 						this.initialHoldOffer = this.sdpHasDirection(this.sdpOffer, 'sendonly');
+ 						if (this.initialHoldOffer) {
+ 							// This might be a conference invite with an initial hold.
+ 							// Expect one or two reINVITEs, the last of which will be an unhold.
+ 							console.log('Conference workaround: First invte.');
+ 							this.sdpOffer = this.updateSDPInitialHold(this.sdpOffer);
+ 						}
+ 					}
 					if (this.session.config.providerConfig.addCodecs) {
 						this.sdpOffer = this.updateSDPAddCodecs(this.sdpOffer);
 					}
@@ -5408,28 +5667,55 @@
 					}
 					this.sdpOffer = undefined;
 				}
+				if (this.session.config.providerConfig.dtmfWorkaround && !this.isSendingDtmf) {
+					// Workaround for MRF DTMF
+					comm = this.sdpOffer ? this.sdpOffer.match(/\r\na=rtpmap:(\d+) telephone-event/) : false;
+					if (comm) {
+						if (this.sdpHasDirection(this.sdpOffer, 'sendonly', 'audio') || this.sdpHasDirection(this.sdpOffer, 'inactive', 'audio')) {
+							this.sdpOffer = this.sdpOffer
+								.replace(new RegExp('(\\r\\nm=[a-zA-Z]+ [0-9]+ [a-zA-Z/]+[0-9 ]*) ' + comm[1] + '(\\r\\n| [0-9 ]+\\r\\n)'), '$1$2')
+								.replace(new RegExp('\\r\\na=rtpmap:' + comm[1] + '.*'), '')
+								.replace(new RegExp('\\r\\na=fmtp:' + comm[1] + '.*'), '');
+						} else {
+							this.isSendingDtmf = true;
+						}
+					}
+				}
 				//re-INVITE
-				if (this.activeCall === true) {					
-					if (this.session.config.providerConfig.confWorkaroundChrome) {
-						console.debug("this.initialHoldOffer = " + this.initialHoldOffer) ;
-
+				if (this.activeCall === true) {
+					if (this.session.config.providerConfig.confWorkaroundChrome && this.initialHoldOffer) {
 						// scenario (different # of m= lines): 1st INVITE has just audio, 2nd INVITE has m=video with port 0
-						var offerMLineCount = this.sdpOffer.split("\r\nm=").length ; 
-						console.debug("offerMLineCount = " + offerMLineCount) ;
-						var answerMLineCount = this.pc.localDescription.sdp.split("\r\nm=").length ; 
-						console.debug("answerMLineCount = " + answerMLineCount) ;
-
+						offerMLineCount = (typeof this.sdpOffer === 'string') ? this.sdpOffer.split('\r\nm=').length : 0;
+						answerMLineCount = this.pc.localDescription.sdp.split('\r\nm=').length;
+						
 						// scenario (same # of m= lines): 1st INVITE has just audio+video (both vlid ports), 2nd INVITE has m=video with port 0
-						var offerHasRemovedVideo = this.sdpOffer.indexOf("m=video 0 ") != -1? true: false ; console.debug("offerHasRemovedVideo = " + offerHasRemovedVideo) ;
-						var answerHasRemovedVideo = this.pc.localDescription.sdp.indexOf("m=video 0 ") != -1? true: false ; console.debug("answerHasRemovedVideo = " + answerHasRemovedVideo) ;
-						if (this.inviteCount >= 1 && this.initialHoldOffer && answerMLineCount == offerMLineCount && offerHasRemovedVideo == answerHasRemovedVideo) {
-							console.log("doing inviteCounting. Not doing setRemote/createAnswer, instead sending 200OK with p earlier answer as this seems like a conf scenario") ;
-							sdp = this.updateSDPForDTLS(this.pc.localDescription.sdp, 'outgoing');
-							this.session.adapter.sendResponse(this, 200, 'OK', sdp);
-							this.initialHoldOffer = 0;
-							return;
+						offerHasRemovedVideo = (typeof this.sdpOffer === 'string' && this.sdpOffer.indexOf('m=video 0 ') > -1);
+						answerHasRemovedVideo = this.pc.localDescription.sdp.indexOf('m=video 0 ') > -1;
+						
+						if (answerMLineCount === offerMLineCount && offerHasRemovedVideo === answerHasRemovedVideo) {
+							currentInviteSendOnly = this.sdpHasDirection(this.sdpOffer, 'sendonly');
+							previousResponseRecvOnly = this.sdpHasDirection(this.pc.localDescription.sdp, 'recvonly');
+							if (!currentInviteSendOnly) {
+								// First non-hold offer. Resume normal call flow for reINVITEs after this.
+								this.initialHoldOffer = false;
+							}
+							if (!previousResponseRecvOnly || currentInviteSendOnly) {
+								// Send 200OK without renegotiation to all consecutive hold offers after the initial one.
+								// If the previous response was recvonly, renegotiate when the first non-hold offer is received.
+								// Otherwise, send 200OK without renegotiation to the first non-hold offer.
+								console.log('Conference workaround: Not doing setRemote/createAnswer, instead sending 200OK with earlier answer.'
+										+ ' (invteCount=' + this.inviteCount + ', continue=' + this.initialHoldOffer + ')');
+								sdp = this.updateSDPForDTLS(this.pc.localDescription.sdp, 'outgoing');
+								this.session.adapter.sendResponse(this, 200, 'OK', sdp);
+								return;
+							}
+						} else {
+							// Some other type of offer. Resume normal call flow for reINVITEs after this.
+							this.initialHoldOffer = false;
 						}
-					}					
+						console.log('Conference workaround: Do setRemote/createAnswer.'
+								+ ' (invteCount=' + this.inviteCount + ', continue=' + this.initialHoldOffer + ')');
+					}
 					if (this.oldMediaTypes) {
 						if (this.oldMediaTypes.indexOf('video') === -1 && this.mediaTypes.indexOf('video') !== -1) {
 							console.debug('receivedInvite(): upgrade');
@@ -5754,7 +6040,7 @@
 					// Reliable Data Channels not yet supported in Chrome
 					//Raju
 					//this.dataChannel = this.pc.createDataChannel("orcaDataChannel", {reliable: false});
-					this.dataChannel = this.pc.createDataChannel("", {reliable: false, negotiated: true});
+					this.dataChannel = this.pc.createDataChannel('orcaDataChannel', {reliable: false, negotiated: true});
 					this.dataChannel.onopen = this.onDataChannelOnOpen;
 					this.dataChannel.onclose = this.onDataChannelOnClose;
 					this.dataChannel.onmessage = this.onDataChannelOnMessage;
@@ -5916,8 +6202,85 @@
 		};
 	}
 
+	/**
+	* @summary Provides access to methods for managing an outgoing sms message
+	* @Constructor
+	* @memberOf orcaALU
+	*/
+	function SmsMessage(to, session, imdnMessageID, dateTime, message) {
+		this.to = to;
+		this.session = session;
+		this.message = message;
+		this.callId = null;
+		this.targetAOR = (typeof to == 'string' ? [to] : to);
+		this.imdnMessageID = imdnMessageID;
+		this.dateTime = dateTime;
 
+        /**
+        * Send a textual message to the other sms message participant. 
+        * @param {string} message The message content to send
+        * @param {string} imdnMessageID The message to send
+        */
+		this.sendMessage = function () {
+			console.log("sending message: " + this.message + ", targetAOR: " + this.targetAOR);
+			this.session.adapter.sendSmsMessage(this, this.targetAOR, this.imdnMessageID, this.dateTime, this.message);
+		};
+	}
+	
 	/**
+	* @summary Provides access to methods for managing an outgoing sms IMDN message
+	* @Constructor
+	* @memberOf orcaALU
+	*/
+	function SmsIMDNMessage(to, session, imdnMessageID, status, dateTime) {
+		this.to = to;
+		this.session = session;
+		this.imdnMessageID = imdnMessageID;
+		this.callId = null;
+		this.targetAOR = (typeof to == 'string' ? [to] : to);
+		if (dateTime !== undefined && dateTime !== "") {
+			this.dateTime = dateTime;
+		} else {
+			this.dateTime = ISODateString(new Date());
+		}
+
+		this.status = status;
+
+        /**
+        * Send a sms imdn message to the other imdn messaage participant. 
+        * @param {string} imdnMessageID The message sent
+        * @param {string} status The message sent
+        */
+		this.sendMessage = function () {
+			console.log("sending message: imdnMessageID:" + this.imdnMessageID + ", status: " + this.status + ", targetAOR: " + this.targetAOR);
+			this.session.adapter.sendSmsIMDNMessage(this, this.targetAOR, this.imdnMessageID, this.status, this.dateTime);
+		};
+	}
+	
+		
+	function ISODateString(d) {
+		function pad(n) {
+			return n < 10 ? '0' + n : n
+		}
+		return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-'
+				+ pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':'
+				+ pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds());
+	};
+
+	function generateImdnMessageID(n) {
+		var chars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A',
+				'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
+				'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
+		var randomStr = "";
+		var timestamp = new Date().getTime();
+		for (var i = 0; i < n; i++) {
+			var id = Math.ceil(Math.random() * 35);
+			randomStr += chars[id];
+		}
+		return timestamp + randomStr;
+	};
+
+	/**
 	* @summary Provides access to methods for managing an outgoing or incoming chat
 	* @classdesc Chat objects are obtained by calling the {@Link orca.Session#createChat}
 	* method or handling the onIncomingChat event of a connected {@Link orca.Session} instance
@@ -6727,26 +7090,28 @@
 		createSession: function (userid, token, sessionConfig, callback) {
 			var config = {
 				uri: sessionConfig.uri,
-				mediatypes: sessionConfig.mediatypes,
+				mediatypes: sessionConfig.mediatypes || 'audio',
 				providerConfig: {}
 			};
 			var fields = [
-				'interfaceType', 'stun', 'bundle', 'crypto', 'conferenceFactoryURI',
+				'interfaceType', 'sendAuthOnInitReg', 'sendAuthOnReregDereg', 'reUseCallidInReregDereg',
+				'stun', 'bundle', 'crypto', 'conferenceFactoryURI',
 				'expires', 'addCodecs', 'dtmf', 'dtmfDuration', 'dtmfGap',
 				'audioBandwidth', 'videoBandwidth', 'dataBandwidth', 'audioCodecs', 'videoCodecs',
 				'persistentPC', 'breaker', 'stripExtraSSRC', 'confWorkaroundChrome', 'useFirstCandidate',
-				'removeIPV6Candidates', 'autoAnswerTime', 'maxRecoveryAttempts', 'networkRetryInterval', 'sendRegisterOnRecovery',
+				'removeIPV6Candidates', 'enableIMDNCapability', 'autoAnswerTime', 'maxRecoveryAttempts', 'networkRetryInterval', 'sendRegisterOnRecovery',
 				'registerResponseTime', 'registerRefreshTime', 'msidHandling', 'crlfKeepAliveInterval', 'enableMDSPsupport',
-				'secondaryDeviceId'
+				'secondaryDeviceId', 'dtmfWorkaround'
 			];
 			var values = [
-				'SIP-WS', '', false, 'dtls-srtp', '',
+				'SIP-WS', false, true, true,
+				'', false, 'dtls-srtp', '',
 				'600', true, 'inband', '100', '70',
 				'', '', '', '', '',
 				true, false, true, false, false,
-				true, 0, 5, 5, false,
-				0, 0, true, 0, false,
-				'mobility="fixed"'
+				true, true, 0, 5, 5, false,
+				0, 0, '1', 0, false,
+				'mobility="fixed"', true
 			];
 
 			for (var i=0; i < fields.length; i++) {
Index: sip.js
===================================================================
--- sip.js	(revision 62)
+++ sip.js	(working copy)
@@ -458,7 +458,7 @@
     
     sip._ipv4 = /^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/;
     sip._ipToParts = function(data) {
-        var array = data.match(this._ipv4);
+        var array = (typeof data === 'string') ? data.match(this._ipv4) : null;
         if (array == null)
             return false;
         array = sip.filter(function(x) { return x < 256; }, sip.map(parseInt, sip.list_slice(array, 1)));
@@ -611,7 +611,7 @@
             this.parse(value);
     }
     
-    Address._syntax = [/^([a-zA-Z0-9\-\.\_\+\~\ \t]*)<([^>]+)>/, /^"([^"]+)"[\ \t]*<([^>]+)>/, /^[\ \t]*()([^;]+)/];
+    Address._syntax = [/^([a-zA-Z0-9\-\.\_\+\~\ \t]*)<([^>]+)>/, /^"([^"]*)"[\ \t]*<([^>]+)>/, /^[\ \t]*()([^;]+)/];
     
     Address.prototype.parse = function(value) {
         if (value.substr(0, 1) == '*') {
@@ -769,11 +769,27 @@
                 }
                 var sep1 = params.indexOf('=', index);
                 var sep2 = params.indexOf(';', index);
-                if (sep2 < 0) {
-                    sep2 = length;
-                }
+
+		  if (sep2 < 0) {
+		     sep2 = params.indexOf(',', index);
+		     if (sep2 < 0) {
+			sep2 = length;
+		     }
+		  }
+
                 var n = "", v = "";
                 if (sep1 >= 0 && sep1 < sep2) {
+
+		    // Begin ALU
+		    while (   ( params[index] == ',' )
+			   || ( params[index] == ' ' )
+			   || ( params[index] == ';' )
+			   || ( params[index] == '\r' ) )
+		    {
+			++index;
+		    }
+		    // End ALU
+
                     n = sip.str_strip(params.substring(index, sep1).toLowerCase());
                     if (params.charAt(sep1+1) == '"') {
                         sep1 += 1;
@@ -1159,7 +1175,9 @@
         if (body) {
             this.setBody(body);
         
-            if (bodyLen != body.length) {
+            var utf8ByteLength = Message.utf8ByteLength(body);
+            //if (bodyLen != body.length) {
+            if (bodyLen != utf8ByteLength) {
                 throw new String("invalid content length " + bodyLen + " != " + body.length);
             }
         }
@@ -1283,8 +1301,27 @@
     
     Message.prototype.setBody = function(value) {
         this.body = value;
-        this.setItem("Content-Length", new sip.Header(value ? "" + value.length : 0, "Content-Length"));
+        var messageLength = Message.utf8ByteLength(value);
+        //this.setItem("Content-Length", new sip.Header(value ? "" + value.length : 0, "Content-Length"));
+        this.setItem("Content-Length", new sip.Header(value ? "" + messageLength : 0, "Content-Length"));
     };
+
+    Message.utf8ByteLength = function(s) {
+        var totalLength = 0;
+        var i;
+        var charCode;
+        for (i = 0; i < s.length; i++) {
+            charCode = s.charCodeAt(i);
+            if (charCode < 0x007f) {
+                totalLength = totalLength + 1;
+            } else if ((0x0080 <= charCode) && (charCode <= 0x07ff)) {
+                totalLength += 2;
+            } else if ((0x0800 <= charCode) && (charCode <= 0xffff)) {
+                totalLength += 3;
+            }
+        }
+        return totalLength;
+    } 
     
     // staticmethod
     Message._populateMessage = function(m, headers, content) {
@@ -2391,7 +2428,15 @@
             }
         }
 
-        if (!present && a['realm'] !== undefined) {
+	/*
+         *  Resend with new authorization if the request (var b) carried an Authorization header
+         *  and the response (var a) carried an Authenticate header
+         *  or if the request did not carry any authorization header.
+         */
+	if (   (   ( present )
+                || ( b == undefined ) )
+                && ( a['realm'] !== undefined ) )
+        {
             var result = this.stack.authenticate(this, a);
             if (!result || a['password'] === undefined && a['hashValue'] === undefined) {
                 return false;
Index: sipAdapter.js
===================================================================
--- sipAdapter.js	(revision 62)
+++ sipAdapter.js	(working copy)
@@ -291,7 +291,19 @@
 		       if(pAccessNetworkInfoHeader){
 		            request.setItem('P-Access-Network-Info', new sip.Header(pAccessNetworkInfoHeader, 'P-Access-Network-Info'));
 		       }
-            }else{
+            }
+	    else
+	    {
+		/*
+		 *  For IMS Authentication, the authorization header is included in the
+		 *  initial REGISTER message if configured to do so or
+		 *  if the autoAnswerTimer is running.  The autoAnswerTimer would be running
+		 *  in order to support Service Continuity scenarios where the client
+		 *  is reloaded in the middle of a call.
+		 */
+		if (   ( this.session.autoAnswerTimer )
+		    || ( this.config.providerConfig.sendAuthOnInitReg ) )
+		{
 			var authorizationParams = {
 				username : '"' + token.id + '"',  // eg. username="privid17315400048@cpr01.lucentlab.com"
 				uri : '"sip:' + userId.slice( userId.indexOf('@') + 1) + '"',  // eg. uri="sip:cpr01.lucentlab.com"
@@ -308,6 +320,7 @@
 				"response=" + authorizationParams.response + "," +
 				"algorithm=" + "MD5",
 				'Authorization'));
+		}
             }
 			//console.debug("Session.register() request = " + request);
 			//this.params.registerStatus = this.RegisterStatus.REGISTERING;
@@ -328,7 +341,10 @@
 			request = this.createRegister();
 			request.setItem('Expires', new sip.Header(this.sessionExpires.toString(), 'Expires'));
 			request.setItem('User-Agent', new sip.Header(this.userAgent, 'User-Agent'));
-			request.setItem('Call-ID', new sip.Header(this.savedCallId.toString(), 'Call-ID'));
+			if ( this.config.providerConfig.reUseCallidInReregDereg )
+			{
+				request.setItem( 'Call-ID', new sip.Header(this.savedCallId.toString(), 'Call-ID'));
+			}
 			//console.debug("Session.register_refresh() request = " + request);
 
             if (this.token.authtype == "SSO-Auth") {      
@@ -343,7 +359,12 @@
 		       if(pAccessNetworkInfoHeader){
 		            request.setItem('P-Access-Network-Info', new sip.Header(pAccessNetworkInfoHeader, 'P-Access-Network-Info'));
 		       }
-            }else{
+            }
+	    else
+	    {
+		if (   ( this.session.needAuthOnReRegister )
+		    || ( this.config.providerConfig.sendAuthOnReregDereg ) )
+		{
                         // Add Authorization Header
                         var authorizationParams = {
                         	username : '"' + token.id + '"',  // eg. username="privid17315400048@cpr01.lucentlab.com"
@@ -360,6 +381,7 @@
                          	"nonce=" + authorizationParams.nonce + "," +
                         	"response=" + authorizationParams.response,
                         		'Authorization'));
+		}
              }
 
 			this.uaReg.sendRequest(request);
@@ -405,19 +427,45 @@
 			var request = this.createRegister();
 			request.setItem('Expires', new sip.Header("0", 'Expires'));
 			request.setItem('User-Agent', new sip.Header(this.userAgent, 'User-Agent'));
+
+			if ( this.config.providerConfig.reUseCallidInReregDereg )
+			{
+				request.setItem('Call-ID', new sip.Header(this.savedCallId.toString(), 'Call-ID'));
+			}
+
 			if (this.token.authtype == "SSO-Auth") {
-               var ssoAuthToken = this.token.key;
-               var authorizationHeader = ssoAuthToken.authorizationHeader;
-               var pAccessNetworkInfoHeader = ssoAuthToken.pAccessNetworkInfoHeader;
-               console.log( "authorizationHeader = " + authorizationHeader);
-               console.log( "pAccessNetworkInfoHeader = " + pAccessNetworkInfoHeader);
+				var ssoAuthToken = this.token.key;
+				var authorizationHeader = ssoAuthToken.authorizationHeader;
+				var pAccessNetworkInfoHeader = ssoAuthToken.pAccessNetworkInfoHeader;
+				console.log( "authorizationHeader = " + authorizationHeader);
+				console.log( "pAccessNetworkInfoHeader = " + pAccessNetworkInfoHeader);
 
-		       request.setItem('Authorization', new sip.Header(authorizationHeader, 'Authorization'));
-		        
-		       if(pAccessNetworkInfoHeader){
-		            request.setItem('P-Access-Network-Info', new sip.Header(pAccessNetworkInfoHeader, 'P-Access-Network-Info'));
-		       }
-            }
+				request.setItem('Authorization', new sip.Header(authorizationHeader, 'Authorization'));
+
+				if(pAccessNetworkInfoHeader){
+					request.setItem('P-Access-Network-Info', new sip.Header(pAccessNetworkInfoHeader, 'P-Access-Network-Info'));
+				}
+			} else {
+				if ( this.config.providerConfig.sendAuthOnReregDereg )
+				{
+					// Add Authorization Header
+					var authorizationParams = {
+					username : '"' + token.id + '"',  // eg. username="privid17315400048@cpr01.lucentlab.com"
+					uri : '"sip:' + userId.slice( userId.indexOf('@') + 1) + '"',  // eg. uri="sip:cpr01.lucentlab.com"
+					realm : '"' + userId.slice( userId.indexOf('@') + 1) + '"', // eg. realm="cpr01.lucentlab.com"
+					nonce : '""',
+					response : '""'};
+
+					request.setItem('Authorization', new sip.Header(
+						"Digest " +
+						"username=" + authorizationParams.username + "," +
+						"realm=" + authorizationParams.realm + "," +
+						"uri=" + authorizationParams.uri + "," +
+						"nonce=" + authorizationParams.nonce + "," +
+						"response=" + authorizationParams.response,
+						'Authorization'));
+				}
+			}
 			//console.debug("Session.unregister() request = " + request);
 			//this.params.registerStatus = "unregistering";
 			this.uaReg.sendRequest(request);
@@ -648,7 +696,20 @@
 			if (method === 'REGISTER') {
 				this.receivedRegisterResponse(ua, response);
 			} else if (method === 'MESSAGE') {
-				this.receivedPageModeMessageResponse(ua, response);
+				if ( ua.request.getItem('Content-Type').value === "message/cpim" ) {
+					console.info("ua.request.body: " + ua.request.body);
+					var body = this.parseGetMessageBody(ua.request.body);			
+					var bodyContentType = this.parseGetMessageContentType(ua.request.body).trim();
+					console.log("message body: " + body);
+					console.log("bodyContentType:" + bodyContentType);
+					if (bodyContentType.trim() === "message/imdn+xml"){
+						this.receivedSmsIMDNMessageResponse( ua, response);
+					} else {
+						this.receivedSmsMessageResponse( ua, response);
+					}
+				} else {
+					this.receivedPageModeMessageResponse(ua, response);
+				}				
 			} else if (method === 'PUBLISH') {
 				this.receivedUpdatePresenceResponse(ua, response);
 			} else if (method === 'SUBSCRIBE') {
@@ -719,7 +780,19 @@
 					this.receivedNotify(ua, request);
 				}
 			} else if (method === "MESSAGE") {
-				this.receivedPageModeChatMessage(ua, request);
+				var contentType = request.getItem('Content-Type').value;
+				if (contentType == 'message/cpim') {
+					// SMS Message or IMDN message
+					var bodyContentType = this.parseGetMessageContentType(request.body);
+					console.info("received request bodyContentType: " + bodyContentType);
+					if (bodyContentType.trim() === 'message/imdn+xml'){
+						this.receivedSmsIMDNMessage(ua, request);// receive imdn message
+					} else {
+						this.receivedSmsMessage(ua, request);// receive sms message
+					}
+				} else {
+					this.receivedPageModeChatMessage(ua, request);
+				}				
 			} else {
 				console.warn("Session.receivedRequest() ignoring received request [method= " + method + ", callID = " + request.getItem("call-id").value + "]");
 				if (method !== 'ACK') {
@@ -1068,6 +1141,10 @@
 			} else {
 				header.username = this.token.id;
 				header.password = this.token.key;
+				if ( !(header.hasItem('algorithm')) )
+				{
+					header.algorithm = "MD5";
+				}
 				return true;
 			}
 		};
@@ -1230,6 +1307,114 @@
 			uaCall.sendRequest(request);
 		};
 		
+		/**
+		* @summary Sends a SIP request MESSAGE to the chatee.
+		*/
+		this.sendSmsMessage = function (call, dest, imdnMessageID, dateTime, message) {
+			console.info('sipAdapter.sendSmsMessage');
+			var uaCall, request, contact, rls, idx, mtp;
+			uaCall = new sip.UserAgent(this.stack);
+			if (dest.length === 1) {
+				uaCall.remoteParty = new sip.Address(dest[0]);
+			} else {
+				uaCall.remoteParty = new sip.Address(this.session.config.providerConfig.conferenceFactoryURI);
+			}
+			uaCall.localParty = new sip.Address(this.localAOR);
+			if (this.config.providerConfig.breaker) {
+				uaCall.breaker = true;
+			}
+			
+			request = uaCall.createRequest('MESSAGE');
+			call.callId = request.getItem("call-id").value;
+			contact = new sip.Header((new sip.Address(this.localAOR)).uri.toString(), 'Contact');
+			contact.setItem('gr', this.session.instanceId);
+			request.setItem('User-Agent', new sip.Header(this.userAgent, 'User-Agent'));
+			
+			var messageBody = '';
+			//var dateTime = new Date().toUTCString();
+			messageBody += 'From: <' + this.localAOR +'>\r\n';
+			messageBody += 'To: <' + dest[0]+'>\r\n';
+			messageBody += 'DateTime:' + dateTime +'\r\n';
+			messageBody += 'NS: imdn <urn:ietf:params:imdn>\r\n';
+			messageBody += 'imdn.Message-ID:'+ imdnMessageID + '\r\n';
+			messageBody += 'imdn.Disposition-Notification: positive-delivery, negative-delivery\r\n';
+			messageBody += 'Content-type: text/plain\r\n';
+			messageBody += 'Content-Length:' + message.length + '\r\n\r\n';
+			messageBody += message +'\r\n';
+			console.info(messageBody.length);
+
+			if (dest.length === 1) {
+				// we have a unique callee
+				request.setItem('Content-Type', new sip.Header("message/cpim", 'Content-Type'));
+				request.setBody(messageBody);
+			} else {
+				console.info('multiple dest');
+			}
+			uaCall.sendRequest(request);
+		};
+		
+		this.sendSmsIMDNMessage = function (call, dest, imdnMessageID, status, dateTime) {
+			console.info('sipAdapter.sendSmsIMDNMessage');
+			var uaCall, request, contact, rls, idx, mtp;
+			uaCall = new sip.UserAgent(this.stack);
+			if (dest.length === 1) {
+				uaCall.remoteParty = new sip.Address(dest[0]);
+			} else {
+				uaCall.remoteParty = new sip.Address(this.session.config.providerConfig.conferenceFactoryURI);
+			}
+			uaCall.localParty = new sip.Address(this.localAOR);
+			if (this.config.providerConfig.breaker) {
+				uaCall.breaker = true;
+			}
+			
+			request = uaCall.createRequest('MESSAGE');
+			call.callId = request.getItem("call-id").value;
+			contact = new sip.Header((new sip.Address(this.localAOR)).uri.toString(), 'Contact');
+			contact.setItem('gr', this.session.instanceId);
+			request.setItem('User-Agent', new sip.Header(this.userAgent, 'User-Agent'));
+			
+			var indexStr = this.localAOR.indexOf(":");
+			var recipientUri = '';
+			if (indexStr >= 0) {
+				recipientUri = "im:" + this.localAOR.substr(indexStr + 1);
+			} else {
+				recipientUri = "im:" + this.localAOR;
+			}
+			
+			var message = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n"
+					+"<imdn xmlns=\"urn:ietf:params:xml:ns:imdn\">\r\n"
+					+"<message-id>" + imdnMessageID + "</message-id>\r\n"
+					+"<datetime>" + dateTime + "</datetime>\r\n"
+					+"<recipient-uri>" + recipientUri + "</recipient-uri>\r\n"
+					+"<original-recipient-uri>" + recipientUri + "</original-recipient-uri>\r\n"
+					+"<delivery-notification>\r\n" 
+					+"<status>" + "<" + status + "/>" +"</status>\r\n"
+					+"</delivery-notification>\r\n"
+  			        +"</imdn>\r\n";  			
+ 			
+			var messageBody = '';
+			messageBody += 'From: <' + this.localAOR +'>\r\n';
+			messageBody += 'To: <' + dest[0]+'>\r\n';
+			messageBody += 'NS: imdn <urn:ietf:params:imdn>\r\n';
+			messageBody += 'imdn.Message-ID:'+ imdnMessageID +'\r\n';
+			messageBody += 'Content-type: message/imdn+xml\r\n';
+			messageBody += 'Content-Disposition: notification\r\n';			
+			messageBody += 'Content-Length:' + message.length + '\r\n\r\n';
+			messageBody += message +'\r\n';
+			console.info(messageBody.length);
+
+			if (dest.length === 1) {
+				// we have a unique callee
+				request.setItem('Content-Type', new sip.Header("message/cpim", 'Content-Type'));
+				request.setBody(messageBody);
+			//    callParams.isConferenceCall = false;
+			} else {
+				console.info('multiple dest');
+			}
+
+			uaCall.sendRequest(request);
+		};
+		
 		 /**
 		 * @summary Creates and sends a SIP request for presence.
 		 * @private
@@ -1616,8 +1801,56 @@
 
 			uaCall.sendResponse(response);
 		};
+		
+		/**
+		 * @summary Creates and sends a SIP MESSAGE 200 OK response.
+		 */
+		this.sendSmsMessageResponse = function (uaCall, code, status) {
+			console.debug("sendSmsMessageResponse()");
+			if(!uaCall){
+				console.error('uaCall is null');
+				return;
+			}
 
+			if (code !== 200) {
+				uaCall.sendResponse(uaCall.createResponse(code, status));
+				return;
+			}
+			var response, contact;
+			response = uaCall.createResponse(200, 'OK');
+			contact = new sip.Header((new sip.Address(this.localAOR)).uri.toString(), 'Contact');
+			contact.value.uri.param.gr = this.session.mdsp.myOwnGruu;
+			response.setItem('Contact', contact);
+			response.setItem('User-Agent', new sip.Header(this.userAgent, 'User-Agent'));
+
+			uaCall.sendResponse(response);
+		};
+		
 		/**
+		 * @summary Creates and sends a SIP MESSAGE 200 OK response.
+		 */
+		this.sendSmsIMDNMessageResponse = function (uaCall, code, status) {
+			console.debug("sendSmsIMDNMessageResponse()");
+			if(!uaCall){
+				console.error('uaCall is null');
+				return;
+			}
+
+			if (code !== 200) {
+				uaCall.sendResponse(uaCall.createResponse(code, status));
+				return;
+			}
+			var response, contact;
+			response = uaCall.createResponse(200, 'OK');
+			contact = new sip.Header((new sip.Address(this.localAOR)).uri.toString(), 'Contact');
+			contact.value.uri.param.gr = this.session.mdsp.myOwnGruu;
+			response.setItem('Contact', contact);
+			response.setItem('User-Agent', new sip.Header(this.userAgent, 'User-Agent'));
+
+			uaCall.sendResponse(response);
+		};
+
+		/**
 		* @summary Creates a header 'Route' from the username, for a SIP messsage.
 		* @param {string} username username
 		* @returns {sip.Header}
@@ -1654,8 +1887,159 @@
 			var evt = {name: 'message', callId: ua.callId, from: fromAddr, message: request.body, uaCall: ua, uaString: request.first('User-Agent').value, contentType: request.getItem('Content-Type').value };
 			this.session.incomingSessionEvent(evt);
 		};
+		
+		/**
+		* @summary Receives a SIP SMS MESSAGE request
+		* @param {sip.UserAgent} ua User agent instance
+		* @param {sip.Message} requset SIP request
+		* @private
+		*/
+		this.receivedSmsMessage = function (ua, request) {
+			console.log("Call.receivedSmsMessage sms message");
+			var fromAddr = request.first('From').value.uri.toString();
+			//var fromAddr = this.parseGetMessageFrom(request.body);
+			//var contact= request.getItem('contact');
+			//console.log("contact: " + contact);
+			var bodyMessage = this.parseGetMessageBody(request.body);
+			console.log("From: " + fromAddr);
+			console.log("message: " + bodyMessage);
+			
+			var imdnMessageID = this.parseGetMessageImdnID(ua.request.body);	
+			var dateTime = this.parseGetMessageDateTime(ua.request.body);
+			console.log("imdnMessageID: " + imdnMessageID);	
+			console.log("dateTime: " + dateTime);
+			
+			var evt = {name: 'message', callId: ua.callId, from: fromAddr, message: bodyMessage, uaCall: ua, uaString: request.first('User-Agent').value, 
+			contentType: request.getItem('Content-Type').value , bodyContentType: 'text/plain', imdnMessageID: imdnMessageID, dateTime: dateTime };
+			this.session.incomingSessionEvent(evt);
+		};
 
 		/**
+		* @summary Receives a SIP SMS MESSAGE request
+		* @param {sip.UserAgent} ua User agent instance
+		* @param {sip.Message} requset SIP request
+		* @private
+		*/
+		this.receivedSmsIMDNMessage = function (ua, request) {
+			console.log("Call.receivedSmsIMDNMessage sms imdn message");
+			var fromAddr = request.first('From').value.uri.toString();
+			console.log("From fromAddr: " + fromAddr);
+			console.log("message: " + request.body);
+			
+			var messageBody = this.parseGetMessageBody(request.body);
+			var smsImdnInfo = new Object();
+  			this.parseElemImdnMessage(messageBody, smsImdnInfo);
+  			console.log("xml messageId: " + smsImdnInfo.messageId);
+			console.log("xml datetime: " + smsImdnInfo.datetime);
+			console.log("xml status: " + smsImdnInfo.status);
+			
+			var evt = {name: 'message', callId: ua.callId, from: fromAddr, message: request.body, uaCall: ua, uaString: request.first('User-Agent').value, 
+			contentType: request.getItem('Content-Type').value, bodyContentType: 'message/imdn+xml', messageBody: messageBody, imdnMessageID: smsImdnInfo.messageId, dateTime:smsImdnInfo.datetime, status: smsImdnInfo.status};
+			this.session.incomingSessionEvent(evt);
+		};
+		
+		this.parseElemImdnMessage = function(xmlstr, smsImdnInfo){
+			if (window.DOMParser) {				
+				var parser=new DOMParser();
+				var xmlDoc=parser.parseFromString(xmlstr,"application/xml");				
+			  	var messageId = xmlDoc.getElementsByTagName("message-id")[0].childNodes[0].nodeValue;
+			  	var datetime = xmlDoc.getElementsByTagName("datetime")[0].childNodes[0].nodeValue;
+			  	
+			  	var element = xmlDoc.getElementsByTagName("status")[0];				  	
+			  	this.cleanWhitespace(element);
+			  	var status = "";			  	
+			  	if(element.childNodes[0] instanceof Element){//no blank
+			  		console.info("childNode is element"); 
+			  		status = xmlDoc.getElementsByTagName("status")[0].childNodes[0].tagName;   					
+   				} else if(element.childNodes[0] instanceof Text){//have blank
+   					console.info("childNodes is text");   					   					
+   				}			  				  	
+				smsImdnInfo.messageId = messageId;
+				smsImdnInfo.datetime = datetime;
+				smsImdnInfo.status = status;;
+
+			 	console.log("xml messageId: " + messageId);
+			 	console.log("xml datetime: " + datetime);
+			 	console.log("xml status: " + status);
+			 
+			}
+		};
+		
+		this.cleanWhitespace = function(element) {
+			for (var i = 0; i < element.childNodes.length; i++) {
+				var node = element.childNodes[i];
+				if (node.nodeType == 3 && !/\S/.test(node.nodeValue)) {
+					node.parentNode.removeChild(node);
+				}
+			}
+		};
+		
+		this.parseGetMessageBody = function(messageString) {
+			var indexCRLFCRLF = messageString.indexOf("\r\n\r\n");
+			var body = '';
+			if (indexCRLFCRLF >= 0) {
+				body = messageString.substr(indexCRLFCRLF + 4);
+			}
+			return body;
+		};
+
+		this.parseGetMessageFrom = function(messageString) {
+			var indexFrom = messageString.indexOf("From:");
+			var fromLine = '';
+			var from = '';
+			if (indexFrom >= 0) {
+				fromLine = messageString.substr(indexFrom);
+				var indexCRLF = fromLine.indexOf("\r\n");
+				var fromStr = fromLine.substring(5, indexCRLF).trim();
+				console.info("fromStr: " + fromStr);
+
+				var indexLeftBracket = fromStr.indexOf("<");
+				var indexRightBracket = fromStr.indexOf(">");
+				if (indexLeftBracket >= 0) {
+					from = fromStr.substring(indexLeftBracket + 1,
+							indexRightBracket);
+				} else {
+					from = fromStr;
+				}
+			}
+			return from;
+		};
+
+		this.parseGetMessageContentType = function(messageString) {
+			var indexContentType = messageString.indexOf("Content-type:");
+			var contentTypeLine = '';
+			var contentType = '';
+			if (indexContentType >= 0) {
+				contentTypeLine = messageString.substr(indexContentType);
+				var indexCRLF = contentTypeLine.indexOf("\r\n");
+				contentType = contentTypeLine.substring(13, indexCRLF);
+			}
+			return contentType;
+		};
+		this.parseGetMessageImdnID = function(messageString) {
+			var indexImdnMessageID = messageString.indexOf("imdn.Message-ID:");
+			var imdnLine = '';
+			var imdnMessageID = '';
+			if (indexImdnMessageID >= 0) {
+				imdnLine = messageString.substr(indexImdnMessageID);
+				var indexCRLF = imdnLine.indexOf("\r\n");
+				imdnMessageID = imdnLine.substring(16, indexCRLF);
+			}
+			return imdnMessageID;
+		};
+		this.parseGetMessageDateTime = function(messageString) {
+			var indexDateTime = messageString.indexOf("DateTime:");
+			var dateTimeLine = '';
+			var dateTime = '';
+			if (indexDateTime >= 0) {
+				dateTimeLine = messageString.substr(indexDateTime);
+				var indexCRLF = dateTimeLine.indexOf("\r\n");
+				dateTime = dateTimeLine.substring(9, indexCRLF);
+			}
+			return dateTime;
+		};
+
+		/**
 		* @summary Receives a SIP ACK request
 		* @param {sip.UserAgent} ua User agent instance
 		* @param {sip.Message} request SIP request
@@ -1780,6 +2164,53 @@
 			}
 		};
 		
+		/**
+		* @summary Receives a SMS MESSAGE Response
+		* @param {sip.UserAgent} ua User agent instance
+		* @param {sip.Message} response SIP response
+		* @private
+		*/
+		this.receivedSmsMessageResponse = function (ua, response) {
+			console.debug("Call.receivedSmsMessageResponse() response " + response.response);		
+			var imdnMessageID = this.parseGetMessageImdnID(ua.request.body);
+			var dateTime = this.parseGetMessageDateTime(ua.request.body);
+			var from = response.getItem('From').value.uri.toString();
+			var to = response.getItem('To').value.uri.toString();
+			console.log("imdnMessageID: " + imdnMessageID);
+			console.log("dateTime: " + dateTime);
+			console.log("from: " + from);
+			
+			event = {callId: ua.callId, from: from, imdnMessageID: imdnMessageID, dateTime:dateTime};
+			if (!response.is2xx()) {
+				this.session.onSmsMessageFailed(event);
+			} else {
+				this.session.onSmsMessageSent(event);
+			}
+		};
+		
+		this.receivedSmsIMDNMessageResponse = function (ua, response) {
+			console.debug("Call.receivedSmsIMDNMessageResponse() response " + response.response);
+			
+			var from = response.getItem('From').value.uri.toString();
+			var to = response.getItem('To').value.uri.toString();
+			console.log("from: " + from);
+			
+//			var imdnMessageID = this.parseGetMessageImdnID(ua.request.body);			
+			var messageBody = this.parseGetMessageBody(ua.request.body);
+			var smsImdnInfo = new Object();
+  			this.parseElemImdnMessage(messageBody, smsImdnInfo);
+  			console.log("imdnMessageID: " + smsImdnInfo.messageId);
+			console.log("dateTime: " + smsImdnInfo.datetime);
+			console.log("status: " + smsImdnInfo.status);
+			
+			event = {callId: ua.callId, from: from, imdnMessageID: smsImdnInfo.messageId, dateTime:smsImdnInfo.datetime, status: smsImdnInfo.status};
+			if (!response.is2xx()) {
+				this.session.onSmsIMDNMessageFailed(event);
+			} else {
+				this.session.onSmsIMDNMessageSent(event);
+			}
+		};
+		
 
 		/**
 		* @summary Receives a SIP BYE Response
@@ -2124,5 +2555,12 @@
 
 		boundary = this.createBoundary();
 	};
+	
+	function smsIMDNInfo(messageId, datetime, status) {
+		this.messageId = messageId;
+		this.datetime = datetime;
+		this.status = status;
+	};
+	
 	orcaALU.SipAdapter = SipAdapter;
 }());
Index: sipMsrp.js
===================================================================
--- sipMsrp.js	(revision 62)
+++ sipMsrp.js	(working copy)
@@ -1150,8 +1150,8 @@
 		this.transactions = {};
 		this.msrpBuffer = "" ;
 
-		this.send = function(message) {
-			var wsWrapper = this;
+		this.send = function(message, overridePayload) {
+			var wsWrapper = this, msg, cordova, filereader;
 			
 			if (message instanceof CrocMSRP.Message.Request && message.method !== 'REPORT') {
 				//Raju: move it to successful send case only
@@ -1160,8 +1160,23 @@
 				//console.debug("Timer for transaction '" +  message.tid + "' set") ;
 			}
 			
+			if (overridePayload) {
+				msg = overridePayload;
+			} else {
+				msg = message.encode();
+				cordova = window.cordova;
+				if (cordova && cordova.plugins && cordova.plugins.iosrtc && msg instanceof Blob) {
+					console.log('iosrtc plugin does not allow send Blob. convert to ArrayBuffer.');
+					filereader = new FileReader();
+					filereader.onload = function () {
+						wsWrapper.send(message, this.result);
+					};
+					filereader.readAsArrayBuffer(msg);
+					return true;
+				}
+			}
 			try {
-				this.sipmsrp.comm.wrappedCall.sendMessage(message.encode());
+				this.sipmsrp.comm.wrappedCall.sendMessage(msg);
 				//this.ws.send(message.encode());
 				//Raju: Now set the transaction for req only
 				if(message.method == 'SEND') {
